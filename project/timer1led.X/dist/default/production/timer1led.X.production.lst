

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 29 14:48:25 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  000E                     _TMR1	set	14
   207  0010                     _T1CON	set	16
   208  0008                     _PORTD	set	8
   209  0006                     _PORTB	set	6
   210  0060                     _TMR1IF	set	96
   211  0046                     _RD6	set	70
   212  0045                     _RD5	set	69
   213  0047                     _RD7	set	71
   214  0088                     _TRISD	set	136
   215  0086                     _TRISB	set	134
   216  0189                     _ANSELH	set	393
   217                           
   218                           	psect	cinit
   219  07EE                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07EE                     __initialization:
   223                           
   224                           ; Clear objects allocated to BANK0
   225  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   226  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   227  07F0  01A0               	clrf	__pbssBANK0& (0+127)
   228  07F1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   229  07F2  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   230  07F3  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   231  07F4  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   232  07F5  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   233  07F6  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   234  07F7  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   235  07F8  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   236  07F9  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   237  07FA  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   238  07FB  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2F42   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247  0020                     __pbssBANK0:
   248  0020                     _min:
   249  0020                     	ds	2
   250  0022                     _sec:
   251  0022                     	ds	2
   252  0024                     _e:
   253  0024                     	ds	2
   254  0026                     _b:
   255  0026                     	ds	2
   256  0028                     _a:
   257  0028                     	ds	2
   258  002A                     _count:
   259  002A                     	ds	2
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:
   263  0070                     ?_pulse:
   264  0070                     ??_pulse:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?___awmod:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ___awmod@divisor:	
   274                           ; 2 bytes @ 0x0
   275                           
   276                           
   277                           ; 2 bytes @ 0x0
   278  0070                     	ds	2
   279  0072                     ?_lcd:
   280  0072                     lcd@a:	
   281                           ; 1 bytes @ 0x2
   282                           
   283  0072                     ___awmod@dividend:	
   284                           ; 2 bytes @ 0x2
   285                           
   286                           
   287                           ; 2 bytes @ 0x2
   288  0072                     	ds	2
   289  0074                     ??___awmod:
   290  0074                     lcd@b:	
   291                           ; 1 bytes @ 0x4
   292                           
   293                           
   294                           ; 2 bytes @ 0x4
   295  0074                     	ds	1
   296  0075                     ___awmod@counter:
   297                           
   298                           ; 1 bytes @ 0x5
   299  0075                     	ds	1
   300  0076                     ??_lcd:
   301  0076                     ___awmod@sign:	
   302                           ; 1 bytes @ 0x6
   303                           
   304                           
   305                           ; 1 bytes @ 0x6
   306  0076                     	ds	1
   307  0077                     ?___awdiv:
   308  0077                     ___awdiv@divisor:	
   309                           ; 2 bytes @ 0x7
   310                           
   311                           
   312                           ; 2 bytes @ 0x7
   313  0077                     	ds	2
   314  0079                     ___awdiv@dividend:
   315                           
   316                           ; 2 bytes @ 0x9
   317  0079                     	ds	2
   318  007B                     ??___awdiv:
   319                           
   320                           ; 1 bytes @ 0xB
   321  007B                     	ds	1
   322  007C                     ??_display:
   323  007C                     _display$666:	
   324                           ; 1 bytes @ 0xC
   325                           
   326                           
   327                           ; 2 bytes @ 0xC
   328  007C                     	ds	2
   329  007E                     ??_main:
   330                           
   331                           	psect	cstackBANK0
   332  002C                     __pcstackBANK0:	
   333                           ; 1 bytes @ 0xE
   334                           
   335  002C                     ___awdiv@counter:
   336                           
   337                           ; 1 bytes @ 0x0
   338  002C                     	ds	1
   339  002D                     ___awdiv@sign:
   340                           
   341                           ; 1 bytes @ 0x1
   342  002D                     	ds	1
   343  002E                     ___awdiv@quotient:
   344                           
   345                           ; 2 bytes @ 0x2
   346  002E                     	ds	2
   347  0030                     ?_display:
   348  0030                     display@c:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 2 bytes @ 0x4
   353  0030                     	ds	2
   354  0032                     display@d:
   355                           
   356                           ; 2 bytes @ 0x6
   357  0032                     	ds	2
   358                           
   359                           	psect	maintext
   360  0742                     __pmaintext:	
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 40 in file "timer1lcd.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels required when called: 3
   386 ;; This function calls:
   387 ;;		_display
   388 ;;		_lcd
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _main
   396  0742                     _main:
   397  0742                     l881:	
   398                           ;incstack = 0
   399                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   400                           
   401                           
   402                           ;timer1lcd.c: 42:    TRISB=0x00;
   403  0742  1683               	bsf	3,5	;RP0=1, select bank1
   404  0743  1303               	bcf	3,6	;RP1=0, select bank1
   405  0744  0186               	clrf	6	;volatile
   406                           
   407                           ;timer1lcd.c: 43:    PORTB=0x00;
   408  0745  1283               	bcf	3,5	;RP0=0, select bank0
   409  0746  1303               	bcf	3,6	;RP1=0, select bank0
   410  0747  0186               	clrf	6	;volatile
   411                           
   412                           ;timer1lcd.c: 44:    TRISD=0x00;
   413  0748  1683               	bsf	3,5	;RP0=1, select bank1
   414  0749  1303               	bcf	3,6	;RP1=0, select bank1
   415  074A  0188               	clrf	8	;volatile
   416                           
   417                           ;timer1lcd.c: 45:    PORTD=0x00;
   418  074B  1283               	bcf	3,5	;RP0=0, select bank0
   419  074C  1303               	bcf	3,6	;RP1=0, select bank0
   420  074D  0188               	clrf	8	;volatile
   421                           
   422                           ;timer1lcd.c: 46:    ANSELH=0x00;
   423  074E  1683               	bsf	3,5	;RP0=1, select bank3
   424  074F  1703               	bsf	3,6	;RP1=1, select bank3
   425  0750  0189               	clrf	9	;volatile
   426  0751                     l883:
   427                           
   428                           ;timer1lcd.c: 47:    T1CON=0x39;
   429  0751  3039               	movlw	57
   430  0752  1283               	bcf	3,5	;RP0=0, select bank0
   431  0753  1303               	bcf	3,6	;RP1=0, select bank0
   432  0754  0090               	movwf	16	;volatile
   433  0755                     l885:
   434                           
   435                           ;timer1lcd.c: 48:    lcd(0x38,0);
   436  0755  3038               	movlw	56
   437  0756  00F2               	movwf	lcd@a
   438  0757  3000               	movlw	0
   439  0758  00F3               	movwf	lcd@a+1
   440  0759  3000               	movlw	0
   441  075A  00F4               	movwf	lcd@b
   442  075B  00F5               	movwf	lcd@b+1
   443  075C  120A  118A  25B5  120A  118A  	fcall	_lcd
   444  0761                     l887:
   445                           
   446                           ;timer1lcd.c: 49:    lcd(0x0e,0);
   447  0761  300E               	movlw	14
   448  0762  00F2               	movwf	lcd@a
   449  0763  3000               	movlw	0
   450  0764  00F3               	movwf	lcd@a+1
   451  0765  3000               	movlw	0
   452  0766  00F4               	movwf	lcd@b
   453  0767  00F5               	movwf	lcd@b+1
   454  0768  120A  118A  25B5  120A  118A  	fcall	_lcd
   455  076D                     l889:
   456                           
   457                           ;timer1lcd.c: 51:    TMR1=3036;
   458  076D  300B               	movlw	11
   459  076E  1283               	bcf	3,5	;RP0=0, select bank0
   460  076F  1303               	bcf	3,6	;RP1=0, select bank0
   461  0770  008F               	movwf	15	;volatile
   462  0771  30DC               	movlw	220
   463  0772  008E               	movwf	14	;volatile
   464  0773                     l891:
   465                           
   466                           ;timer1lcd.c: 53:    {;timer1lcd.c: 54:        if(TMR1IF==1)
   467  0773  1283               	bcf	3,5	;RP0=0, select bank0
   468  0774  1303               	bcf	3,6	;RP1=0, select bank0
   469  0775  1C0C               	btfss	12,0	;volatile
   470  0776  2F78               	goto	u471
   471  0777  2F79               	goto	u470
   472  0778                     u471:
   473  0778  2F84               	goto	l899
   474  0779                     u470:
   475  0779                     l893:
   476                           
   477                           ;timer1lcd.c: 55:       {;timer1lcd.c: 56:           count++;
   478  0779  3001               	movlw	1
   479  077A  07AA               	addwf	_count,f
   480  077B  1803               	skipnc
   481  077C  0AAB               	incf	_count+1,f
   482  077D  3000               	movlw	0
   483  077E  07AB               	addwf	_count+1,f
   484  077F                     l895:
   485                           
   486                           ;timer1lcd.c: 57:           TMR1IF=0;
   487  077F  100C               	bcf	12,0	;volatile
   488  0780                     l897:
   489                           
   490                           ;timer1lcd.c: 58:           TMR1=78;
   491  0780  3000               	movlw	0
   492  0781  008F               	movwf	15	;volatile
   493  0782  304E               	movlw	78
   494  0783  008E               	movwf	14	;volatile
   495  0784                     l899:
   496                           
   497                           ;timer1lcd.c: 60:        if(count==2)
   498  0784  3002               	movlw	2
   499  0785  062A               	xorwf	_count,w
   500  0786  042B               	iorwf	_count+1,w
   501  0787  1D03               	btfss	3,2
   502  0788  2F8A               	goto	u481
   503  0789  2F8B               	goto	u480
   504  078A                     u481:
   505  078A  2F93               	goto	l905
   506  078B                     u480:
   507  078B                     l901:
   508                           
   509                           ;timer1lcd.c: 61:        {;timer1lcd.c: 62:            sec++;
   510  078B  3001               	movlw	1
   511  078C  07A2               	addwf	_sec,f
   512  078D  1803               	skipnc
   513  078E  0AA3               	incf	_sec+1,f
   514  078F  3000               	movlw	0
   515  0790  07A3               	addwf	_sec+1,f
   516  0791                     l903:
   517                           
   518                           ;timer1lcd.c: 63:            count=0;
   519  0791  01AA               	clrf	_count
   520  0792  01AB               	clrf	_count+1
   521  0793                     l905:
   522                           
   523                           ;timer1lcd.c: 65:       if(sec>=60)
   524  0793  0823               	movf	_sec+1,w
   525  0794  3A80               	xorlw	128
   526  0795  00FF               	movwf	btemp+1
   527  0796  3080               	movlw	128
   528  0797  027F               	subwf	btemp+1,w
   529  0798  1D03               	skipz
   530  0799  2F9C               	goto	u495
   531  079A  303C               	movlw	60
   532  079B  0222               	subwf	_sec,w
   533  079C                     u495:
   534  079C  1C03               	skipc
   535  079D  2F9F               	goto	u491
   536  079E  2FA0               	goto	u490
   537  079F                     u491:
   538  079F  2FAA               	goto	l911
   539  07A0                     u490:
   540  07A0                     l907:
   541                           
   542                           ;timer1lcd.c: 66:       {;timer1lcd.c: 67:           sec=0;
   543  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   544  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   545  07A2  01A2               	clrf	_sec
   546  07A3  01A3               	clrf	_sec+1
   547  07A4                     l909:
   548                           
   549                           ;timer1lcd.c: 68:           min++;
   550  07A4  3001               	movlw	1
   551  07A5  07A0               	addwf	_min,f
   552  07A6  1803               	skipnc
   553  07A7  0AA1               	incf	_min+1,f
   554  07A8  3000               	movlw	0
   555  07A9  07A1               	addwf	_min+1,f
   556  07AA                     l911:
   557                           
   558                           ;timer1lcd.c: 70:       if(min>=60)
   559  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   560  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   561  07AC  0821               	movf	_min+1,w
   562  07AD  3A80               	xorlw	128
   563  07AE  00FF               	movwf	btemp+1
   564  07AF  3080               	movlw	128
   565  07B0  027F               	subwf	btemp+1,w
   566  07B1  1D03               	skipz
   567  07B2  2FB5               	goto	u505
   568  07B3  303C               	movlw	60
   569  07B4  0220               	subwf	_min,w
   570  07B5                     u505:
   571  07B5  1C03               	skipc
   572  07B6  2FB8               	goto	u501
   573  07B7  2FB9               	goto	u500
   574  07B8                     u501:
   575  07B8  2FBD               	goto	l915
   576  07B9                     u500:
   577  07B9                     l913:
   578                           
   579                           ;timer1lcd.c: 71:       {;timer1lcd.c: 72:         min=0;
   580  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   581  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   582  07BB  01A0               	clrf	_min
   583  07BC  01A1               	clrf	_min+1
   584  07BD                     l915:
   585                           
   586                           ;timer1lcd.c: 75:       display(count,0x80);
   587  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   588  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   589  07BF  082B               	movf	_count+1,w
   590  07C0  00B1               	movwf	display@c+1
   591  07C1  082A               	movf	_count,w
   592  07C2  00B0               	movwf	display@c
   593  07C3  3080               	movlw	128
   594  07C4  00B2               	movwf	display@d
   595  07C5  3000               	movlw	0
   596  07C6  00B3               	movwf	display@d+1
   597  07C7  120A  118A  26A3  120A  118A  	fcall	_display
   598  07CC                     l917:
   599                           
   600                           ;timer1lcd.c: 76:         display(sec,0xC7);
   601  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   602  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   603  07CE  0823               	movf	_sec+1,w
   604  07CF  00B1               	movwf	display@c+1
   605  07D0  0822               	movf	_sec,w
   606  07D1  00B0               	movwf	display@c
   607  07D2  30C7               	movlw	199
   608  07D3  00B2               	movwf	display@d
   609  07D4  3000               	movlw	0
   610  07D5  00B3               	movwf	display@d+1
   611  07D6  120A  118A  26A3  120A  118A  	fcall	_display
   612  07DB                     l919:
   613                           
   614                           ;timer1lcd.c: 77:         display(min,0x8d);
   615  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   616  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   617  07DD  0821               	movf	_min+1,w
   618  07DE  00B1               	movwf	display@c+1
   619  07DF  0820               	movf	_min,w
   620  07E0  00B0               	movwf	display@c
   621  07E1  308D               	movlw	141
   622  07E2  00B2               	movwf	display@d
   623  07E3  3000               	movlw	0
   624  07E4  00B3               	movwf	display@d+1
   625  07E5  120A  118A  26A3  120A  118A  	fcall	_display
   626  07EA  2F73               	goto	l891
   627  07EB  120A  118A  2800   	ljmp	start
   628  07EE                     __end_of_main:
   629                           
   630                           	psect	text1
   631  06A3                     __ptext1:	
   632 ;; *************** function _display *****************
   633 ;; Defined at:
   634 ;;		line 28 in file "timer1lcd.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  c               2    4[BANK0 ] int 
   637 ;;  d               2    6[BANK0 ] int 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0, pclath, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       4       0       0       0
   650 ;;      Locals:         2       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0
   652 ;;      Totals:         2       4       0       0       0
   653 ;;Total ram usage:        6 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 2
   656 ;; This function calls:
   657 ;;		___awdiv
   658 ;;		___awmod
   659 ;;		_lcd
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _display
   667  06A3                     _display:
   668  06A3                     l879:	
   669                           ;incstack = 0
   670                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   671                           
   672                           
   673                           ;timer1lcd.c: 28: void display(int c,int d);timer1lcd.c: 29: {;timer1lcd.c: 30:     a=(c
      +                          /100);
   674  06A3  3064               	movlw	100
   675  06A4  00F7               	movwf	___awdiv@divisor
   676  06A5  3000               	movlw	0
   677  06A6  00F8               	movwf	___awdiv@divisor+1
   678  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   679  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   680  06A9  0831               	movf	display@c+1,w
   681  06AA  00FA               	movwf	___awdiv@dividend+1
   682  06AB  0830               	movf	display@c,w
   683  06AC  00F9               	movwf	___awdiv@dividend
   684  06AD  120A  118A  263A  120A  118A  	fcall	___awdiv
   685  06B2  0878               	movf	?___awdiv+1,w
   686  06B3  1283               	bcf	3,5	;RP0=0, select bank0
   687  06B4  1303               	bcf	3,6	;RP1=0, select bank0
   688  06B5  00A9               	movwf	_a+1
   689  06B6  0877               	movf	?___awdiv,w
   690  06B7  00A8               	movwf	_a
   691                           
   692                           ;timer1lcd.c: 31:     b=((c%100)/10);
   693  06B8  300A               	movlw	10
   694  06B9  00F7               	movwf	___awdiv@divisor
   695  06BA  3000               	movlw	0
   696  06BB  00F8               	movwf	___awdiv@divisor+1
   697  06BC  0831               	movf	display@c+1,w
   698  06BD  00F3               	movwf	___awmod@dividend+1
   699  06BE  0830               	movf	display@c,w
   700  06BF  00F2               	movwf	___awmod@dividend
   701  06C0  3064               	movlw	100
   702  06C1  00F0               	movwf	___awmod@divisor
   703  06C2  3000               	movlw	0
   704  06C3  00F1               	movwf	___awmod@divisor+1
   705  06C4  120A  118A  25E1  120A  118A  	fcall	___awmod
   706  06C9  0871               	movf	?___awmod+1,w
   707  06CA  00FA               	movwf	___awdiv@dividend+1
   708  06CB  0870               	movf	?___awmod,w
   709  06CC  00F9               	movwf	___awdiv@dividend
   710  06CD  120A  118A  263A  120A  118A  	fcall	___awdiv
   711  06D2  0878               	movf	?___awdiv+1,w
   712  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   713  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   714  06D5  00A7               	movwf	_b+1
   715  06D6  0877               	movf	?___awdiv,w
   716  06D7  00A6               	movwf	_b
   717                           
   718                           ;timer1lcd.c: 32:     e=((c%100)%10);
   719  06D8  0831               	movf	display@c+1,w
   720  06D9  00F3               	movwf	___awmod@dividend+1
   721  06DA  0830               	movf	display@c,w
   722  06DB  00F2               	movwf	___awmod@dividend
   723  06DC  3064               	movlw	100
   724  06DD  00F0               	movwf	___awmod@divisor
   725  06DE  3000               	movlw	0
   726  06DF  00F1               	movwf	___awmod@divisor+1
   727  06E0  120A  118A  25E1  120A  118A  	fcall	___awmod
   728  06E5  0871               	movf	?___awmod+1,w
   729  06E6  00FD               	movwf	_display$666+1
   730  06E7  0870               	movf	?___awmod,w
   731  06E8  00FC               	movwf	_display$666
   732                           
   733                           ;timer1lcd.c: 32:     e=((c%100)%10);
   734  06E9  300A               	movlw	10
   735  06EA  00F0               	movwf	___awmod@divisor
   736  06EB  3000               	movlw	0
   737  06EC  00F1               	movwf	___awmod@divisor+1
   738  06ED  087D               	movf	_display$666+1,w
   739  06EE  00F3               	movwf	___awmod@dividend+1
   740  06EF  087C               	movf	_display$666,w
   741  06F0  00F2               	movwf	___awmod@dividend
   742  06F1  120A  118A  25E1  120A  118A  	fcall	___awmod
   743  06F6  0871               	movf	?___awmod+1,w
   744  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   745  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   746  06F9  00A5               	movwf	_e+1
   747  06FA  0870               	movf	?___awmod,w
   748  06FB  00A4               	movwf	_e
   749                           
   750                           ;timer1lcd.c: 33:     lcd(d,0);
   751  06FC  0833               	movf	display@d+1,w
   752  06FD  00F3               	movwf	lcd@a+1
   753  06FE  0832               	movf	display@d,w
   754  06FF  00F2               	movwf	lcd@a
   755  0700  3000               	movlw	0
   756  0701  00F4               	movwf	lcd@b
   757  0702  00F5               	movwf	lcd@b+1
   758  0703  120A  118A  25B5  120A  118A  	fcall	_lcd
   759                           
   760                           ;timer1lcd.c: 34:     lcd(a+0x30,1);
   761  0708  1283               	bcf	3,5	;RP0=0, select bank0
   762  0709  1303               	bcf	3,6	;RP1=0, select bank0
   763  070A  0828               	movf	_a,w
   764  070B  3E30               	addlw	48
   765  070C  00F2               	movwf	lcd@a
   766  070D  0829               	movf	_a+1,w
   767  070E  1803               	skipnc
   768  070F  3E01               	addlw	1
   769  0710  3E00               	addlw	0
   770  0711  00F3               	movwf	lcd@a+1
   771  0712  3001               	movlw	1
   772  0713  00F4               	movwf	lcd@b
   773  0714  3000               	movlw	0
   774  0715  00F5               	movwf	lcd@b+1
   775  0716  120A  118A  25B5  120A  118A  	fcall	_lcd
   776                           
   777                           ;timer1lcd.c: 36:      lcd(b+0x30,1);
   778  071B  1283               	bcf	3,5	;RP0=0, select bank0
   779  071C  1303               	bcf	3,6	;RP1=0, select bank0
   780  071D  0826               	movf	_b,w
   781  071E  3E30               	addlw	48
   782  071F  00F2               	movwf	lcd@a
   783  0720  0827               	movf	_b+1,w
   784  0721  1803               	skipnc
   785  0722  3E01               	addlw	1
   786  0723  3E00               	addlw	0
   787  0724  00F3               	movwf	lcd@a+1
   788  0725  3001               	movlw	1
   789  0726  00F4               	movwf	lcd@b
   790  0727  3000               	movlw	0
   791  0728  00F5               	movwf	lcd@b+1
   792  0729  120A  118A  25B5  120A  118A  	fcall	_lcd
   793                           
   794                           ;timer1lcd.c: 38:       lcd(e+0x30,1);
   795  072E  1283               	bcf	3,5	;RP0=0, select bank0
   796  072F  1303               	bcf	3,6	;RP1=0, select bank0
   797  0730  0824               	movf	_e,w
   798  0731  3E30               	addlw	48
   799  0732  00F2               	movwf	lcd@a
   800  0733  0825               	movf	_e+1,w
   801  0734  1803               	skipnc
   802  0735  3E01               	addlw	1
   803  0736  3E00               	addlw	0
   804  0737  00F3               	movwf	lcd@a+1
   805  0738  3001               	movlw	1
   806  0739  00F4               	movwf	lcd@b
   807  073A  3000               	movlw	0
   808  073B  00F5               	movwf	lcd@b+1
   809  073C  120A  118A  25B5  120A  118A  	fcall	_lcd
   810  0741                     l45:
   811  0741  0008               	return
   812  0742                     __end_of_display:
   813                           
   814                           	psect	text2
   815  05B5                     __ptext2:	
   816 ;; *************** function _lcd *****************
   817 ;; Defined at:
   818 ;;		line 21 in file "timer1lcd.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  a               2    2[COMMON] int 
   821 ;;  b               2    4[COMMON] int 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         4       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0
   836 ;;      Totals:         4       0       0       0       0
   837 ;;Total ram usage:        4 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 1
   840 ;; This function calls:
   841 ;;		_pulse
   842 ;; This function is called by:
   843 ;;		_display
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _lcd
   850  05B5                     _lcd:
   851  05B5                     l791:	
   852                           ;incstack = 0
   853                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   854                           
   855                           
   856                           ;timer1lcd.c: 21: void lcd(int a,int b);timer1lcd.c: 22: {;timer1lcd.c: 23:     RD5=b;
   857  05B5  1874               	btfsc	lcd@b,0
   858  05B6  2DB8               	goto	u261
   859  05B7  2DBC               	goto	u260
   860  05B8                     u261:
   861  05B8  1283               	bcf	3,5	;RP0=0, select bank0
   862  05B9  1303               	bcf	3,6	;RP1=0, select bank0
   863  05BA  1688               	bsf	8,5	;volatile
   864  05BB  2DBF               	goto	u274
   865  05BC                     u260:
   866  05BC  1283               	bcf	3,5	;RP0=0, select bank0
   867  05BD  1303               	bcf	3,6	;RP1=0, select bank0
   868  05BE  1288               	bcf	8,5	;volatile
   869  05BF                     u274:
   870                           
   871                           ;timer1lcd.c: 24:     RD6=0;
   872  05BF  1308               	bcf	8,6	;volatile
   873  05C0                     l793:
   874                           
   875                           ;timer1lcd.c: 25:     PORTB=a;
   876  05C0  0872               	movf	lcd@a,w
   877  05C1  0086               	movwf	6	;volatile
   878  05C2                     l795:
   879                           
   880                           ;timer1lcd.c: 26:     pulse();
   881  05C2  120A  118A  25C8  120A  118A  	fcall	_pulse
   882  05C7                     l42:
   883  05C7  0008               	return
   884  05C8                     __end_of_lcd:
   885                           
   886                           	psect	text3
   887  05C8                     __ptext3:	
   888 ;; *************** function _pulse *****************
   889 ;; Defined at:
   890 ;;		line 14 in file "timer1lcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          2       0       0       0       0
   907 ;;      Totals:         2       0       0       0       0
   908 ;;Total ram usage:        2 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_lcd
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _pulse
   919  05C8                     _pulse:
   920  05C8                     l785:	
   921                           ;incstack = 0
   922                           ; Regs used in _pulse: [wreg]
   923                           
   924                           
   925                           ;timer1lcd.c: 16:     RD7=1;
   926  05C8  1283               	bcf	3,5	;RP0=0, select bank0
   927  05C9  1303               	bcf	3,6	;RP1=0, select bank0
   928  05CA  1788               	bsf	8,7	;volatile
   929  05CB                     l787:
   930                           
   931                           ;timer1lcd.c: 17:     _delay((unsigned long)((10)*(4000000/4000.0)));
   932  05CB  300D               	movlw	13
   933  05CC  00F1               	movwf	??_pulse+1
   934  05CD  30FB               	movlw	251
   935  05CE  00F0               	movwf	??_pulse
   936  05CF                     u517:
   937  05CF  0BF0               	decfsz	??_pulse,f
   938  05D0  2DCF               	goto	u517
   939  05D1  0BF1               	decfsz	??_pulse+1,f
   940  05D2  2DCF               	goto	u517
   941  05D3  2DD4               	nop2
   942  05D4                     l789:
   943                           
   944                           ;timer1lcd.c: 18:     RD7=0;
   945  05D4  1283               	bcf	3,5	;RP0=0, select bank0
   946  05D5  1303               	bcf	3,6	;RP1=0, select bank0
   947  05D6  1388               	bcf	8,7	;volatile
   948                           
   949                           ;timer1lcd.c: 19:     _delay((unsigned long)((10)*(4000000/4000.0)));
   950  05D7  300D               	movlw	13
   951  05D8  00F1               	movwf	??_pulse+1
   952  05D9  30FB               	movlw	251
   953  05DA  00F0               	movwf	??_pulse
   954  05DB                     u527:
   955  05DB  0BF0               	decfsz	??_pulse,f
   956  05DC  2DDB               	goto	u527
   957  05DD  0BF1               	decfsz	??_pulse+1,f
   958  05DE  2DDB               	goto	u527
   959  05DF  2DE0               	nop2
   960  05E0                     l39:
   961  05E0  0008               	return
   962  05E1                     __end_of_pulse:
   963                           
   964                           	psect	text4
   965  05E1                     __ptext4:	
   966 ;; *************** function ___awmod *****************
   967 ;; Defined at:
   968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  divisor         2    0[COMMON] int 
   971 ;;  dividend        2    2[COMMON] int 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  sign            1    6[COMMON] unsigned char 
   974 ;;  counter         1    5[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  2    0[COMMON] int 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         4       0       0       0       0
   985 ;;      Locals:         2       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0
   987 ;;      Totals:         7       0       0       0       0
   988 ;;Total ram usage:        7 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_display
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function ___awmod
   999  05E1                     ___awmod:
  1000  05E1                     l841:	
  1001                           ;incstack = 0
  1002                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1003                           
  1004  05E1  01F6               	clrf	___awmod@sign
  1005  05E2                     l843:
  1006  05E2  1FF3               	btfss	___awmod@dividend+1,7
  1007  05E3  2DE5               	goto	u381
  1008  05E4  2DE6               	goto	u380
  1009  05E5                     u381:
  1010  05E5  2DED               	goto	l849
  1011  05E6                     u380:
  1012  05E6                     l845:
  1013  05E6  09F2               	comf	___awmod@dividend,f
  1014  05E7  09F3               	comf	___awmod@dividend+1,f
  1015  05E8  0AF2               	incf	___awmod@dividend,f
  1016  05E9  1903               	skipnz
  1017  05EA  0AF3               	incf	___awmod@dividend+1,f
  1018  05EB                     l847:
  1019  05EB  01F6               	clrf	___awmod@sign
  1020  05EC  0AF6               	incf	___awmod@sign,f
  1021  05ED                     l849:
  1022  05ED  1FF1               	btfss	___awmod@divisor+1,7
  1023  05EE  2DF0               	goto	u391
  1024  05EF  2DF1               	goto	u390
  1025  05F0                     u391:
  1026  05F0  2DF6               	goto	l853
  1027  05F1                     u390:
  1028  05F1                     l851:
  1029  05F1  09F0               	comf	___awmod@divisor,f
  1030  05F2  09F1               	comf	___awmod@divisor+1,f
  1031  05F3  0AF0               	incf	___awmod@divisor,f
  1032  05F4  1903               	skipnz
  1033  05F5  0AF1               	incf	___awmod@divisor+1,f
  1034  05F6                     l853:
  1035  05F6  0870               	movf	___awmod@divisor,w
  1036  05F7  0471               	iorwf	___awmod@divisor+1,w
  1037  05F8  1903               	btfsc	3,2
  1038  05F9  2DFB               	goto	u401
  1039  05FA  2DFC               	goto	u400
  1040  05FB                     u401:
  1041  05FB  2E2B               	goto	l871
  1042  05FC                     u400:
  1043  05FC                     l855:
  1044  05FC  01F5               	clrf	___awmod@counter
  1045  05FD  0AF5               	incf	___awmod@counter,f
  1046  05FE  2E0A               	goto	l861
  1047  05FF                     l857:
  1048  05FF  3001               	movlw	1
  1049  0600                     u415:
  1050  0600  1003               	clrc
  1051  0601  0DF0               	rlf	___awmod@divisor,f
  1052  0602  0DF1               	rlf	___awmod@divisor+1,f
  1053  0603  3EFF               	addlw	-1
  1054  0604  1D03               	skipz
  1055  0605  2E00               	goto	u415
  1056  0606                     l859:
  1057  0606  3001               	movlw	1
  1058  0607  00F4               	movwf	??___awmod
  1059  0608  0874               	movf	??___awmod,w
  1060  0609  07F5               	addwf	___awmod@counter,f
  1061  060A                     l861:
  1062  060A  1FF1               	btfss	___awmod@divisor+1,7
  1063  060B  2E0D               	goto	u421
  1064  060C  2E0E               	goto	u420
  1065  060D                     u421:
  1066  060D  2DFF               	goto	l857
  1067  060E                     u420:
  1068  060E                     l863:
  1069  060E  0871               	movf	___awmod@divisor+1,w
  1070  060F  0273               	subwf	___awmod@dividend+1,w
  1071  0610  1D03               	skipz
  1072  0611  2E14               	goto	u435
  1073  0612  0870               	movf	___awmod@divisor,w
  1074  0613  0272               	subwf	___awmod@dividend,w
  1075  0614                     u435:
  1076  0614  1C03               	skipc
  1077  0615  2E17               	goto	u431
  1078  0616  2E18               	goto	u430
  1079  0617                     u431:
  1080  0617  2E1E               	goto	l867
  1081  0618                     u430:
  1082  0618                     l865:
  1083  0618  0870               	movf	___awmod@divisor,w
  1084  0619  02F2               	subwf	___awmod@dividend,f
  1085  061A  0871               	movf	___awmod@divisor+1,w
  1086  061B  1C03               	skipc
  1087  061C  03F3               	decf	___awmod@dividend+1,f
  1088  061D  02F3               	subwf	___awmod@dividend+1,f
  1089  061E                     l867:
  1090  061E  3001               	movlw	1
  1091  061F                     u445:
  1092  061F  1003               	clrc
  1093  0620  0CF1               	rrf	___awmod@divisor+1,f
  1094  0621  0CF0               	rrf	___awmod@divisor,f
  1095  0622  3EFF               	addlw	-1
  1096  0623  1D03               	skipz
  1097  0624  2E1F               	goto	u445
  1098  0625                     l869:
  1099  0625  3001               	movlw	1
  1100  0626  02F5               	subwf	___awmod@counter,f
  1101  0627  1D03               	btfss	3,2
  1102  0628  2E2A               	goto	u451
  1103  0629  2E2B               	goto	u450
  1104  062A                     u451:
  1105  062A  2E0E               	goto	l863
  1106  062B                     u450:
  1107  062B                     l871:
  1108  062B  0876               	movf	___awmod@sign,w
  1109  062C  1903               	btfsc	3,2
  1110  062D  2E2F               	goto	u461
  1111  062E  2E30               	goto	u460
  1112  062F                     u461:
  1113  062F  2E35               	goto	l875
  1114  0630                     u460:
  1115  0630                     l873:
  1116  0630  09F2               	comf	___awmod@dividend,f
  1117  0631  09F3               	comf	___awmod@dividend+1,f
  1118  0632  0AF2               	incf	___awmod@dividend,f
  1119  0633  1903               	skipnz
  1120  0634  0AF3               	incf	___awmod@dividend+1,f
  1121  0635                     l875:
  1122  0635  0873               	movf	___awmod@dividend+1,w
  1123  0636  00F1               	movwf	?___awmod+1
  1124  0637  0872               	movf	___awmod@dividend,w
  1125  0638  00F0               	movwf	?___awmod
  1126  0639                     l309:
  1127  0639  0008               	return
  1128  063A                     __end_of___awmod:
  1129                           
  1130                           	psect	text5
  1131  063A                     __ptext5:	
  1132 ;; *************** function ___awdiv *****************
  1133 ;; Defined at:
  1134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  divisor         2    7[COMMON] int 
  1137 ;;  dividend        2    9[COMMON] int 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  quotient        2    2[BANK0 ] int 
  1140 ;;  sign            1    1[BANK0 ] unsigned char 
  1141 ;;  counter         1    0[BANK0 ] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  2    7[COMMON] int 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         4       0       0       0       0
  1152 ;;      Locals:         0       4       0       0       0
  1153 ;;      Temps:          1       0       0       0       0
  1154 ;;      Totals:         5       4       0       0       0
  1155 ;;Total ram usage:        9 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_display
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function ___awdiv
  1166  063A                     ___awdiv:
  1167  063A                     l797:	
  1168                           ;incstack = 0
  1169                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1170                           
  1171  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1172  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1173  063C  01AD               	clrf	___awdiv@sign
  1174  063D                     l799:
  1175  063D  1FF8               	btfss	___awdiv@divisor+1,7
  1176  063E  2E40               	goto	u281
  1177  063F  2E41               	goto	u280
  1178  0640                     u281:
  1179  0640  2E48               	goto	l805
  1180  0641                     u280:
  1181  0641                     l801:
  1182  0641  09F7               	comf	___awdiv@divisor,f
  1183  0642  09F8               	comf	___awdiv@divisor+1,f
  1184  0643  0AF7               	incf	___awdiv@divisor,f
  1185  0644  1903               	skipnz
  1186  0645  0AF8               	incf	___awdiv@divisor+1,f
  1187  0646                     l803:
  1188  0646  01AD               	clrf	___awdiv@sign
  1189  0647  0AAD               	incf	___awdiv@sign,f
  1190  0648                     l805:
  1191  0648  1FFA               	btfss	___awdiv@dividend+1,7
  1192  0649  2E4B               	goto	u291
  1193  064A  2E4C               	goto	u290
  1194  064B                     u291:
  1195  064B  2E55               	goto	l811
  1196  064C                     u290:
  1197  064C                     l807:
  1198  064C  09F9               	comf	___awdiv@dividend,f
  1199  064D  09FA               	comf	___awdiv@dividend+1,f
  1200  064E  0AF9               	incf	___awdiv@dividend,f
  1201  064F  1903               	skipnz
  1202  0650  0AFA               	incf	___awdiv@dividend+1,f
  1203  0651                     l809:
  1204  0651  3001               	movlw	1
  1205  0652  00FB               	movwf	??___awdiv
  1206  0653  087B               	movf	??___awdiv,w
  1207  0654  06AD               	xorwf	___awdiv@sign,f
  1208  0655                     l811:
  1209  0655  01AE               	clrf	___awdiv@quotient
  1210  0656  01AF               	clrf	___awdiv@quotient+1
  1211  0657                     l813:
  1212  0657  0877               	movf	___awdiv@divisor,w
  1213  0658  0478               	iorwf	___awdiv@divisor+1,w
  1214  0659  1903               	btfsc	3,2
  1215  065A  2E5C               	goto	u301
  1216  065B  2E5D               	goto	u300
  1217  065C                     u301:
  1218  065C  2E94               	goto	l833
  1219  065D                     u300:
  1220  065D                     l815:
  1221  065D  01AC               	clrf	___awdiv@counter
  1222  065E  0AAC               	incf	___awdiv@counter,f
  1223  065F  2E6B               	goto	l821
  1224  0660                     l817:
  1225  0660  3001               	movlw	1
  1226  0661                     u315:
  1227  0661  1003               	clrc
  1228  0662  0DF7               	rlf	___awdiv@divisor,f
  1229  0663  0DF8               	rlf	___awdiv@divisor+1,f
  1230  0664  3EFF               	addlw	-1
  1231  0665  1D03               	skipz
  1232  0666  2E61               	goto	u315
  1233  0667                     l819:
  1234  0667  3001               	movlw	1
  1235  0668  00FB               	movwf	??___awdiv
  1236  0669  087B               	movf	??___awdiv,w
  1237  066A  07AC               	addwf	___awdiv@counter,f
  1238  066B                     l821:
  1239  066B  1FF8               	btfss	___awdiv@divisor+1,7
  1240  066C  2E6E               	goto	u321
  1241  066D  2E6F               	goto	u320
  1242  066E                     u321:
  1243  066E  2E60               	goto	l817
  1244  066F                     u320:
  1245  066F                     l823:
  1246  066F  3001               	movlw	1
  1247  0670                     u335:
  1248  0670  1003               	clrc
  1249  0671  0DAE               	rlf	___awdiv@quotient,f
  1250  0672  0DAF               	rlf	___awdiv@quotient+1,f
  1251  0673  3EFF               	addlw	-1
  1252  0674  1D03               	skipz
  1253  0675  2E70               	goto	u335
  1254  0676  0878               	movf	___awdiv@divisor+1,w
  1255  0677  027A               	subwf	___awdiv@dividend+1,w
  1256  0678  1D03               	skipz
  1257  0679  2E7C               	goto	u345
  1258  067A  0877               	movf	___awdiv@divisor,w
  1259  067B  0279               	subwf	___awdiv@dividend,w
  1260  067C                     u345:
  1261  067C  1C03               	skipc
  1262  067D  2E7F               	goto	u341
  1263  067E  2E80               	goto	u340
  1264  067F                     u341:
  1265  067F  2E87               	goto	l829
  1266  0680                     u340:
  1267  0680                     l825:
  1268  0680  0877               	movf	___awdiv@divisor,w
  1269  0681  02F9               	subwf	___awdiv@dividend,f
  1270  0682  0878               	movf	___awdiv@divisor+1,w
  1271  0683  1C03               	skipc
  1272  0684  03FA               	decf	___awdiv@dividend+1,f
  1273  0685  02FA               	subwf	___awdiv@dividend+1,f
  1274  0686                     l827:
  1275  0686  142E               	bsf	___awdiv@quotient,0
  1276  0687                     l829:
  1277  0687  3001               	movlw	1
  1278  0688                     u355:
  1279  0688  1003               	clrc
  1280  0689  0CF8               	rrf	___awdiv@divisor+1,f
  1281  068A  0CF7               	rrf	___awdiv@divisor,f
  1282  068B  3EFF               	addlw	-1
  1283  068C  1D03               	skipz
  1284  068D  2E88               	goto	u355
  1285  068E                     l831:
  1286  068E  3001               	movlw	1
  1287  068F  02AC               	subwf	___awdiv@counter,f
  1288  0690  1D03               	btfss	3,2
  1289  0691  2E93               	goto	u361
  1290  0692  2E94               	goto	u360
  1291  0693                     u361:
  1292  0693  2E6F               	goto	l823
  1293  0694                     u360:
  1294  0694                     l833:
  1295  0694  082D               	movf	___awdiv@sign,w
  1296  0695  1903               	btfsc	3,2
  1297  0696  2E98               	goto	u371
  1298  0697  2E99               	goto	u370
  1299  0698                     u371:
  1300  0698  2E9E               	goto	l837
  1301  0699                     u370:
  1302  0699                     l835:
  1303  0699  09AE               	comf	___awdiv@quotient,f
  1304  069A  09AF               	comf	___awdiv@quotient+1,f
  1305  069B  0AAE               	incf	___awdiv@quotient,f
  1306  069C  1903               	skipnz
  1307  069D  0AAF               	incf	___awdiv@quotient+1,f
  1308  069E                     l837:
  1309  069E  082F               	movf	___awdiv@quotient+1,w
  1310  069F  00F8               	movwf	?___awdiv+1
  1311  06A0  082E               	movf	___awdiv@quotient,w
  1312  06A1  00F7               	movwf	?___awdiv
  1313  06A2                     l296:
  1314  06A2  0008               	return
  1315  06A3                     __end_of___awdiv:
  1316  007E                     btemp	set	126	;btemp
  1317  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _display->___awdiv
    _lcd->_pulse
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3835
                            _display
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _display                                              6     2      4    2879
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv
                            ___awmod
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     0      4     956
                                              2 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd
       _pulse
   _lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 29 14:48:25 2023

                      _a 0028                        _b 0026                        _e 0024  
                     l42 05C7                       l45 0741                       l39 05E0  
           ___awdiv@sign 002D                      l309 0639                      l296 06A2  
                    l801 0641                      l811 0655                      l803 0646  
                    l821 066B                      l813 0657                      l805 0648  
                    l901 078B                      l831 068E                      l823 066F  
                    l815 065D                      l807 064C                      l911 07AA  
                    l903 0791                      l825 0680                      l817 0660  
                    l833 0694                      l809 0651                      l841 05E1  
                    l913 07B9                      l905 0793                      l835 0699  
                    l827 0686                      l819 0667                      l851 05F1  
                    l843 05E2                      l915 07BD                      l907 07A0  
                    l837 069E                      l829 0687                      l861 060A  
                    l853 05F6                      l845 05E6                      l917 07CC  
                    l909 07A4                      l863 060E                      l855 05FC  
                    l871 062B                      l847 05EB                      l791 05B5  
                    l919 07DB                      l873 0630                      l865 0618  
                    l857 05FF                      l849 05ED                      l785 05C8  
                    l793 05C0                      l881 0742                      l875 0635  
                    l867 061E                      l859 0606                      l787 05CB  
                    l795 05C2                      l891 0773                      l883 0751  
                    l797 063A                      l869 0625                      l789 05D4  
                    l893 0779                      l885 0755                      l799 063D  
                    l879 06A3                      l895 077F                      l887 0761  
                    l897 0780                      l889 076D                      l899 0784  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u300 065D                      u301 065C                      u320 066F  
                    u400 05FC                      u321 066E                      u401 05FB  
                    u315 0661                      u340 0680                      u420 060E  
                    u260 05BC                      u500 07B9                      u341 067F  
                    u421 060D                      u261 05B8                      u501 07B8  
                    u430 0618                      u335 0670                      u431 0617  
                    u415 0600                      u360 0694                      u280 0641  
                    u361 0693                      u345 067C                      u281 0640  
                    u505 07B5                      u370 0699                      u290 064C  
                    u450 062B                      u274 05BF                      u371 0698  
                    u355 0688                      u291 064B                      u451 062A  
                    u435 0614                      u460 0630                      u380 05E6  
                    u461 062F                      u445 061F                      u381 05E5  
                    u517 05CF                      u390 05F1                      u470 0779  
                    u391 05F0                      u527 05DB                      u471 0778  
                    u480 078B                      u481 078A                      u490 07A0  
                    u491 079F                      u495 079C                      _lcd 05B5  
                    _min 0020                      _sec 0022             ___awmod@sign 0076  
                   ?_lcd 0072                     _TMR1 000E                     _main 0742  
                   lcd@a 0072                     lcd@b 0074                     btemp 007E  
                   start 0000                    ??_lcd 0076                    ?_main 0070  
        __end_of___awdiv 06A3          __end_of___awmod 063A          ___awdiv@divisor 0077  
                  _T1CON 0010          ___awdiv@counter 002C                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
        __end_of_display 0742                    _count 002A                    _pulse 05C8  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 007E         ___awdiv@dividend 0079  
                 ?_pulse 0070                   _ANSELH 0189                   _TMR1IF 0060  
              ??___awdiv 007B                ??___awmod 0074         ___awdiv@quotient 002E  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_display 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_pulse 05E1  
                ??_pulse 0070               __pbssBANK0 0020               __pmaintext 0742  
                ___awdiv 063A                  ___awmod 05E1                  __ptext1 06A3  
                __ptext2 05B5                  __ptext3 05C8                  __ptext4 05E1  
                __ptext5 063A                  _display 06A3             __size_of_lcd 0013  
       ___awmod@dividend 0072     end_of_initialization 07FC      start_initialization 07EE  
            __end_of_lcd 05C8                ___latbits 0002            __pcstackBANK0 002C  
               ?___awdiv 0077                 ?___awmod 0070                 ?_display 0030  
         __size_of_pulse 0019              _display$666 007C         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of_display 009F            __size_of_main 00AC  
               display@c 0030                 display@d 0032  
