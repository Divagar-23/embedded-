

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 03 14:37:31 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.20
    11                           ; Generated 12/02/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F887 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  0105                     	;# 
   108  0107                     	;# 
   109  0108                     	;# 
   110  0109                     	;# 
   111  010C                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0185                     	;# 
   117  0187                     	;# 
   118  0188                     	;# 
   119  0189                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  008F                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  0105                     	;# 
   186  0107                     	;# 
   187  0108                     	;# 
   188  0109                     	;# 
   189  010C                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  0185                     	;# 
   195  0187                     	;# 
   196  0188                     	;# 
   197  0189                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0009                     _PORTE	set	9
   201  0008                     _PORTD	set	8
   202  0007                     _PORTC	set	7
   203  0006                     _PORTB	set	6
   204  0005                     _PORTA	set	5
   205  0089                     _TRISE	set	137
   206  0088                     _TRISD	set	136
   207  0087                     _TRISC	set	135
   208  0086                     _TRISB	set	134
   209  0085                     _TRISA	set	133
   210  0189                     _ANSELH	set	393
   211  0188                     _ANSEL	set	392
   212                           
   213                           	psect	cinit
   214  07FC                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07FC                     __initialization:
   218  07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  07FC                     __end_of__initialization:
   222  07FC  0183               	clrf	3
   223  07FD  120A  118A  2EF6   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:
   227  0070                     ?_delay:
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     delay@j:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           ; 2 bytes @ 0x0
   236  0070                     	ds	2
   237  0072                     ??_delay:
   238  0072                     ??_main:	
   239                           ; 1 bytes @ 0x2
   240                           
   241                           
   242                           ; 1 bytes @ 0x2
   243  0072                     	ds	1
   244  0073                     main@i:
   245                           
   246                           ; 2 bytes @ 0x3
   247  0073                     	ds	2
   248  0075                     main@j:
   249                           
   250                           ; 2 bytes @ 0x5
   251  0075                     	ds	2
   252  0077                     main@k:
   253                           
   254                           ; 2 bytes @ 0x7
   255  0077                     	ds	2
   256  0079                     main@l:
   257                           
   258                           ; 2 bytes @ 0x9
   259  0079                     	ds	2
   260  007B                     main@m:
   261                           
   262                           ; 2 bytes @ 0xB
   263  007B                     	ds	2
   264                           
   265                           	psect	maintext
   266  06F6                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 15 in file "foorloop.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  m               2   11[COMMON] int 
   277 ;;  l               2    9[COMMON] int 
   278 ;;  k               2    7[COMMON] int 
   279 ;;  j               2    5[COMMON] int 
   280 ;;  i               2    3[COMMON] int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:        10       0       0       0       0
   292 ;;      Temps:          1       0       0       0       0
   293 ;;      Totals:        11       0       0       0       0
   294 ;;Total ram usage:       11 bytes
   295 ;; Hardware stack levels required when called: 1
   296 ;; This function calls:
   297 ;;		_delay
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           
   304                           ;psect for function _main
   305  06F6                     _main:
   306  06F6                     l718:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   309                           
   310                           
   311                           ;foorloop.c: 17:     TRISA=0x00;
   312  06F6  1683               	bsf	3,5	;RP0=1, select bank1
   313  06F7  1303               	bcf	3,6	;RP1=0, select bank1
   314  06F8  0185               	clrf	5	;volatile
   315                           
   316                           ;foorloop.c: 18:     PORTA=0x00;
   317  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   318  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   319  06FB  0185               	clrf	5	;volatile
   320                           
   321                           ;foorloop.c: 19:     TRISB=0x00;
   322  06FC  1683               	bsf	3,5	;RP0=1, select bank1
   323  06FD  1303               	bcf	3,6	;RP1=0, select bank1
   324  06FE  0186               	clrf	6	;volatile
   325                           
   326                           ;foorloop.c: 20:     PORTB=0x00;
   327  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   328  0700  1303               	bcf	3,6	;RP1=0, select bank0
   329  0701  0186               	clrf	6	;volatile
   330                           
   331                           ;foorloop.c: 21:     TRISC=0x00;
   332  0702  1683               	bsf	3,5	;RP0=1, select bank1
   333  0703  1303               	bcf	3,6	;RP1=0, select bank1
   334  0704  0187               	clrf	7	;volatile
   335                           
   336                           ;foorloop.c: 22:     PORTC=0x00;
   337  0705  1283               	bcf	3,5	;RP0=0, select bank0
   338  0706  1303               	bcf	3,6	;RP1=0, select bank0
   339  0707  0187               	clrf	7	;volatile
   340                           
   341                           ;foorloop.c: 23:     TRISD=0x00;
   342  0708  1683               	bsf	3,5	;RP0=1, select bank1
   343  0709  1303               	bcf	3,6	;RP1=0, select bank1
   344  070A  0188               	clrf	8	;volatile
   345                           
   346                           ;foorloop.c: 24:     PORTD=0x00;
   347  070B  1283               	bcf	3,5	;RP0=0, select bank0
   348  070C  1303               	bcf	3,6	;RP1=0, select bank0
   349  070D  0188               	clrf	8	;volatile
   350                           
   351                           ;foorloop.c: 25:     TRISE=0x00;
   352  070E  1683               	bsf	3,5	;RP0=1, select bank1
   353  070F  1303               	bcf	3,6	;RP1=0, select bank1
   354  0710  0189               	clrf	9	;volatile
   355                           
   356                           ;foorloop.c: 26:     PORTE=0x00;
   357  0711  1283               	bcf	3,5	;RP0=0, select bank0
   358  0712  1303               	bcf	3,6	;RP1=0, select bank0
   359  0713  0189               	clrf	9	;volatile
   360                           
   361                           ;foorloop.c: 27:     ANSEL=0x00;
   362  0714  1683               	bsf	3,5	;RP0=1, select bank3
   363  0715  1703               	bsf	3,6	;RP1=1, select bank3
   364  0716  0188               	clrf	8	;volatile
   365                           
   366                           ;foorloop.c: 28:     ANSELH=0x00;
   367  0717  0189               	clrf	9	;volatile
   368  0718                     l35:	
   369                           ;foorloop.c: 29:     while(1)
   370                           
   371                           
   372                           ;foorloop.c: 30:     {;foorloop.c: 31:         int i,j,k,l,m;;foorloop.c: 32:         fo
      +                          r(i=0;i<=8;i++)
   373  0718  01F3               	clrf	main@i
   374  0719  01F4               	clrf	main@i+1
   375  071A                     l720:
   376  071A  0874               	movf	main@i+1,w
   377  071B  3A80               	xorlw	128
   378  071C  00FF               	movwf	btemp+1
   379  071D  3080               	movlw	128
   380  071E  027F               	subwf	btemp+1,w
   381  071F  1D03               	skipz
   382  0720  2F23               	goto	u135
   383  0721  3009               	movlw	9
   384  0722  0273               	subwf	main@i,w
   385  0723                     u135:
   386  0723  1C03               	skipc
   387  0724  2F26               	goto	u131
   388  0725  2F27               	goto	u130
   389  0726                     u131:
   390  0726  2F28               	goto	l724
   391  0727                     u130:
   392  0727  2F45               	goto	l732
   393  0728                     l724:
   394                           
   395                           ;foorloop.c: 33:         {;foorloop.c: 34:             PORTA=1<<i;
   396  0728  3001               	movlw	1
   397  0729  00F2               	movwf	??_main
   398  072A  0A73               	incf	main@i,w
   399  072B  2F2E               	goto	u144
   400  072C                     u145:
   401  072C  1003               	clrc
   402  072D  0DF2               	rlf	??_main,f
   403  072E                     u144:
   404  072E  3EFF               	addlw	-1
   405  072F  1D03               	skipz
   406  0730  2F2C               	goto	u145
   407  0731  0872               	movf	??_main,w
   408  0732  1283               	bcf	3,5	;RP0=0, select bank0
   409  0733  1303               	bcf	3,6	;RP1=0, select bank0
   410  0734  0085               	movwf	5	;volatile
   411  0735                     l726:
   412                           
   413                           ;foorloop.c: 35:             delay(1000);
   414  0735  30E8               	movlw	232
   415  0736  00F0               	movwf	delay@j
   416  0737  3003               	movlw	3
   417  0738  00F1               	movwf	delay@j+1
   418  0739  120A  118A  26E7  120A  118A  	fcall	_delay
   419  073E                     l728:
   420                           
   421                           ;foorloop.c: 36:         }
   422  073E  3001               	movlw	1
   423  073F  07F3               	addwf	main@i,f
   424  0740  1803               	skipnc
   425  0741  0AF4               	incf	main@i+1,f
   426  0742  3000               	movlw	0
   427  0743  07F4               	addwf	main@i+1,f
   428  0744  2F1A               	goto	l720
   429  0745                     l732:
   430                           
   431                           ;foorloop.c: 37:             for(j=0;j<=8;j++)
   432  0745  01F5               	clrf	main@j
   433  0746  01F6               	clrf	main@j+1
   434  0747                     l734:
   435  0747  0876               	movf	main@j+1,w
   436  0748  3A80               	xorlw	128
   437  0749  00FF               	movwf	btemp+1
   438  074A  3080               	movlw	128
   439  074B  027F               	subwf	btemp+1,w
   440  074C  1D03               	skipz
   441  074D  2F50               	goto	u155
   442  074E  3009               	movlw	9
   443  074F  0275               	subwf	main@j,w
   444  0750                     u155:
   445  0750  1C03               	skipc
   446  0751  2F53               	goto	u151
   447  0752  2F54               	goto	u150
   448  0753                     u151:
   449  0753  2F55               	goto	l738
   450  0754                     u150:
   451  0754  2F72               	goto	l746
   452  0755                     l738:
   453                           
   454                           ;foorloop.c: 38:             {;foorloop.c: 39:             PORTB=1<<j;
   455  0755  3001               	movlw	1
   456  0756  00F2               	movwf	??_main
   457  0757  0A75               	incf	main@j,w
   458  0758  2F5B               	goto	u164
   459  0759                     u165:
   460  0759  1003               	clrc
   461  075A  0DF2               	rlf	??_main,f
   462  075B                     u164:
   463  075B  3EFF               	addlw	-1
   464  075C  1D03               	skipz
   465  075D  2F59               	goto	u165
   466  075E  0872               	movf	??_main,w
   467  075F  1283               	bcf	3,5	;RP0=0, select bank0
   468  0760  1303               	bcf	3,6	;RP1=0, select bank0
   469  0761  0086               	movwf	6	;volatile
   470  0762                     l740:
   471                           
   472                           ;foorloop.c: 40:             delay(1000);
   473  0762  30E8               	movlw	232
   474  0763  00F0               	movwf	delay@j
   475  0764  3003               	movlw	3
   476  0765  00F1               	movwf	delay@j+1
   477  0766  120A  118A  26E7  120A  118A  	fcall	_delay
   478  076B                     l742:
   479                           
   480                           ;foorloop.c: 41:             }
   481  076B  3001               	movlw	1
   482  076C  07F5               	addwf	main@j,f
   483  076D  1803               	skipnc
   484  076E  0AF6               	incf	main@j+1,f
   485  076F  3000               	movlw	0
   486  0770  07F6               	addwf	main@j+1,f
   487  0771  2F47               	goto	l734
   488  0772                     l746:
   489                           
   490                           ;foorloop.c: 42:             for(k=0;k<=8;k++)
   491  0772  01F7               	clrf	main@k
   492  0773  01F8               	clrf	main@k+1
   493  0774                     l748:
   494  0774  0878               	movf	main@k+1,w
   495  0775  3A80               	xorlw	128
   496  0776  00FF               	movwf	btemp+1
   497  0777  3080               	movlw	128
   498  0778  027F               	subwf	btemp+1,w
   499  0779  1D03               	skipz
   500  077A  2F7D               	goto	u175
   501  077B  3009               	movlw	9
   502  077C  0277               	subwf	main@k,w
   503  077D                     u175:
   504  077D  1C03               	skipc
   505  077E  2F80               	goto	u171
   506  077F  2F81               	goto	u170
   507  0780                     u171:
   508  0780  2F82               	goto	l752
   509  0781                     u170:
   510  0781  2F9F               	goto	l760
   511  0782                     l752:
   512                           
   513                           ;foorloop.c: 43:             {;foorloop.c: 44:             PORTC=1<<k;
   514  0782  3001               	movlw	1
   515  0783  00F2               	movwf	??_main
   516  0784  0A77               	incf	main@k,w
   517  0785  2F88               	goto	u184
   518  0786                     u185:
   519  0786  1003               	clrc
   520  0787  0DF2               	rlf	??_main,f
   521  0788                     u184:
   522  0788  3EFF               	addlw	-1
   523  0789  1D03               	skipz
   524  078A  2F86               	goto	u185
   525  078B  0872               	movf	??_main,w
   526  078C  1283               	bcf	3,5	;RP0=0, select bank0
   527  078D  1303               	bcf	3,6	;RP1=0, select bank0
   528  078E  0087               	movwf	7	;volatile
   529  078F                     l754:
   530                           
   531                           ;foorloop.c: 45:             delay(1000);
   532  078F  30E8               	movlw	232
   533  0790  00F0               	movwf	delay@j
   534  0791  3003               	movlw	3
   535  0792  00F1               	movwf	delay@j+1
   536  0793  120A  118A  26E7  120A  118A  	fcall	_delay
   537  0798                     l756:
   538                           
   539                           ;foorloop.c: 46:             }
   540  0798  3001               	movlw	1
   541  0799  07F7               	addwf	main@k,f
   542  079A  1803               	skipnc
   543  079B  0AF8               	incf	main@k+1,f
   544  079C  3000               	movlw	0
   545  079D  07F8               	addwf	main@k+1,f
   546  079E  2F74               	goto	l748
   547  079F                     l760:
   548                           
   549                           ;foorloop.c: 47:             for(l=0;l<=8;l++)
   550  079F  01F9               	clrf	main@l
   551  07A0  01FA               	clrf	main@l+1
   552  07A1                     l762:
   553  07A1  087A               	movf	main@l+1,w
   554  07A2  3A80               	xorlw	128
   555  07A3  00FF               	movwf	btemp+1
   556  07A4  3080               	movlw	128
   557  07A5  027F               	subwf	btemp+1,w
   558  07A6  1D03               	skipz
   559  07A7  2FAA               	goto	u195
   560  07A8  3009               	movlw	9
   561  07A9  0279               	subwf	main@l,w
   562  07AA                     u195:
   563  07AA  1C03               	skipc
   564  07AB  2FAD               	goto	u191
   565  07AC  2FAE               	goto	u190
   566  07AD                     u191:
   567  07AD  2FAF               	goto	l766
   568  07AE                     u190:
   569  07AE  2FCC               	goto	l774
   570  07AF                     l766:
   571                           
   572                           ;foorloop.c: 48:             {;foorloop.c: 49:             PORTD=1<<l;
   573  07AF  3001               	movlw	1
   574  07B0  00F2               	movwf	??_main
   575  07B1  0A79               	incf	main@l,w
   576  07B2  2FB5               	goto	u204
   577  07B3                     u205:
   578  07B3  1003               	clrc
   579  07B4  0DF2               	rlf	??_main,f
   580  07B5                     u204:
   581  07B5  3EFF               	addlw	-1
   582  07B6  1D03               	skipz
   583  07B7  2FB3               	goto	u205
   584  07B8  0872               	movf	??_main,w
   585  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   586  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   587  07BB  0088               	movwf	8	;volatile
   588  07BC                     l768:
   589                           
   590                           ;foorloop.c: 50:             delay(1000);
   591  07BC  30E8               	movlw	232
   592  07BD  00F0               	movwf	delay@j
   593  07BE  3003               	movlw	3
   594  07BF  00F1               	movwf	delay@j+1
   595  07C0  120A  118A  26E7  120A  118A  	fcall	_delay
   596  07C5                     l770:
   597                           
   598                           ;foorloop.c: 51:             }
   599  07C5  3001               	movlw	1
   600  07C6  07F9               	addwf	main@l,f
   601  07C7  1803               	skipnc
   602  07C8  0AFA               	incf	main@l+1,f
   603  07C9  3000               	movlw	0
   604  07CA  07FA               	addwf	main@l+1,f
   605  07CB  2FA1               	goto	l762
   606  07CC                     l774:
   607                           
   608                           ;foorloop.c: 52:             for(m=0;m<=8;m++)
   609  07CC  01FB               	clrf	main@m
   610  07CD  01FC               	clrf	main@m+1
   611  07CE                     l776:
   612  07CE  087C               	movf	main@m+1,w
   613  07CF  3A80               	xorlw	128
   614  07D0  00FF               	movwf	btemp+1
   615  07D1  3080               	movlw	128
   616  07D2  027F               	subwf	btemp+1,w
   617  07D3  1D03               	skipz
   618  07D4  2FD7               	goto	u215
   619  07D5  3009               	movlw	9
   620  07D6  027B               	subwf	main@m,w
   621  07D7                     u215:
   622  07D7  1C03               	skipc
   623  07D8  2FDA               	goto	u211
   624  07D9  2FDB               	goto	u210
   625  07DA                     u211:
   626  07DA  2FDC               	goto	l780
   627  07DB                     u210:
   628  07DB  2F18               	goto	l35
   629  07DC                     l780:
   630                           
   631                           ;foorloop.c: 53:             {;foorloop.c: 54:             PORTE=1<<m;
   632  07DC  3001               	movlw	1
   633  07DD  00F2               	movwf	??_main
   634  07DE  0A7B               	incf	main@m,w
   635  07DF  2FE2               	goto	u224
   636  07E0                     u225:
   637  07E0  1003               	clrc
   638  07E1  0DF2               	rlf	??_main,f
   639  07E2                     u224:
   640  07E2  3EFF               	addlw	-1
   641  07E3  1D03               	skipz
   642  07E4  2FE0               	goto	u225
   643  07E5  0872               	movf	??_main,w
   644  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   645  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   646  07E8  0089               	movwf	9	;volatile
   647  07E9                     l782:
   648                           
   649                           ;foorloop.c: 55:             delay(1000);
   650  07E9  30E8               	movlw	232
   651  07EA  00F0               	movwf	delay@j
   652  07EB  3003               	movlw	3
   653  07EC  00F1               	movwf	delay@j+1
   654  07ED  120A  118A  26E7  120A  118A  	fcall	_delay
   655  07F2                     l784:
   656                           
   657                           ;foorloop.c: 56:             }
   658  07F2  3001               	movlw	1
   659  07F3  07FB               	addwf	main@m,f
   660  07F4  1803               	skipnc
   661  07F5  0AFC               	incf	main@m+1,f
   662  07F6  3000               	movlw	0
   663  07F7  07FC               	addwf	main@m+1,f
   664  07F8  2FCE               	goto	l776
   665  07F9  120A  118A  2800   	ljmp	start
   666  07FC                     __end_of_main:
   667                           
   668                           	psect	text1
   669  06E7                     __ptext1:	
   670 ;; *************** function _delay *****************
   671 ;; Defined at:
   672 ;;		line 11 in file "foorloop.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  j               2    0[COMMON] int 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         2       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         2       0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _delay
   701  06E7                     _delay:
   702  06E7                     l714:	
   703                           ;incstack = 0
   704                           ; Regs used in _delay: [wreg+status,2+status,0]
   705                           
   706  06E7                     l716:	
   707                           ;foorloop.c: 11: void delay(int j);foorloop.c: 12: {;foorloop.c: 13:     while(j--);
   708                           
   709  06E7  30FF               	movlw	255
   710  06E8  07F0               	addwf	delay@j,f
   711  06E9  1803               	skipnc
   712  06EA  0AF1               	incf	delay@j+1,f
   713  06EB  30FF               	movlw	255
   714  06EC  07F1               	addwf	delay@j+1,f
   715  06ED  0A70               	incf	delay@j,w
   716  06EE  1D03               	skipz
   717  06EF  2EF4               	goto	u121
   718  06F0  0A71               	incf	delay@j+1,w
   719  06F1  1D03               	btfss	3,2
   720  06F2  2EF4               	goto	u121
   721  06F3  2EF5               	goto	u120
   722  06F4                     u121:
   723  06F4  2EE7               	goto	l716
   724  06F5                     u120:
   725  06F5                     l30:
   726  06F5  0008               	return
   727  06F6                     __end_of_delay:
   728  007E                     btemp	set	126	;btemp
   729  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     742
                                              2 COMMON    11    11      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 03 14:37:31 2023

                     l30 06F5                       l35 0718                      l720 071A  
                    l714 06E7                      l716 06E7                      l740 0762  
                    l732 0745                      l724 0728                      l742 076B  
                    l734 0747                      l726 0735                      l718 06F6  
                    l760 079F                      l752 0782                      l728 073E  
                    l770 07C5                      l762 07A1                      l754 078F  
                    l746 0772                      l738 0755                      l780 07DC  
                    l756 0798                      l748 0774                      l782 07E9  
                    l774 07CC                      l766 07AF                      l784 07F2  
                    l776 07CE                      l768 07BC                      u120 06F5  
                    u121 06F4                      u210 07DB                      u130 0727  
                    u211 07DA                      u131 0726                      u204 07B5  
                    u205 07B3                      u150 0754                      u215 07D7  
                    u151 0753                      u135 0723                      u224 07E2  
                    u144 072E                      u225 07E0                      u145 072C  
                    u170 0781                      u171 0780                      u155 0750  
                    u164 075B                      u165 0759                      u190 07AE  
                    u191 07AD                      u175 077D                      u184 0788  
                    u185 0786                      u195 07AA                     _main 06F6  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _delay 06E7  
                  main@i 0073                    main@j 0075                    main@k 0077  
                  main@l 0079                    main@m 007B                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0072                   ?_delay 0070                   _ANSELH 0189  
                 delay@j 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 06F6                  ??_delay 0072               __pmaintext 06F6  
                __ptext1 06E7     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002           __size_of_delay 000F            __size_of_main 0106  
