

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 04 20:05:11 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0007                     _PORTC	set	7
   208  0005                     _PORTA	set	5
   209  001E                     _ADRESH	set	30
   210  001F                     _ADCON0	set	31
   211  0008                     _PORTD	set	8
   212  00F9                     _GO	set	249
   213  003E                     _RC6	set	62
   214  003D                     _RC5	set	61
   215  003F                     _RC7	set	63
   216  0088                     _TRISD	set	136
   217  0087                     _TRISC	set	135
   218  0085                     _TRISA	set	133
   219  009E                     _ADRESL	set	158
   220  009F                     _ADCON1	set	159
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  07F4                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07F4                     __initialization:
   228                           
   229                           ; Clear objects allocated to BANK0
   230  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   231  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   232  07F6  01AE               	clrf	__pbssBANK0& (0+127)
   233  07F7  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   234  07F8  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   235  07F9  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   236  07FA  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   237  07FB  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   238  07FC                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07FC                     __end_of__initialization:
   242  07FC  0183               	clrf	3
   243  07FD  120A  118A  2DBD   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssBANK0
   246  002E                     __pbssBANK0:
   247  002E                     _DV:
   248  002E                     	ds	2
   249  0030                     _high:
   250  0030                     	ds	2
   251  0032                     _low:
   252  0032                     	ds	2
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_pulse:
   257  0070                     ??_pulse:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_adc:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?___awmod:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ___awmod@divisor:	
   270                           ; 2 bytes @ 0x0
   271                           
   272                           
   273                           ; 2 bytes @ 0x0
   274  0070                     	ds	2
   275  0072                     ?_lcd:
   276  0072                     lcd@a:	
   277                           ; 1 bytes @ 0x2
   278                           
   279  0072                     ___awmod@dividend:	
   280                           ; 2 bytes @ 0x2
   281                           
   282                           
   283                           ; 2 bytes @ 0x2
   284  0072                     	ds	2
   285  0074                     ??___awmod:
   286  0074                     lcd@b:	
   287                           ; 1 bytes @ 0x4
   288                           
   289                           
   290                           ; 2 bytes @ 0x4
   291  0074                     	ds	1
   292  0075                     ___awmod@counter:
   293                           
   294                           ; 1 bytes @ 0x5
   295  0075                     	ds	1
   296  0076                     ??_lcd:
   297  0076                     ___awmod@sign:	
   298                           ; 1 bytes @ 0x6
   299                           
   300                           
   301                           ; 1 bytes @ 0x6
   302  0076                     	ds	1
   303  0077                     ?___awdiv:
   304  0077                     ___awdiv@divisor:	
   305                           ; 2 bytes @ 0x7
   306                           
   307                           
   308                           ; 2 bytes @ 0x7
   309  0077                     	ds	2
   310  0079                     ___awdiv@dividend:
   311                           
   312                           ; 2 bytes @ 0x9
   313  0079                     	ds	2
   314  007B                     ??___awdiv:
   315                           
   316                           ; 1 bytes @ 0xB
   317  007B                     	ds	1
   318  007C                     ??_display:
   319  007C                     ??_adc:	
   320                           ; 1 bytes @ 0xC
   321                           
   322                           
   323                           ; 1 bytes @ 0xC
   324  007C                     	ds	2
   325  007E                     ??_main:
   326                           
   327                           	psect	cstackBANK0
   328  0020                     __pcstackBANK0:	
   329                           ; 1 bytes @ 0xE
   330                           
   331  0020                     ___awdiv@counter:
   332                           
   333                           ; 1 bytes @ 0x0
   334  0020                     	ds	1
   335  0021                     ___awdiv@sign:
   336                           
   337                           ; 1 bytes @ 0x1
   338  0021                     	ds	1
   339  0022                     ___awdiv@quotient:
   340                           
   341                           ; 2 bytes @ 0x2
   342  0022                     	ds	2
   343  0024                     ?_display:
   344  0024                     display@k:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 2 bytes @ 0x4
   349  0024                     	ds	2
   350  0026                     display@a:
   351                           
   352                           ; 2 bytes @ 0x6
   353  0026                     	ds	2
   354  0028                     display@b:
   355                           
   356                           ; 2 bytes @ 0x8
   357  0028                     	ds	2
   358  002A                     display@c:
   359                           
   360                           ; 2 bytes @ 0xA
   361  002A                     	ds	2
   362  002C                     display@d:
   363                           
   364                           ; 2 bytes @ 0xC
   365  002C                     	ds	2
   366                           
   367                           	psect	maintext
   368  05BD                     __pmaintext:	
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 71 in file "newmain.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels required when called: 4
   394 ;; This function calls:
   395 ;;		_adc
   396 ;;		_lcd
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  05BD                     _main:
   405  05BD                     l933:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   408                           
   409                           
   410                           ;newmain.c: 73:     TRISA=0x01;
   411  05BD  3001               	movlw	1
   412  05BE  1683               	bsf	3,5	;RP0=1, select bank1
   413  05BF  1303               	bcf	3,6	;RP1=0, select bank1
   414  05C0  0085               	movwf	5	;volatile
   415  05C1                     l935:
   416                           
   417                           ;newmain.c: 74:     PORTA=0x00;
   418  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   419  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   420  05C3  0185               	clrf	5	;volatile
   421  05C4                     l937:
   422                           
   423                           ;newmain.c: 75:     TRISC=0x00;
   424  05C4  1683               	bsf	3,5	;RP0=1, select bank1
   425  05C5  1303               	bcf	3,6	;RP1=0, select bank1
   426  05C6  0187               	clrf	7	;volatile
   427  05C7                     l939:
   428                           
   429                           ;newmain.c: 76:     PORTC=0x00;
   430  05C7  1283               	bcf	3,5	;RP0=0, select bank0
   431  05C8  1303               	bcf	3,6	;RP1=0, select bank0
   432  05C9  0187               	clrf	7	;volatile
   433  05CA                     l941:
   434                           
   435                           ;newmain.c: 77:     TRISD=0x00;
   436  05CA  1683               	bsf	3,5	;RP0=1, select bank1
   437  05CB  1303               	bcf	3,6	;RP1=0, select bank1
   438  05CC  0188               	clrf	8	;volatile
   439  05CD                     l943:
   440                           
   441                           ;newmain.c: 78:     PORTD=0x00;
   442  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   443  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   444  05CF  0188               	clrf	8	;volatile
   445  05D0                     l945:
   446                           
   447                           ;newmain.c: 79:     ANSEL=0x00;
   448  05D0  1683               	bsf	3,5	;RP0=1, select bank3
   449  05D1  1703               	bsf	3,6	;RP1=1, select bank3
   450  05D2  0188               	clrf	8	;volatile
   451  05D3                     l947:
   452                           
   453                           ;newmain.c: 80:     lcd(0x38,0);
   454  05D3  3038               	movlw	56
   455  05D4  00F2               	movwf	lcd@a
   456  05D5  3000               	movlw	0
   457  05D6  00F3               	movwf	lcd@a+1
   458  05D7  3000               	movlw	0
   459  05D8  00F4               	movwf	lcd@b
   460  05D9  00F5               	movwf	lcd@b+1
   461  05DA  120A  118A  2591  120A  118A  	fcall	_lcd
   462  05DF                     l949:
   463                           
   464                           ;newmain.c: 81:     lcd(0x0e,0);
   465  05DF  300E               	movlw	14
   466  05E0  00F2               	movwf	lcd@a
   467  05E1  3000               	movlw	0
   468  05E2  00F3               	movwf	lcd@a+1
   469  05E3  3000               	movlw	0
   470  05E4  00F4               	movwf	lcd@b
   471  05E5  00F5               	movwf	lcd@b+1
   472  05E6  120A  118A  2591  120A  118A  	fcall	_lcd
   473  05EB                     l951:
   474                           
   475                           ;newmain.c: 84:     {;newmain.c: 85:        adc();
   476  05EB  120A  118A  26B6  120A  118A  	fcall	_adc
   477  05F0  2DEB               	goto	l951
   478  05F1  120A  118A  2800   	ljmp	start
   479  05F4                     __end_of_main:
   480                           
   481                           	psect	text1
   482  06B6                     __ptext1:	
   483 ;; *************** function _adc *****************
   484 ;; Defined at:
   485 ;;		line 42 in file "newmain.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          2       0       0       0       0
   502 ;;      Totals:         2       0       0       0       0
   503 ;;Total ram usage:        2 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 3
   506 ;; This function calls:
   507 ;;		_display
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _adc
   515  06B6                     _adc:
   516  06B6                     l901:	
   517                           ;incstack = 0
   518                           ; Regs used in _adc: [wreg+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;newmain.c: 44:  ADCON1=0x00;
   522  06B6  1683               	bsf	3,5	;RP0=1, select bank1
   523  06B7  1303               	bcf	3,6	;RP1=0, select bank1
   524  06B8  019F               	clrf	31	;volatile
   525  06B9                     l903:
   526                           
   527                           ;newmain.c: 45: ADCON0=0X81;
   528  06B9  3081               	movlw	129
   529  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   530  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   531  06BC  009F               	movwf	31	;volatile
   532  06BD                     l905:
   533                           
   534                           ;newmain.c: 46: GO=1;
   535  06BD  149F               	bsf	31,1	;volatile
   536  06BE                     l50:	
   537                           ;newmain.c: 47: while(GO);
   538                           
   539  06BE  189F               	btfsc	31,1	;volatile
   540  06BF  2EC1               	goto	u481
   541  06C0  2EC2               	goto	u480
   542  06C1                     u481:
   543  06C1  2EBE               	goto	l50
   544  06C2                     u480:
   545  06C2                     l907:
   546                           
   547                           ;newmain.c: 48: high=ADRESH;
   548  06C2  081E               	movf	30,w	;volatile
   549  06C3  00FC               	movwf	??_adc
   550  06C4  01FD               	clrf	??_adc+1
   551  06C5  087C               	movf	??_adc,w
   552  06C6  00B0               	movwf	_high
   553  06C7  087D               	movf	??_adc+1,w
   554  06C8  00B1               	movwf	_high+1
   555                           
   556                           ;newmain.c: 49: low=ADRESL;
   557  06C9  1683               	bsf	3,5	;RP0=1, select bank1
   558  06CA  1303               	bcf	3,6	;RP1=0, select bank1
   559  06CB  081E               	movf	30,w	;volatile
   560  06CC  00FC               	movwf	??_adc
   561  06CD  01FD               	clrf	??_adc+1
   562  06CE  087C               	movf	??_adc,w
   563  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   564  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   565  06D1  00B2               	movwf	_low
   566  06D2  087D               	movf	??_adc+1,w
   567  06D3  00B3               	movwf	_low+1
   568  06D4                     l909:
   569                           
   570                           ;newmain.c: 50: if(low==0)
   571  06D4  0832               	movf	_low,w
   572  06D5  0433               	iorwf	_low+1,w
   573  06D6  1D03               	btfss	3,2
   574  06D7  2ED9               	goto	u491
   575  06D8  2EDA               	goto	u490
   576  06D9                     u491:
   577  06D9  2EE7               	goto	l915
   578  06DA                     u490:
   579  06DA                     l911:
   580                           
   581                           ;newmain.c: 51: {;newmain.c: 52: DV=high;
   582  06DA  0831               	movf	_high+1,w
   583  06DB  00AF               	movwf	_DV+1
   584  06DC  0830               	movf	_high,w
   585  06DD  00AE               	movwf	_DV
   586  06DE                     l913:
   587                           
   588                           ;newmain.c: 53: display(DV);
   589  06DE  082F               	movf	_DV+1,w
   590  06DF  00A5               	movwf	display@k+1
   591  06E0  082E               	movf	_DV,w
   592  06E1  00A4               	movwf	display@k
   593  06E2  120A  118A  2735  120A  118A  	fcall	_display
   594  06E7                     l915:
   595                           
   596                           ;newmain.c: 55: if(low==1)
   597  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   598  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   599  06E9  0332               	decf	_low,w
   600  06EA  0433               	iorwf	_low+1,w
   601  06EB  1D03               	btfss	3,2
   602  06EC  2EEE               	goto	u501
   603  06ED  2EEF               	goto	u500
   604  06EE                     u501:
   605  06EE  2F00               	goto	l921
   606  06EF                     u500:
   607  06EF                     l917:
   608                           
   609                           ;newmain.c: 56: {;newmain.c: 57: DV=high-128;
   610  06EF  0830               	movf	_high,w
   611  06F0  3E80               	addlw	128
   612  06F1  00AE               	movwf	_DV
   613  06F2  0831               	movf	_high+1,w
   614  06F3  1803               	skipnc
   615  06F4  3E01               	addlw	1
   616  06F5  3EFF               	addlw	255
   617  06F6  00AF               	movwf	_DV+1
   618  06F7                     l919:
   619                           
   620                           ;newmain.c: 58: display(DV);
   621  06F7  082F               	movf	_DV+1,w
   622  06F8  00A5               	movwf	display@k+1
   623  06F9  082E               	movf	_DV,w
   624  06FA  00A4               	movwf	display@k
   625  06FB  120A  118A  2735  120A  118A  	fcall	_display
   626  0700                     l921:
   627                           
   628                           ;newmain.c: 60: if(low==2)
   629  0700  3002               	movlw	2
   630  0701  1283               	bcf	3,5	;RP0=0, select bank0
   631  0702  1303               	bcf	3,6	;RP1=0, select bank0
   632  0703  0632               	xorwf	_low,w
   633  0704  0433               	iorwf	_low+1,w
   634  0705  1D03               	btfss	3,2
   635  0706  2F08               	goto	u511
   636  0707  2F09               	goto	u510
   637  0708                     u511:
   638  0708  2F1A               	goto	l927
   639  0709                     u510:
   640  0709                     l923:
   641                           
   642                           ;newmain.c: 61: {;newmain.c: 62: DV=high-64;
   643  0709  0830               	movf	_high,w
   644  070A  3EC0               	addlw	192
   645  070B  00AE               	movwf	_DV
   646  070C  0831               	movf	_high+1,w
   647  070D  1803               	skipnc
   648  070E  3E01               	addlw	1
   649  070F  3EFF               	addlw	255
   650  0710  00AF               	movwf	_DV+1
   651  0711                     l925:
   652                           
   653                           ;newmain.c: 63: display(DV);
   654  0711  082F               	movf	_DV+1,w
   655  0712  00A5               	movwf	display@k+1
   656  0713  082E               	movf	_DV,w
   657  0714  00A4               	movwf	display@k
   658  0715  120A  118A  2735  120A  118A  	fcall	_display
   659  071A                     l927:
   660                           
   661                           ;newmain.c: 65: if( low==3)
   662  071A  3003               	movlw	3
   663  071B  1283               	bcf	3,5	;RP0=0, select bank0
   664  071C  1303               	bcf	3,6	;RP1=0, select bank0
   665  071D  0632               	xorwf	_low,w
   666  071E  0433               	iorwf	_low+1,w
   667  071F  1D03               	btfss	3,2
   668  0720  2F22               	goto	u521
   669  0721  2F23               	goto	u520
   670  0722                     u521:
   671  0722  2F34               	goto	l57
   672  0723                     u520:
   673  0723                     l929:
   674                           
   675                           ;newmain.c: 66: {;newmain.c: 67: DV=high-32;
   676  0723  0830               	movf	_high,w
   677  0724  3EE0               	addlw	224
   678  0725  00AE               	movwf	_DV
   679  0726  0831               	movf	_high+1,w
   680  0727  1803               	skipnc
   681  0728  3E01               	addlw	1
   682  0729  3EFF               	addlw	255
   683  072A  00AF               	movwf	_DV+1
   684  072B                     l931:
   685                           
   686                           ;newmain.c: 68: display(DV);
   687  072B  082F               	movf	_DV+1,w
   688  072C  00A5               	movwf	display@k+1
   689  072D  082E               	movf	_DV,w
   690  072E  00A4               	movwf	display@k
   691  072F  120A  118A  2735  120A  118A  	fcall	_display
   692  0734                     l57:
   693  0734  0008               	return
   694  0735                     __end_of_adc:
   695                           
   696                           	psect	text2
   697  0735                     __ptext2:	
   698 ;; *************** function _display *****************
   699 ;; Defined at:
   700 ;;		line 29 in file "newmain.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  k               2    4[BANK0 ] int 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  d               2   12[BANK0 ] int 
   705 ;;  c               2   10[BANK0 ] int 
   706 ;;  b               2    8[BANK0 ] int 
   707 ;;  a               2    6[BANK0 ] int 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       2       0       0       0
   718 ;;      Locals:         0       8       0       0       0
   719 ;;      Temps:          0       0       0       0       0
   720 ;;      Totals:         0      10       0       0       0
   721 ;;Total ram usage:       10 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 2
   724 ;; This function calls:
   725 ;;		___awdiv
   726 ;;		___awmod
   727 ;;		_lcd
   728 ;; This function is called by:
   729 ;;		_adc
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _display
   735  0735                     _display:
   736  0735                     l899:	
   737                           ;incstack = 0
   738                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   739                           
   740                           
   741                           ;newmain.c: 29: void display(int k);newmain.c: 30: {;newmain.c: 31:     lcd(0x80,0);
   742  0735  3080               	movlw	128
   743  0736  00F2               	movwf	lcd@a
   744  0737  3000               	movlw	0
   745  0738  00F3               	movwf	lcd@a+1
   746  0739  3000               	movlw	0
   747  073A  00F4               	movwf	lcd@b
   748  073B  00F5               	movwf	lcd@b+1
   749  073C  120A  118A  2591  120A  118A  	fcall	_lcd
   750                           
   751                           ;newmain.c: 32:     int a,b,c,d;;newmain.c: 33:     a=k/1000;
   752  0741  30E8               	movlw	232
   753  0742  00F7               	movwf	___awdiv@divisor
   754  0743  3003               	movlw	3
   755  0744  00F8               	movwf	___awdiv@divisor+1
   756  0745  1283               	bcf	3,5	;RP0=0, select bank0
   757  0746  1303               	bcf	3,6	;RP1=0, select bank0
   758  0747  0825               	movf	display@k+1,w
   759  0748  00FA               	movwf	___awdiv@dividend+1
   760  0749  0824               	movf	display@k,w
   761  074A  00F9               	movwf	___awdiv@dividend
   762  074B  120A  118A  264D  120A  118A  	fcall	___awdiv
   763  0750  0878               	movf	?___awdiv+1,w
   764  0751  1283               	bcf	3,5	;RP0=0, select bank0
   765  0752  1303               	bcf	3,6	;RP1=0, select bank0
   766  0753  00A7               	movwf	display@a+1
   767  0754  0877               	movf	?___awdiv,w
   768  0755  00A6               	movwf	display@a
   769                           
   770                           ;newmain.c: 34:     b=((k%1000)/100);
   771  0756  3064               	movlw	100
   772  0757  00F7               	movwf	___awdiv@divisor
   773  0758  3000               	movlw	0
   774  0759  00F8               	movwf	___awdiv@divisor+1
   775  075A  0825               	movf	display@k+1,w
   776  075B  00F3               	movwf	___awmod@dividend+1
   777  075C  0824               	movf	display@k,w
   778  075D  00F2               	movwf	___awmod@dividend
   779  075E  30E8               	movlw	232
   780  075F  00F0               	movwf	___awmod@divisor
   781  0760  3003               	movlw	3
   782  0761  00F1               	movwf	___awmod@divisor+1
   783  0762  120A  118A  25F4  120A  118A  	fcall	___awmod
   784  0767  0871               	movf	?___awmod+1,w
   785  0768  00FA               	movwf	___awdiv@dividend+1
   786  0769  0870               	movf	?___awmod,w
   787  076A  00F9               	movwf	___awdiv@dividend
   788  076B  120A  118A  264D  120A  118A  	fcall	___awdiv
   789  0770  0878               	movf	?___awdiv+1,w
   790  0771  1283               	bcf	3,5	;RP0=0, select bank0
   791  0772  1303               	bcf	3,6	;RP1=0, select bank0
   792  0773  00A9               	movwf	display@b+1
   793  0774  0877               	movf	?___awdiv,w
   794  0775  00A8               	movwf	display@b
   795                           
   796                           ;newmain.c: 35:     c=((k%100)/10);
   797  0776  300A               	movlw	10
   798  0777  00F7               	movwf	___awdiv@divisor
   799  0778  3000               	movlw	0
   800  0779  00F8               	movwf	___awdiv@divisor+1
   801  077A  0825               	movf	display@k+1,w
   802  077B  00F3               	movwf	___awmod@dividend+1
   803  077C  0824               	movf	display@k,w
   804  077D  00F2               	movwf	___awmod@dividend
   805  077E  3064               	movlw	100
   806  077F  00F0               	movwf	___awmod@divisor
   807  0780  3000               	movlw	0
   808  0781  00F1               	movwf	___awmod@divisor+1
   809  0782  120A  118A  25F4  120A  118A  	fcall	___awmod
   810  0787  0871               	movf	?___awmod+1,w
   811  0788  00FA               	movwf	___awdiv@dividend+1
   812  0789  0870               	movf	?___awmod,w
   813  078A  00F9               	movwf	___awdiv@dividend
   814  078B  120A  118A  264D  120A  118A  	fcall	___awdiv
   815  0790  0878               	movf	?___awdiv+1,w
   816  0791  1283               	bcf	3,5	;RP0=0, select bank0
   817  0792  1303               	bcf	3,6	;RP1=0, select bank0
   818  0793  00AB               	movwf	display@c+1
   819  0794  0877               	movf	?___awdiv,w
   820  0795  00AA               	movwf	display@c
   821                           
   822                           ;newmain.c: 36:     d=(k%10);
   823  0796  300A               	movlw	10
   824  0797  00F0               	movwf	___awmod@divisor
   825  0798  3000               	movlw	0
   826  0799  00F1               	movwf	___awmod@divisor+1
   827  079A  0825               	movf	display@k+1,w
   828  079B  00F3               	movwf	___awmod@dividend+1
   829  079C  0824               	movf	display@k,w
   830  079D  00F2               	movwf	___awmod@dividend
   831  079E  120A  118A  25F4  120A  118A  	fcall	___awmod
   832  07A3  0871               	movf	?___awmod+1,w
   833  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   834  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   835  07A6  00AD               	movwf	display@d+1
   836  07A7  0870               	movf	?___awmod,w
   837  07A8  00AC               	movwf	display@d
   838                           
   839                           ;newmain.c: 37:     lcd(0x30+a,1);
   840  07A9  0826               	movf	display@a,w
   841  07AA  3E30               	addlw	48
   842  07AB  00F2               	movwf	lcd@a
   843  07AC  0827               	movf	display@a+1,w
   844  07AD  1803               	skipnc
   845  07AE  3E01               	addlw	1
   846  07AF  3E00               	addlw	0
   847  07B0  00F3               	movwf	lcd@a+1
   848  07B1  3001               	movlw	1
   849  07B2  00F4               	movwf	lcd@b
   850  07B3  3000               	movlw	0
   851  07B4  00F5               	movwf	lcd@b+1
   852  07B5  120A  118A  2591  120A  118A  	fcall	_lcd
   853                           
   854                           ;newmain.c: 38:     lcd(0x30+b,1);
   855  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   856  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   857  07BC  0828               	movf	display@b,w
   858  07BD  3E30               	addlw	48
   859  07BE  00F2               	movwf	lcd@a
   860  07BF  0829               	movf	display@b+1,w
   861  07C0  1803               	skipnc
   862  07C1  3E01               	addlw	1
   863  07C2  3E00               	addlw	0
   864  07C3  00F3               	movwf	lcd@a+1
   865  07C4  3001               	movlw	1
   866  07C5  00F4               	movwf	lcd@b
   867  07C6  3000               	movlw	0
   868  07C7  00F5               	movwf	lcd@b+1
   869  07C8  120A  118A  2591  120A  118A  	fcall	_lcd
   870                           
   871                           ;newmain.c: 39:     lcd(0x30+c,1);
   872  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   873  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   874  07CF  082A               	movf	display@c,w
   875  07D0  3E30               	addlw	48
   876  07D1  00F2               	movwf	lcd@a
   877  07D2  082B               	movf	display@c+1,w
   878  07D3  1803               	skipnc
   879  07D4  3E01               	addlw	1
   880  07D5  3E00               	addlw	0
   881  07D6  00F3               	movwf	lcd@a+1
   882  07D7  3001               	movlw	1
   883  07D8  00F4               	movwf	lcd@b
   884  07D9  3000               	movlw	0
   885  07DA  00F5               	movwf	lcd@b+1
   886  07DB  120A  118A  2591  120A  118A  	fcall	_lcd
   887                           
   888                           ;newmain.c: 40:     lcd(0x30+d,1);
   889  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   890  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   891  07E2  082C               	movf	display@d,w
   892  07E3  3E30               	addlw	48
   893  07E4  00F2               	movwf	lcd@a
   894  07E5  082D               	movf	display@d+1,w
   895  07E6  1803               	skipnc
   896  07E7  3E01               	addlw	1
   897  07E8  3E00               	addlw	0
   898  07E9  00F3               	movwf	lcd@a+1
   899  07EA  3001               	movlw	1
   900  07EB  00F4               	movwf	lcd@b
   901  07EC  3000               	movlw	0
   902  07ED  00F5               	movwf	lcd@b+1
   903  07EE  120A  118A  2591  120A  118A  	fcall	_lcd
   904  07F3                     l47:
   905  07F3  0008               	return
   906  07F4                     __end_of_display:
   907                           
   908                           	psect	text3
   909  0591                     __ptext3:	
   910 ;; *************** function _lcd *****************
   911 ;; Defined at:
   912 ;;		line 22 in file "newmain.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  a               2    2[COMMON] int 
   915 ;;  b               2    4[COMMON] int 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0, pclath, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         4       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0
   930 ;;      Totals:         4       0       0       0       0
   931 ;;Total ram usage:        4 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; Hardware stack levels required when called: 1
   934 ;; This function calls:
   935 ;;		_pulse
   936 ;; This function is called by:
   937 ;;		_display
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _lcd
   944  0591                     _lcd:
   945  0591                     l811:	
   946                           ;incstack = 0
   947                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   948                           
   949                           
   950                           ;newmain.c: 22: void lcd(int a, int b);newmain.c: 23: {;newmain.c: 24:     RC5=b;
   951  0591  1874               	btfsc	lcd@b,0
   952  0592  2D94               	goto	u271
   953  0593  2D98               	goto	u270
   954  0594                     u271:
   955  0594  1283               	bcf	3,5	;RP0=0, select bank0
   956  0595  1303               	bcf	3,6	;RP1=0, select bank0
   957  0596  1687               	bsf	7,5	;volatile
   958  0597  2D9B               	goto	u284
   959  0598                     u270:
   960  0598  1283               	bcf	3,5	;RP0=0, select bank0
   961  0599  1303               	bcf	3,6	;RP1=0, select bank0
   962  059A  1287               	bcf	7,5	;volatile
   963  059B                     u284:
   964                           
   965                           ;newmain.c: 25:     RC6=0;
   966  059B  1307               	bcf	7,6	;volatile
   967  059C                     l813:
   968                           
   969                           ;newmain.c: 26:     PORTD=a;
   970  059C  0872               	movf	lcd@a,w
   971  059D  0088               	movwf	8	;volatile
   972  059E                     l815:
   973                           
   974                           ;newmain.c: 27:     pulse();
   975  059E  120A  118A  25A4  120A  118A  	fcall	_pulse
   976  05A3                     l44:
   977  05A3  0008               	return
   978  05A4                     __end_of_lcd:
   979                           
   980                           	psect	text4
   981  05A4                     __ptext4:	
   982 ;; *************** function _pulse *****************
   983 ;; Defined at:
   984 ;;		line 15 in file "newmain.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          2       0       0       0       0
  1001 ;;      Totals:         2       0       0       0       0
  1002 ;;Total ram usage:        2 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_lcd
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _pulse
  1013  05A4                     _pulse:
  1014  05A4                     l805:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _pulse: [wreg]
  1017                           
  1018                           
  1019                           ;newmain.c: 17:     RC7=1;
  1020  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1021  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1022  05A6  1787               	bsf	7,7	;volatile
  1023  05A7                     l807:
  1024                           
  1025                           ;newmain.c: 18:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1026  05A7  3082               	movlw	130
  1027  05A8  00F1               	movwf	??_pulse+1
  1028  05A9  30DD               	movlw	221
  1029  05AA  00F0               	movwf	??_pulse
  1030  05AB                     u537:
  1031  05AB  0BF0               	decfsz	??_pulse,f
  1032  05AC  2DAB               	goto	u537
  1033  05AD  0BF1               	decfsz	??_pulse+1,f
  1034  05AE  2DAB               	goto	u537
  1035  05AF  2DB0               	nop2
  1036  05B0                     l809:
  1037                           
  1038                           ;newmain.c: 19:     RC7=0;
  1039  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1040  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1041  05B2  1387               	bcf	7,7	;volatile
  1042                           
  1043                           ;newmain.c: 20:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1044  05B3  3082               	movlw	130
  1045  05B4  00F1               	movwf	??_pulse+1
  1046  05B5  30DD               	movlw	221
  1047  05B6  00F0               	movwf	??_pulse
  1048  05B7                     u547:
  1049  05B7  0BF0               	decfsz	??_pulse,f
  1050  05B8  2DB7               	goto	u547
  1051  05B9  0BF1               	decfsz	??_pulse+1,f
  1052  05BA  2DB7               	goto	u547
  1053  05BB  2DBC               	nop2
  1054  05BC                     l41:
  1055  05BC  0008               	return
  1056  05BD                     __end_of_pulse:
  1057                           
  1058                           	psect	text5
  1059  05F4                     __ptext5:	
  1060 ;; *************** function ___awmod *****************
  1061 ;; Defined at:
  1062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  divisor         2    0[COMMON] int 
  1065 ;;  dividend        2    2[COMMON] int 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  sign            1    6[COMMON] unsigned char 
  1068 ;;  counter         1    5[COMMON] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  2    0[COMMON] int 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         4       0       0       0       0
  1079 ;;      Locals:         2       0       0       0       0
  1080 ;;      Temps:          1       0       0       0       0
  1081 ;;      Totals:         7       0       0       0       0
  1082 ;;Total ram usage:        7 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_display
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function ___awmod
  1093  05F4                     ___awmod:
  1094  05F4                     l861:	
  1095                           ;incstack = 0
  1096                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1097                           
  1098  05F4  01F6               	clrf	___awmod@sign
  1099  05F5                     l863:
  1100  05F5  1FF3               	btfss	___awmod@dividend+1,7
  1101  05F6  2DF8               	goto	u391
  1102  05F7  2DF9               	goto	u390
  1103  05F8                     u391:
  1104  05F8  2E00               	goto	l869
  1105  05F9                     u390:
  1106  05F9                     l865:
  1107  05F9  09F2               	comf	___awmod@dividend,f
  1108  05FA  09F3               	comf	___awmod@dividend+1,f
  1109  05FB  0AF2               	incf	___awmod@dividend,f
  1110  05FC  1903               	skipnz
  1111  05FD  0AF3               	incf	___awmod@dividend+1,f
  1112  05FE                     l867:
  1113  05FE  01F6               	clrf	___awmod@sign
  1114  05FF  0AF6               	incf	___awmod@sign,f
  1115  0600                     l869:
  1116  0600  1FF1               	btfss	___awmod@divisor+1,7
  1117  0601  2E03               	goto	u401
  1118  0602  2E04               	goto	u400
  1119  0603                     u401:
  1120  0603  2E09               	goto	l873
  1121  0604                     u400:
  1122  0604                     l871:
  1123  0604  09F0               	comf	___awmod@divisor,f
  1124  0605  09F1               	comf	___awmod@divisor+1,f
  1125  0606  0AF0               	incf	___awmod@divisor,f
  1126  0607  1903               	skipnz
  1127  0608  0AF1               	incf	___awmod@divisor+1,f
  1128  0609                     l873:
  1129  0609  0870               	movf	___awmod@divisor,w
  1130  060A  0471               	iorwf	___awmod@divisor+1,w
  1131  060B  1903               	btfsc	3,2
  1132  060C  2E0E               	goto	u411
  1133  060D  2E0F               	goto	u410
  1134  060E                     u411:
  1135  060E  2E3E               	goto	l891
  1136  060F                     u410:
  1137  060F                     l875:
  1138  060F  01F5               	clrf	___awmod@counter
  1139  0610  0AF5               	incf	___awmod@counter,f
  1140  0611  2E1D               	goto	l881
  1141  0612                     l877:
  1142  0612  3001               	movlw	1
  1143  0613                     u425:
  1144  0613  1003               	clrc
  1145  0614  0DF0               	rlf	___awmod@divisor,f
  1146  0615  0DF1               	rlf	___awmod@divisor+1,f
  1147  0616  3EFF               	addlw	-1
  1148  0617  1D03               	skipz
  1149  0618  2E13               	goto	u425
  1150  0619                     l879:
  1151  0619  3001               	movlw	1
  1152  061A  00F4               	movwf	??___awmod
  1153  061B  0874               	movf	??___awmod,w
  1154  061C  07F5               	addwf	___awmod@counter,f
  1155  061D                     l881:
  1156  061D  1FF1               	btfss	___awmod@divisor+1,7
  1157  061E  2E20               	goto	u431
  1158  061F  2E21               	goto	u430
  1159  0620                     u431:
  1160  0620  2E12               	goto	l877
  1161  0621                     u430:
  1162  0621                     l883:
  1163  0621  0871               	movf	___awmod@divisor+1,w
  1164  0622  0273               	subwf	___awmod@dividend+1,w
  1165  0623  1D03               	skipz
  1166  0624  2E27               	goto	u445
  1167  0625  0870               	movf	___awmod@divisor,w
  1168  0626  0272               	subwf	___awmod@dividend,w
  1169  0627                     u445:
  1170  0627  1C03               	skipc
  1171  0628  2E2A               	goto	u441
  1172  0629  2E2B               	goto	u440
  1173  062A                     u441:
  1174  062A  2E31               	goto	l887
  1175  062B                     u440:
  1176  062B                     l885:
  1177  062B  0870               	movf	___awmod@divisor,w
  1178  062C  02F2               	subwf	___awmod@dividend,f
  1179  062D  0871               	movf	___awmod@divisor+1,w
  1180  062E  1C03               	skipc
  1181  062F  03F3               	decf	___awmod@dividend+1,f
  1182  0630  02F3               	subwf	___awmod@dividend+1,f
  1183  0631                     l887:
  1184  0631  3001               	movlw	1
  1185  0632                     u455:
  1186  0632  1003               	clrc
  1187  0633  0CF1               	rrf	___awmod@divisor+1,f
  1188  0634  0CF0               	rrf	___awmod@divisor,f
  1189  0635  3EFF               	addlw	-1
  1190  0636  1D03               	skipz
  1191  0637  2E32               	goto	u455
  1192  0638                     l889:
  1193  0638  3001               	movlw	1
  1194  0639  02F5               	subwf	___awmod@counter,f
  1195  063A  1D03               	btfss	3,2
  1196  063B  2E3D               	goto	u461
  1197  063C  2E3E               	goto	u460
  1198  063D                     u461:
  1199  063D  2E21               	goto	l883
  1200  063E                     u460:
  1201  063E                     l891:
  1202  063E  0876               	movf	___awmod@sign,w
  1203  063F  1903               	btfsc	3,2
  1204  0640  2E42               	goto	u471
  1205  0641  2E43               	goto	u470
  1206  0642                     u471:
  1207  0642  2E48               	goto	l895
  1208  0643                     u470:
  1209  0643                     l893:
  1210  0643  09F2               	comf	___awmod@dividend,f
  1211  0644  09F3               	comf	___awmod@dividend+1,f
  1212  0645  0AF2               	incf	___awmod@dividend,f
  1213  0646  1903               	skipnz
  1214  0647  0AF3               	incf	___awmod@dividend+1,f
  1215  0648                     l895:
  1216  0648  0873               	movf	___awmod@dividend+1,w
  1217  0649  00F1               	movwf	?___awmod+1
  1218  064A  0872               	movf	___awmod@dividend,w
  1219  064B  00F0               	movwf	?___awmod
  1220  064C                     l317:
  1221  064C  0008               	return
  1222  064D                     __end_of___awmod:
  1223                           
  1224                           	psect	text6
  1225  064D                     __ptext6:	
  1226 ;; *************** function ___awdiv *****************
  1227 ;; Defined at:
  1228 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  divisor         2    7[COMMON] int 
  1231 ;;  dividend        2    9[COMMON] int 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  quotient        2    2[BANK0 ] int 
  1234 ;;  sign            1    1[BANK0 ] unsigned char 
  1235 ;;  counter         1    0[BANK0 ] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2    7[COMMON] int 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         4       0       0       0       0
  1246 ;;      Locals:         0       4       0       0       0
  1247 ;;      Temps:          1       0       0       0       0
  1248 ;;      Totals:         5       4       0       0       0
  1249 ;;Total ram usage:        9 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_display
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function ___awdiv
  1260  064D                     ___awdiv:
  1261  064D                     l817:	
  1262                           ;incstack = 0
  1263                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1264                           
  1265  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1266  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1267  064F  01A1               	clrf	___awdiv@sign
  1268  0650                     l819:
  1269  0650  1FF8               	btfss	___awdiv@divisor+1,7
  1270  0651  2E53               	goto	u291
  1271  0652  2E54               	goto	u290
  1272  0653                     u291:
  1273  0653  2E5B               	goto	l825
  1274  0654                     u290:
  1275  0654                     l821:
  1276  0654  09F7               	comf	___awdiv@divisor,f
  1277  0655  09F8               	comf	___awdiv@divisor+1,f
  1278  0656  0AF7               	incf	___awdiv@divisor,f
  1279  0657  1903               	skipnz
  1280  0658  0AF8               	incf	___awdiv@divisor+1,f
  1281  0659                     l823:
  1282  0659  01A1               	clrf	___awdiv@sign
  1283  065A  0AA1               	incf	___awdiv@sign,f
  1284  065B                     l825:
  1285  065B  1FFA               	btfss	___awdiv@dividend+1,7
  1286  065C  2E5E               	goto	u301
  1287  065D  2E5F               	goto	u300
  1288  065E                     u301:
  1289  065E  2E68               	goto	l831
  1290  065F                     u300:
  1291  065F                     l827:
  1292  065F  09F9               	comf	___awdiv@dividend,f
  1293  0660  09FA               	comf	___awdiv@dividend+1,f
  1294  0661  0AF9               	incf	___awdiv@dividend,f
  1295  0662  1903               	skipnz
  1296  0663  0AFA               	incf	___awdiv@dividend+1,f
  1297  0664                     l829:
  1298  0664  3001               	movlw	1
  1299  0665  00FB               	movwf	??___awdiv
  1300  0666  087B               	movf	??___awdiv,w
  1301  0667  06A1               	xorwf	___awdiv@sign,f
  1302  0668                     l831:
  1303  0668  01A2               	clrf	___awdiv@quotient
  1304  0669  01A3               	clrf	___awdiv@quotient+1
  1305  066A                     l833:
  1306  066A  0877               	movf	___awdiv@divisor,w
  1307  066B  0478               	iorwf	___awdiv@divisor+1,w
  1308  066C  1903               	btfsc	3,2
  1309  066D  2E6F               	goto	u311
  1310  066E  2E70               	goto	u310
  1311  066F                     u311:
  1312  066F  2EA7               	goto	l853
  1313  0670                     u310:
  1314  0670                     l835:
  1315  0670  01A0               	clrf	___awdiv@counter
  1316  0671  0AA0               	incf	___awdiv@counter,f
  1317  0672  2E7E               	goto	l841
  1318  0673                     l837:
  1319  0673  3001               	movlw	1
  1320  0674                     u325:
  1321  0674  1003               	clrc
  1322  0675  0DF7               	rlf	___awdiv@divisor,f
  1323  0676  0DF8               	rlf	___awdiv@divisor+1,f
  1324  0677  3EFF               	addlw	-1
  1325  0678  1D03               	skipz
  1326  0679  2E74               	goto	u325
  1327  067A                     l839:
  1328  067A  3001               	movlw	1
  1329  067B  00FB               	movwf	??___awdiv
  1330  067C  087B               	movf	??___awdiv,w
  1331  067D  07A0               	addwf	___awdiv@counter,f
  1332  067E                     l841:
  1333  067E  1FF8               	btfss	___awdiv@divisor+1,7
  1334  067F  2E81               	goto	u331
  1335  0680  2E82               	goto	u330
  1336  0681                     u331:
  1337  0681  2E73               	goto	l837
  1338  0682                     u330:
  1339  0682                     l843:
  1340  0682  3001               	movlw	1
  1341  0683                     u345:
  1342  0683  1003               	clrc
  1343  0684  0DA2               	rlf	___awdiv@quotient,f
  1344  0685  0DA3               	rlf	___awdiv@quotient+1,f
  1345  0686  3EFF               	addlw	-1
  1346  0687  1D03               	skipz
  1347  0688  2E83               	goto	u345
  1348  0689  0878               	movf	___awdiv@divisor+1,w
  1349  068A  027A               	subwf	___awdiv@dividend+1,w
  1350  068B  1D03               	skipz
  1351  068C  2E8F               	goto	u355
  1352  068D  0877               	movf	___awdiv@divisor,w
  1353  068E  0279               	subwf	___awdiv@dividend,w
  1354  068F                     u355:
  1355  068F  1C03               	skipc
  1356  0690  2E92               	goto	u351
  1357  0691  2E93               	goto	u350
  1358  0692                     u351:
  1359  0692  2E9A               	goto	l849
  1360  0693                     u350:
  1361  0693                     l845:
  1362  0693  0877               	movf	___awdiv@divisor,w
  1363  0694  02F9               	subwf	___awdiv@dividend,f
  1364  0695  0878               	movf	___awdiv@divisor+1,w
  1365  0696  1C03               	skipc
  1366  0697  03FA               	decf	___awdiv@dividend+1,f
  1367  0698  02FA               	subwf	___awdiv@dividend+1,f
  1368  0699                     l847:
  1369  0699  1422               	bsf	___awdiv@quotient,0
  1370  069A                     l849:
  1371  069A  3001               	movlw	1
  1372  069B                     u365:
  1373  069B  1003               	clrc
  1374  069C  0CF8               	rrf	___awdiv@divisor+1,f
  1375  069D  0CF7               	rrf	___awdiv@divisor,f
  1376  069E  3EFF               	addlw	-1
  1377  069F  1D03               	skipz
  1378  06A0  2E9B               	goto	u365
  1379  06A1                     l851:
  1380  06A1  3001               	movlw	1
  1381  06A2  02A0               	subwf	___awdiv@counter,f
  1382  06A3  1D03               	btfss	3,2
  1383  06A4  2EA6               	goto	u371
  1384  06A5  2EA7               	goto	u370
  1385  06A6                     u371:
  1386  06A6  2E82               	goto	l843
  1387  06A7                     u370:
  1388  06A7                     l853:
  1389  06A7  0821               	movf	___awdiv@sign,w
  1390  06A8  1903               	btfsc	3,2
  1391  06A9  2EAB               	goto	u381
  1392  06AA  2EAC               	goto	u380
  1393  06AB                     u381:
  1394  06AB  2EB1               	goto	l857
  1395  06AC                     u380:
  1396  06AC                     l855:
  1397  06AC  09A2               	comf	___awdiv@quotient,f
  1398  06AD  09A3               	comf	___awdiv@quotient+1,f
  1399  06AE  0AA2               	incf	___awdiv@quotient,f
  1400  06AF  1903               	skipnz
  1401  06B0  0AA3               	incf	___awdiv@quotient+1,f
  1402  06B1                     l857:
  1403  06B1  0823               	movf	___awdiv@quotient+1,w
  1404  06B2  00F8               	movwf	?___awdiv+1
  1405  06B3  0822               	movf	___awdiv@quotient,w
  1406  06B4  00F7               	movwf	?___awdiv
  1407  06B5                     l304:
  1408  06B5  0008               	return
  1409  06B6                     __end_of___awdiv:
  1410  007E                     btemp	set	126	;btemp
  1411  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc
    _display->___awdiv
    _lcd->_pulse
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _adc->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4208
                                _adc
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _adc                                                  2     2      0    3100
                                             12 COMMON     2     2      0
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                             10     8      2    3100
                                              4 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     0      4    1108
                                              2 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
     _display
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd
         _pulse
   _lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 04 20:05:11 2023

                     l41 05BC                       l50 06BE                       l44 05A3  
                     l47 07F3                       l57 0734                       _GO 00F9  
                     _DV 002E             ___awdiv@sign 0021                      l304 06B5  
                    l317 064C                      l811 0591                      l821 0654  
                    l805 05A4                      l813 059C                      l901 06B6  
                    l831 0668                      l823 0659                      l807 05A7  
                    l815 059E                      l911 06DA                      l903 06B9  
                    l841 067E                      l833 066A                      l825 065B  
                    l817 064D                      l809 05B0                      l921 0700  
                    l913 06DE                      l905 06BD                      l851 06A1  
                    l843 0682                      l835 0670                      l827 065F  
                    l819 0650                      l931 072B                      l923 0709  
                    l915 06E7                      l907 06C2                      l845 0693  
                    l837 0673                      l853 06A7                      l829 0664  
                    l861 05F4                      l925 0711                      l917 06EF  
                    l909 06D4                      l941 05CA                      l933 05BD  
                    l855 06AC                      l847 0699                      l839 067A  
                    l871 0604                      l863 05F5                      l927 071A  
                    l919 06F7                      l951 05EB                      l943 05CD  
                    l935 05C1                      l857 06B1                      l849 069A  
                    l881 061D                      l873 0609                      l865 05F9  
                    l929 0723                      l945 05D0                      l937 05C4  
                    l883 0621                      l875 060F                      l891 063E  
                    l867 05FE                      l947 05D3                      l939 05C7  
                    l893 0643                      l885 062B                      l877 0612  
                    l869 0600                      l949 05DF                      l895 0648  
                    l887 0631                      l879 0619                      l889 0638  
                    l899 0735                      _RC5 003D                      _RC6 003E  
                    _RC7 003F                      u300 065F                      u301 065E  
                    u310 0670                      u311 066F                      u400 0604  
                    u401 0603                      u330 0682                      u410 060F  
                    u331 0681                      u411 060E                      u500 06EF  
                    u325 0674                      u501 06EE                      u350 0693  
                    u430 0621                      u270 0598                      u510 0709  
                    u351 0692                      u431 0620                      u271 0594  
                    u511 0708                      u440 062B                      u520 0723  
                    u345 0683                      u441 062A                      u425 0613  
                    u521 0722                      u370 06A7                      u290 0654  
                    u371 06A6                      u355 068F                      u291 0653  
                    u380 06AC                      u460 063E                      u284 059B  
                    u381 06AB                      u365 069B                      u461 063D  
                    u445 0627                      u470 0643                      u390 05F9  
                    u471 0642                      u455 0632                      u391 05F8  
                    u480 06C2                      u537 05AB                      u481 06C1  
                    u490 06DA                      u547 05B7                      u491 06D9  
                    _adc 06B6                      _lcd 0591                      _low 0032  
           ___awmod@sign 0076                     ?_adc 0070                     ?_lcd 0072  
                   _high 0030                     _main 05BD                     lcd@a 0072  
                   lcd@b 0074                     btemp 007E                     start 0000  
                  ??_adc 007C                    ??_lcd 0076                    ?_main 0070  
        __end_of___awdiv 06B6          __end_of___awmod 064D                    _ANSEL 0188  
        ___awdiv@divisor 0077          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088          __end_of_display 07F4  
                  _pulse 05A4                    status 0003                    wtemp0 007E  
        __initialization 07F4             __end_of_main 05F4                   ??_main 007E  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079                   ?_pulse 0070  
              ??___awdiv 007B                ??___awmod 0074         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_display 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_pulse 05BD  
                ??_pulse 0070               __pbssBANK0 002E               __pmaintext 05BD  
                ___awdiv 064D                  ___awmod 05F4                  __ptext1 06B6  
                __ptext2 0735                  __ptext3 0591                  __ptext4 05A4  
                __ptext5 05F4                  __ptext6 064D                  _display 0735  
           __size_of_adc 007F             __size_of_lcd 0013         ___awmod@dividend 0072  
   end_of_initialization 07FC      start_initialization 07F4              __end_of_adc 0735  
            __end_of_lcd 05A4                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0077                 ?___awmod 0070                 ?_display 0024  
         __size_of_pulse 0019         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of_display 00BF            __size_of_main 0037                 display@a 0026  
               display@b 0028                 display@c 002A                 display@d 002C  
               display@k 0024  
