

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 28 12:56:59 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  000E                     _TMR1	set	14
   208  0010                     _T1CON	set	16
   209  0007                     _PORTC	set	7
   210  0006                     _PORTB	set	6
   211  0060                     _TMR1IF	set	96
   212  0038                     _RC0	set	56
   213  003E                     _RC6	set	62
   214  003D                     _RC5	set	61
   215  003F                     _RC7	set	63
   216  0086                     _TRISB	set	134
   217  0087                     _TRISC	set	135
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	cinit
   222  07F2                     start_initialization:	
   223                           ; #config settings
   224                           
   225  07F2                     __initialization:
   226                           
   227                           ; Clear objects allocated to COMMON
   228  07F2  01FC               	clrf	__pbssCOMMON& (0+127)
   229  07F3  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   230                           
   231                           ; Clear objects allocated to BANK0
   232  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   233  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   234  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   235  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   236  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   237  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   238  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   239  07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   240  07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  07FC                     __end_of__initialization:
   244  07FC  0183               	clrf	3
   245  07FD  120A  118A  2EFF   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  007C                     __pbssCOMMON:
   249  007C                     _count:
   250  007C                     	ds	2
   251                           
   252                           	psect	bssBANK0
   253  0020                     __pbssBANK0:
   254  0020                     _dig3:
   255  0020                     	ds	2
   256  0022                     _dig2:
   257  0022                     	ds	2
   258  0024                     _dig1:
   259  0024                     	ds	2
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:
   263  0070                     ?_pulse:
   264  0070                     ??_pulse:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_timer:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?___awmod:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     timer@a:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     ___awmod@divisor:	
   280                           ; 2 bytes @ 0x0
   281                           
   282                           
   283                           ; 2 bytes @ 0x0
   284  0070                     	ds	2
   285  0072                     ?_lcd:
   286  0072                     lcd@a:	
   287                           ; 1 bytes @ 0x2
   288                           
   289  0072                     timer@b:	
   290                           ; 2 bytes @ 0x2
   291                           
   292  0072                     ___awmod@dividend:	
   293                           ; 2 bytes @ 0x2
   294                           
   295                           
   296                           ; 2 bytes @ 0x2
   297  0072                     	ds	2
   298  0074                     ??_timer:
   299  0074                     ??___awmod:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     lcd@b:	
   303                           ; 1 bytes @ 0x4
   304                           
   305                           
   306                           ; 2 bytes @ 0x4
   307  0074                     	ds	1
   308  0075                     ___awmod@counter:
   309                           
   310                           ; 1 bytes @ 0x5
   311  0075                     	ds	1
   312  0076                     ??_lcd:
   313  0076                     ___awmod@sign:	
   314                           ; 1 bytes @ 0x6
   315                           
   316                           
   317                           ; 1 bytes @ 0x6
   318  0076                     	ds	1
   319  0077                     ?___awdiv:
   320  0077                     ___awdiv@divisor:	
   321                           ; 2 bytes @ 0x7
   322                           
   323                           
   324                           ; 2 bytes @ 0x7
   325  0077                     	ds	2
   326  0079                     ___awdiv@dividend:
   327                           
   328                           ; 2 bytes @ 0x9
   329  0079                     	ds	2
   330  007B                     ??___awdiv:
   331                           
   332                           ; 1 bytes @ 0xB
   333  007B                     	ds	1
   334  007C                     ??_main:
   335                           
   336                           	psect	cstackBANK0
   337  0026                     __pcstackBANK0:	
   338                           ; 1 bytes @ 0xC
   339                           
   340  0026                     ___awdiv@counter:
   341                           
   342                           ; 1 bytes @ 0x0
   343  0026                     	ds	1
   344  0027                     ___awdiv@sign:
   345                           
   346                           ; 1 bytes @ 0x1
   347  0027                     	ds	1
   348  0028                     ___awdiv@quotient:
   349                           
   350                           ; 2 bytes @ 0x2
   351  0028                     	ds	2
   352                           
   353                           	psect	maintext
   354  06FF                     __pmaintext:	
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 42 in file "timer1.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels required when called: 2
   380 ;; This function calls:
   381 ;;		___awdiv
   382 ;;		___awmod
   383 ;;		_lcd
   384 ;;		_timer
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _main
   392  06FF                     _main:
   393  06FF                     l897:	
   394                           ;incstack = 0
   395                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   396                           
   397                           
   398                           ;timer1.c: 44:    TRISC=0x00;
   399  06FF  1683               	bsf	3,5	;RP0=1, select bank1
   400  0700  1303               	bcf	3,6	;RP1=0, select bank1
   401  0701  0187               	clrf	7	;volatile
   402                           
   403                           ;timer1.c: 45:    PORTC=0x00;
   404  0702  1283               	bcf	3,5	;RP0=0, select bank0
   405  0703  1303               	bcf	3,6	;RP1=0, select bank0
   406  0704  0187               	clrf	7	;volatile
   407                           
   408                           ;timer1.c: 46:    TRISB=0x00;
   409  0705  1683               	bsf	3,5	;RP0=1, select bank1
   410  0706  1303               	bcf	3,6	;RP1=0, select bank1
   411  0707  0186               	clrf	6	;volatile
   412                           
   413                           ;timer1.c: 47:    PORTB=0x00;
   414  0708  1283               	bcf	3,5	;RP0=0, select bank0
   415  0709  1303               	bcf	3,6	;RP1=0, select bank0
   416  070A  0186               	clrf	6	;volatile
   417                           
   418                           ;timer1.c: 48:    ANSEL=0x00;
   419  070B  1683               	bsf	3,5	;RP0=1, select bank3
   420  070C  1703               	bsf	3,6	;RP1=1, select bank3
   421  070D  0188               	clrf	8	;volatile
   422                           
   423                           ;timer1.c: 49:    ANSELH=0x00;
   424  070E  0189               	clrf	9	;volatile
   425  070F                     l899:
   426                           
   427                           ;timer1.c: 50:    lcd(0x38,0);
   428  070F  3038               	movlw	56
   429  0710  00F2               	movwf	lcd@a
   430  0711  3000               	movlw	0
   431  0712  00F3               	movwf	lcd@a+1
   432  0713  3000               	movlw	0
   433  0714  00F4               	movwf	lcd@b
   434  0715  00F5               	movwf	lcd@b+1
   435  0716  120A  118A  25E2  120A  118A  	fcall	_lcd
   436  071B                     l901:
   437                           
   438                           ;timer1.c: 51:    lcd(0x0e,0);
   439  071B  300E               	movlw	14
   440  071C  00F2               	movwf	lcd@a
   441  071D  3000               	movlw	0
   442  071E  00F3               	movwf	lcd@a+1
   443  071F  3000               	movlw	0
   444  0720  00F4               	movwf	lcd@b
   445  0721  00F5               	movwf	lcd@b+1
   446  0722  120A  118A  25E2  120A  118A  	fcall	_lcd
   447  0727                     l903:
   448                           
   449                           ;timer1.c: 52:    T1CON=0x39;
   450  0727  3039               	movlw	57
   451  0728  1283               	bcf	3,5	;RP0=0, select bank0
   452  0729  1303               	bcf	3,6	;RP1=0, select bank0
   453  072A  0090               	movwf	16	;volatile
   454  072B                     l905:
   455                           
   456                           ;timer1.c: 53:    TMR1=3036;
   457  072B  300B               	movlw	11
   458  072C  008F               	movwf	15	;volatile
   459  072D  30DC               	movlw	220
   460  072E  008E               	movwf	14	;volatile
   461  072F                     l907:
   462                           
   463                           ;timer1.c: 55:    {;timer1.c: 56:        if(TMR1IF==1)
   464  072F  1283               	bcf	3,5	;RP0=0, select bank0
   465  0730  1303               	bcf	3,6	;RP1=0, select bank0
   466  0731  1C0C               	btfss	12,0	;volatile
   467  0732  2F34               	goto	u501
   468  0733  2F35               	goto	u500
   469  0734                     u501:
   470  0734  2FE1               	goto	l931
   471  0735                     u500:
   472  0735                     l909:
   473                           
   474                           ;timer1.c: 57:        {;timer1.c: 58:            count++;
   475  0735  3001               	movlw	1
   476  0736  07FC               	addwf	_count,f
   477  0737  1803               	skipnc
   478  0738  0AFD               	incf	_count+1,f
   479  0739  3000               	movlw	0
   480  073A  07FD               	addwf	_count+1,f
   481  073B                     l911:
   482                           
   483                           ;timer1.c: 59:             dig1=count/100;
   484  073B  3064               	movlw	100
   485  073C  00F7               	movwf	___awdiv@divisor
   486  073D  3000               	movlw	0
   487  073E  00F8               	movwf	___awdiv@divisor+1
   488  073F  087D               	movf	_count+1,w
   489  0740  00FA               	movwf	___awdiv@dividend+1
   490  0741  087C               	movf	_count,w
   491  0742  00F9               	movwf	___awdiv@dividend
   492  0743  120A  118A  2696  120A  118A  	fcall	___awdiv
   493  0748  0878               	movf	?___awdiv+1,w
   494  0749  1283               	bcf	3,5	;RP0=0, select bank0
   495  074A  1303               	bcf	3,6	;RP1=0, select bank0
   496  074B  00A5               	movwf	_dig1+1
   497  074C  0877               	movf	?___awdiv,w
   498  074D  00A4               	movwf	_dig1
   499  074E                     l913:
   500                           
   501                           ;timer1.c: 60:             dig2=((count%100)/10);
   502  074E  300A               	movlw	10
   503  074F  00F7               	movwf	___awdiv@divisor
   504  0750  3000               	movlw	0
   505  0751  00F8               	movwf	___awdiv@divisor+1
   506  0752  087D               	movf	_count+1,w
   507  0753  00F3               	movwf	___awmod@dividend+1
   508  0754  087C               	movf	_count,w
   509  0755  00F2               	movwf	___awmod@dividend
   510  0756  3064               	movlw	100
   511  0757  00F0               	movwf	___awmod@divisor
   512  0758  3000               	movlw	0
   513  0759  00F1               	movwf	___awmod@divisor+1
   514  075A  120A  118A  263D  120A  118A  	fcall	___awmod
   515  075F  0871               	movf	?___awmod+1,w
   516  0760  00FA               	movwf	___awdiv@dividend+1
   517  0761  0870               	movf	?___awmod,w
   518  0762  00F9               	movwf	___awdiv@dividend
   519  0763  120A  118A  2696  120A  118A  	fcall	___awdiv
   520  0768  0878               	movf	?___awdiv+1,w
   521  0769  1283               	bcf	3,5	;RP0=0, select bank0
   522  076A  1303               	bcf	3,6	;RP1=0, select bank0
   523  076B  00A3               	movwf	_dig2+1
   524  076C  0877               	movf	?___awdiv,w
   525  076D  00A2               	movwf	_dig2
   526  076E                     l915:
   527                           
   528                           ;timer1.c: 61:             dig3=count%10;
   529  076E  300A               	movlw	10
   530  076F  00F0               	movwf	___awmod@divisor
   531  0770  3000               	movlw	0
   532  0771  00F1               	movwf	___awmod@divisor+1
   533  0772  087D               	movf	_count+1,w
   534  0773  00F3               	movwf	___awmod@dividend+1
   535  0774  087C               	movf	_count,w
   536  0775  00F2               	movwf	___awmod@dividend
   537  0776  120A  118A  263D  120A  118A  	fcall	___awmod
   538  077B  0871               	movf	?___awmod+1,w
   539  077C  1283               	bcf	3,5	;RP0=0, select bank0
   540  077D  1303               	bcf	3,6	;RP1=0, select bank0
   541  077E  00A1               	movwf	_dig3+1
   542  077F  0870               	movf	?___awmod,w
   543  0780  00A0               	movwf	_dig3
   544  0781                     l917:
   545                           
   546                           ;timer1.c: 62:             lcd(0x80,0);
   547  0781  3080               	movlw	128
   548  0782  00F2               	movwf	lcd@a
   549  0783  3000               	movlw	0
   550  0784  00F3               	movwf	lcd@a+1
   551  0785  3000               	movlw	0
   552  0786  00F4               	movwf	lcd@b
   553  0787  00F5               	movwf	lcd@b+1
   554  0788  120A  118A  25E2  120A  118A  	fcall	_lcd
   555  078D                     l919:
   556                           
   557                           ;timer1.c: 63:             lcd(dig1+0x30,1);
   558  078D  1283               	bcf	3,5	;RP0=0, select bank0
   559  078E  1303               	bcf	3,6	;RP1=0, select bank0
   560  078F  0824               	movf	_dig1,w
   561  0790  3E30               	addlw	48
   562  0791  00F2               	movwf	lcd@a
   563  0792  0825               	movf	_dig1+1,w
   564  0793  1803               	skipnc
   565  0794  3E01               	addlw	1
   566  0795  3E00               	addlw	0
   567  0796  00F3               	movwf	lcd@a+1
   568  0797  3001               	movlw	1
   569  0798  00F4               	movwf	lcd@b
   570  0799  3000               	movlw	0
   571  079A  00F5               	movwf	lcd@b+1
   572  079B  120A  118A  25E2  120A  118A  	fcall	_lcd
   573  07A0                     l921:
   574                           
   575                           ;timer1.c: 64:             lcd(0x81,0);
   576  07A0  3081               	movlw	129
   577  07A1  00F2               	movwf	lcd@a
   578  07A2  3000               	movlw	0
   579  07A3  00F3               	movwf	lcd@a+1
   580  07A4  3000               	movlw	0
   581  07A5  00F4               	movwf	lcd@b
   582  07A6  00F5               	movwf	lcd@b+1
   583  07A7  120A  118A  25E2  120A  118A  	fcall	_lcd
   584  07AC                     l923:
   585                           
   586                           ;timer1.c: 65:             lcd(dig2+0x30,1);
   587  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   588  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   589  07AE  0822               	movf	_dig2,w
   590  07AF  3E30               	addlw	48
   591  07B0  00F2               	movwf	lcd@a
   592  07B1  0823               	movf	_dig2+1,w
   593  07B2  1803               	skipnc
   594  07B3  3E01               	addlw	1
   595  07B4  3E00               	addlw	0
   596  07B5  00F3               	movwf	lcd@a+1
   597  07B6  3001               	movlw	1
   598  07B7  00F4               	movwf	lcd@b
   599  07B8  3000               	movlw	0
   600  07B9  00F5               	movwf	lcd@b+1
   601  07BA  120A  118A  25E2  120A  118A  	fcall	_lcd
   602  07BF                     l925:
   603                           
   604                           ;timer1.c: 66:            lcd(0x82,0);
   605  07BF  3082               	movlw	130
   606  07C0  00F2               	movwf	lcd@a
   607  07C1  3000               	movlw	0
   608  07C2  00F3               	movwf	lcd@a+1
   609  07C3  3000               	movlw	0
   610  07C4  00F4               	movwf	lcd@b
   611  07C5  00F5               	movwf	lcd@b+1
   612  07C6  120A  118A  25E2  120A  118A  	fcall	_lcd
   613  07CB                     l927:
   614                           
   615                           ;timer1.c: 67:             lcd(dig3+0x30,1);
   616  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   617  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   618  07CD  0820               	movf	_dig3,w
   619  07CE  3E30               	addlw	48
   620  07CF  00F2               	movwf	lcd@a
   621  07D0  0821               	movf	_dig3+1,w
   622  07D1  1803               	skipnc
   623  07D2  3E01               	addlw	1
   624  07D3  3E00               	addlw	0
   625  07D4  00F3               	movwf	lcd@a+1
   626  07D5  3001               	movlw	1
   627  07D6  00F4               	movwf	lcd@b
   628  07D7  3000               	movlw	0
   629  07D8  00F5               	movwf	lcd@b+1
   630  07D9  120A  118A  25E2  120A  118A  	fcall	_lcd
   631  07DE                     l929:
   632                           
   633                           ;timer1.c: 68:             TMR1IF=0;
   634  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   635  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   636  07E0  100C               	bcf	12,0	;volatile
   637  07E1                     l931:
   638                           
   639                           ;timer1.c: 70:             timer(20,40);
   640  07E1  3014               	movlw	20
   641  07E2  00F0               	movwf	timer@a
   642  07E3  3000               	movlw	0
   643  07E4  00F1               	movwf	timer@a+1
   644  07E5  3028               	movlw	40
   645  07E6  00F2               	movwf	timer@b
   646  07E7  3000               	movlw	0
   647  07E8  00F3               	movwf	timer@b+1
   648  07E9  120A  118A  260E  120A  118A  	fcall	_timer
   649  07EE  2F2F               	goto	l907
   650  07EF  120A  118A  2800   	ljmp	start
   651  07F2                     __end_of_main:
   652                           
   653                           	psect	text1
   654  060E                     __ptext1:	
   655 ;; *************** function _timer *****************
   656 ;; Defined at:
   657 ;;		line 27 in file "timer1.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  a               2    0[COMMON] int 
   660 ;;  b               2    2[COMMON] int 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         4       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          1       0       0       0       0
   675 ;;      Totals:         5       0       0       0       0
   676 ;;Total ram usage:        5 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _timer
   687  060E                     _timer:
   688  060E                     l803:	
   689                           ;incstack = 0
   690                           ; Regs used in _timer: [wreg+status,2]
   691                           
   692                           
   693                           ;timer1.c: 27: void timer(int a ,int b);timer1.c: 28: {;timer1.c: 29:      if(count<=a)
   694  060E  0871               	movf	timer@a+1,w
   695  060F  3A80               	xorlw	128
   696  0610  00F4               	movwf	??_timer
   697  0611  087D               	movf	_count+1,w
   698  0612  3A80               	xorlw	128
   699  0613  0274               	subwf	??_timer,w
   700  0614  1D03               	skipz
   701  0615  2E18               	goto	u285
   702  0616  087C               	movf	_count,w
   703  0617  0270               	subwf	timer@a,w
   704  0618                     u285:
   705  0618  1C03               	skipc
   706  0619  2E1B               	goto	u281
   707  061A  2E1C               	goto	u280
   708  061B                     u281:
   709  061B  2E1F               	goto	l807
   710  061C                     u280:
   711  061C                     l805:
   712                           
   713                           ;timer1.c: 30:      {;timer1.c: 31:        RC0=1;
   714  061C  1283               	bcf	3,5	;RP0=0, select bank0
   715  061D  1303               	bcf	3,6	;RP1=0, select bank0
   716  061E  1407               	bsf	7,0	;volatile
   717  061F                     l807:
   718                           
   719                           ;timer1.c: 33:         if(count>a)
   720  061F  0871               	movf	timer@a+1,w
   721  0620  3A80               	xorlw	128
   722  0621  00F4               	movwf	??_timer
   723  0622  087D               	movf	_count+1,w
   724  0623  3A80               	xorlw	128
   725  0624  0274               	subwf	??_timer,w
   726  0625  1D03               	skipz
   727  0626  2E29               	goto	u295
   728  0627  087C               	movf	_count,w
   729  0628  0270               	subwf	timer@a,w
   730  0629                     u295:
   731  0629  1803               	skipnc
   732  062A  2E2C               	goto	u291
   733  062B  2E2D               	goto	u290
   734  062C                     u291:
   735  062C  2E30               	goto	l811
   736  062D                     u290:
   737  062D                     l809:
   738                           
   739                           ;timer1.c: 34:            {;timer1.c: 35:              RC0=0;
   740  062D  1283               	bcf	3,5	;RP0=0, select bank0
   741  062E  1303               	bcf	3,6	;RP1=0, select bank0
   742  062F  1007               	bcf	7,0	;volatile
   743  0630                     l811:
   744                           
   745                           ;timer1.c: 37:           if(count==b)
   746  0630  0873               	movf	timer@b+1,w
   747  0631  067D               	xorwf	_count+1,w
   748  0632  1D03               	skipz
   749  0633  2E36               	goto	u305
   750  0634  0872               	movf	timer@b,w
   751  0635  067C               	xorwf	_count,w
   752  0636                     u305:
   753  0636  1D03               	skipz
   754  0637  2E39               	goto	u301
   755  0638  2E3A               	goto	u300
   756  0639                     u301:
   757  0639  2E3C               	goto	l48
   758  063A                     u300:
   759  063A                     l813:
   760                           
   761                           ;timer1.c: 38:             {;timer1.c: 39:               count=0;
   762  063A  01FC               	clrf	_count
   763  063B  01FD               	clrf	_count+1
   764  063C                     l48:
   765  063C  0008               	return
   766  063D                     __end_of_timer:
   767                           
   768                           	psect	text2
   769  05E2                     __ptext2:	
   770 ;; *************** function _lcd *****************
   771 ;; Defined at:
   772 ;;		line 20 in file "timer1.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  a               2    2[COMMON] int 
   775 ;;  b               2    4[COMMON] int 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         4       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         4       0       0       0       0
   791 ;;Total ram usage:        4 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 1
   794 ;; This function calls:
   795 ;;		_pulse
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _lcd
   803  05E2                     _lcd:
   804  05E2                     l797:	
   805                           ;incstack = 0
   806                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   807                           
   808                           
   809                           ;timer1.c: 20: void lcd(int a,int b);timer1.c: 21: {;timer1.c: 22:   RC5=b;
   810  05E2  1874               	btfsc	lcd@b,0
   811  05E3  2DE5               	goto	u261
   812  05E4  2DE9               	goto	u260
   813  05E5                     u261:
   814  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   815  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   816  05E7  1687               	bsf	7,5	;volatile
   817  05E8  2DEC               	goto	u274
   818  05E9                     u260:
   819  05E9  1283               	bcf	3,5	;RP0=0, select bank0
   820  05EA  1303               	bcf	3,6	;RP1=0, select bank0
   821  05EB  1287               	bcf	7,5	;volatile
   822  05EC                     u274:
   823                           
   824                           ;timer1.c: 23:   RC6=0;
   825  05EC  1307               	bcf	7,6	;volatile
   826  05ED                     l799:
   827                           
   828                           ;timer1.c: 24:   PORTB=a;
   829  05ED  0872               	movf	lcd@a,w
   830  05EE  0086               	movwf	6	;volatile
   831  05EF                     l801:
   832                           
   833                           ;timer1.c: 25:   pulse();
   834  05EF  120A  118A  25F5  120A  118A  	fcall	_pulse
   835  05F4                     l42:
   836  05F4  0008               	return
   837  05F5                     __end_of_lcd:
   838                           
   839                           	psect	text3
   840  05F5                     __ptext3:	
   841 ;; *************** function _pulse *****************
   842 ;; Defined at:
   843 ;;		line 13 in file "timer1.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0
   860 ;;      Totals:         2       0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_lcd
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _pulse
   872  05F5                     _pulse:
   873  05F5                     l791:	
   874                           ;incstack = 0
   875                           ; Regs used in _pulse: [wreg]
   876                           
   877                           
   878                           ;timer1.c: 15:     RC7=1;
   879  05F5  1283               	bcf	3,5	;RP0=0, select bank0
   880  05F6  1303               	bcf	3,6	;RP1=0, select bank0
   881  05F7  1787               	bsf	7,7	;volatile
   882  05F8                     l793:
   883                           
   884                           ;timer1.c: 16:     _delay((unsigned long)((15)*(4000000/4000.0)));
   885  05F8  3014               	movlw	20
   886  05F9  00F1               	movwf	??_pulse+1
   887  05FA  3079               	movlw	121
   888  05FB  00F0               	movwf	??_pulse
   889  05FC                     u517:
   890  05FC  0BF0               	decfsz	??_pulse,f
   891  05FD  2DFC               	goto	u517
   892  05FE  0BF1               	decfsz	??_pulse+1,f
   893  05FF  2DFC               	goto	u517
   894  0600  2E01               	nop2
   895  0601                     l795:
   896                           
   897                           ;timer1.c: 17:     RC7=0;
   898  0601  1283               	bcf	3,5	;RP0=0, select bank0
   899  0602  1303               	bcf	3,6	;RP1=0, select bank0
   900  0603  1387               	bcf	7,7	;volatile
   901                           
   902                           ;timer1.c: 18:     _delay((unsigned long)((15)*(4000000/4000.0)));
   903  0604  3014               	movlw	20
   904  0605  00F1               	movwf	??_pulse+1
   905  0606  3079               	movlw	121
   906  0607  00F0               	movwf	??_pulse
   907  0608                     u527:
   908  0608  0BF0               	decfsz	??_pulse,f
   909  0609  2E08               	goto	u527
   910  060A  0BF1               	decfsz	??_pulse+1,f
   911  060B  2E08               	goto	u527
   912  060C  2E0D               	nop2
   913  060D                     l39:
   914  060D  0008               	return
   915  060E                     __end_of_pulse:
   916                           
   917                           	psect	text4
   918  063D                     __ptext4:	
   919 ;; *************** function ___awmod *****************
   920 ;; Defined at:
   921 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  divisor         2    0[COMMON] int 
   924 ;;  dividend        2    2[COMMON] int 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  sign            1    6[COMMON] unsigned char 
   927 ;;  counter         1    5[COMMON] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2    0[COMMON] int 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         4       0       0       0       0
   938 ;;      Locals:         2       0       0       0       0
   939 ;;      Temps:          1       0       0       0       0
   940 ;;      Totals:         7       0       0       0       0
   941 ;;Total ram usage:        7 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function ___awmod
   952  063D                     ___awmod:
   953  063D                     l859:	
   954                           ;incstack = 0
   955                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   956                           
   957  063D  01F6               	clrf	___awmod@sign
   958  063E                     l861:
   959  063E  1FF3               	btfss	___awmod@dividend+1,7
   960  063F  2E41               	goto	u411
   961  0640  2E42               	goto	u410
   962  0641                     u411:
   963  0641  2E49               	goto	l867
   964  0642                     u410:
   965  0642                     l863:
   966  0642  09F2               	comf	___awmod@dividend,f
   967  0643  09F3               	comf	___awmod@dividend+1,f
   968  0644  0AF2               	incf	___awmod@dividend,f
   969  0645  1903               	skipnz
   970  0646  0AF3               	incf	___awmod@dividend+1,f
   971  0647                     l865:
   972  0647  01F6               	clrf	___awmod@sign
   973  0648  0AF6               	incf	___awmod@sign,f
   974  0649                     l867:
   975  0649  1FF1               	btfss	___awmod@divisor+1,7
   976  064A  2E4C               	goto	u421
   977  064B  2E4D               	goto	u420
   978  064C                     u421:
   979  064C  2E52               	goto	l871
   980  064D                     u420:
   981  064D                     l869:
   982  064D  09F0               	comf	___awmod@divisor,f
   983  064E  09F1               	comf	___awmod@divisor+1,f
   984  064F  0AF0               	incf	___awmod@divisor,f
   985  0650  1903               	skipnz
   986  0651  0AF1               	incf	___awmod@divisor+1,f
   987  0652                     l871:
   988  0652  0870               	movf	___awmod@divisor,w
   989  0653  0471               	iorwf	___awmod@divisor+1,w
   990  0654  1903               	btfsc	3,2
   991  0655  2E57               	goto	u431
   992  0656  2E58               	goto	u430
   993  0657                     u431:
   994  0657  2E87               	goto	l889
   995  0658                     u430:
   996  0658                     l873:
   997  0658  01F5               	clrf	___awmod@counter
   998  0659  0AF5               	incf	___awmod@counter,f
   999  065A  2E66               	goto	l879
  1000  065B                     l875:
  1001  065B  3001               	movlw	1
  1002  065C                     u445:
  1003  065C  1003               	clrc
  1004  065D  0DF0               	rlf	___awmod@divisor,f
  1005  065E  0DF1               	rlf	___awmod@divisor+1,f
  1006  065F  3EFF               	addlw	-1
  1007  0660  1D03               	skipz
  1008  0661  2E5C               	goto	u445
  1009  0662                     l877:
  1010  0662  3001               	movlw	1
  1011  0663  00F4               	movwf	??___awmod
  1012  0664  0874               	movf	??___awmod,w
  1013  0665  07F5               	addwf	___awmod@counter,f
  1014  0666                     l879:
  1015  0666  1FF1               	btfss	___awmod@divisor+1,7
  1016  0667  2E69               	goto	u451
  1017  0668  2E6A               	goto	u450
  1018  0669                     u451:
  1019  0669  2E5B               	goto	l875
  1020  066A                     u450:
  1021  066A                     l881:
  1022  066A  0871               	movf	___awmod@divisor+1,w
  1023  066B  0273               	subwf	___awmod@dividend+1,w
  1024  066C  1D03               	skipz
  1025  066D  2E70               	goto	u465
  1026  066E  0870               	movf	___awmod@divisor,w
  1027  066F  0272               	subwf	___awmod@dividend,w
  1028  0670                     u465:
  1029  0670  1C03               	skipc
  1030  0671  2E73               	goto	u461
  1031  0672  2E74               	goto	u460
  1032  0673                     u461:
  1033  0673  2E7A               	goto	l885
  1034  0674                     u460:
  1035  0674                     l883:
  1036  0674  0870               	movf	___awmod@divisor,w
  1037  0675  02F2               	subwf	___awmod@dividend,f
  1038  0676  0871               	movf	___awmod@divisor+1,w
  1039  0677  1C03               	skipc
  1040  0678  03F3               	decf	___awmod@dividend+1,f
  1041  0679  02F3               	subwf	___awmod@dividend+1,f
  1042  067A                     l885:
  1043  067A  3001               	movlw	1
  1044  067B                     u475:
  1045  067B  1003               	clrc
  1046  067C  0CF1               	rrf	___awmod@divisor+1,f
  1047  067D  0CF0               	rrf	___awmod@divisor,f
  1048  067E  3EFF               	addlw	-1
  1049  067F  1D03               	skipz
  1050  0680  2E7B               	goto	u475
  1051  0681                     l887:
  1052  0681  3001               	movlw	1
  1053  0682  02F5               	subwf	___awmod@counter,f
  1054  0683  1D03               	btfss	3,2
  1055  0684  2E86               	goto	u481
  1056  0685  2E87               	goto	u480
  1057  0686                     u481:
  1058  0686  2E6A               	goto	l881
  1059  0687                     u480:
  1060  0687                     l889:
  1061  0687  0876               	movf	___awmod@sign,w
  1062  0688  1903               	btfsc	3,2
  1063  0689  2E8B               	goto	u491
  1064  068A  2E8C               	goto	u490
  1065  068B                     u491:
  1066  068B  2E91               	goto	l893
  1067  068C                     u490:
  1068  068C                     l891:
  1069  068C  09F2               	comf	___awmod@dividend,f
  1070  068D  09F3               	comf	___awmod@dividend+1,f
  1071  068E  0AF2               	incf	___awmod@dividend,f
  1072  068F  1903               	skipnz
  1073  0690  0AF3               	incf	___awmod@dividend+1,f
  1074  0691                     l893:
  1075  0691  0873               	movf	___awmod@dividend+1,w
  1076  0692  00F1               	movwf	?___awmod+1
  1077  0693  0872               	movf	___awmod@dividend,w
  1078  0694  00F0               	movwf	?___awmod
  1079  0695                     l309:
  1080  0695  0008               	return
  1081  0696                     __end_of___awmod:
  1082                           
  1083                           	psect	text5
  1084  0696                     __ptext5:	
  1085 ;; *************** function ___awdiv *****************
  1086 ;; Defined at:
  1087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  divisor         2    7[COMMON] int 
  1090 ;;  dividend        2    9[COMMON] int 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  quotient        2    2[BANK0 ] int 
  1093 ;;  sign            1    1[BANK0 ] unsigned char 
  1094 ;;  counter         1    0[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2    7[COMMON] int 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         4       0       0       0       0
  1105 ;;      Locals:         0       4       0       0       0
  1106 ;;      Temps:          1       0       0       0       0
  1107 ;;      Totals:         5       4       0       0       0
  1108 ;;Total ram usage:        9 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function ___awdiv
  1119  0696                     ___awdiv:
  1120  0696                     l815:	
  1121                           ;incstack = 0
  1122                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1123                           
  1124  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0698  01A7               	clrf	___awdiv@sign
  1127  0699                     l817:
  1128  0699  1FF8               	btfss	___awdiv@divisor+1,7
  1129  069A  2E9C               	goto	u311
  1130  069B  2E9D               	goto	u310
  1131  069C                     u311:
  1132  069C  2EA4               	goto	l823
  1133  069D                     u310:
  1134  069D                     l819:
  1135  069D  09F7               	comf	___awdiv@divisor,f
  1136  069E  09F8               	comf	___awdiv@divisor+1,f
  1137  069F  0AF7               	incf	___awdiv@divisor,f
  1138  06A0  1903               	skipnz
  1139  06A1  0AF8               	incf	___awdiv@divisor+1,f
  1140  06A2                     l821:
  1141  06A2  01A7               	clrf	___awdiv@sign
  1142  06A3  0AA7               	incf	___awdiv@sign,f
  1143  06A4                     l823:
  1144  06A4  1FFA               	btfss	___awdiv@dividend+1,7
  1145  06A5  2EA7               	goto	u321
  1146  06A6  2EA8               	goto	u320
  1147  06A7                     u321:
  1148  06A7  2EB1               	goto	l829
  1149  06A8                     u320:
  1150  06A8                     l825:
  1151  06A8  09F9               	comf	___awdiv@dividend,f
  1152  06A9  09FA               	comf	___awdiv@dividend+1,f
  1153  06AA  0AF9               	incf	___awdiv@dividend,f
  1154  06AB  1903               	skipnz
  1155  06AC  0AFA               	incf	___awdiv@dividend+1,f
  1156  06AD                     l827:
  1157  06AD  3001               	movlw	1
  1158  06AE  00FB               	movwf	??___awdiv
  1159  06AF  087B               	movf	??___awdiv,w
  1160  06B0  06A7               	xorwf	___awdiv@sign,f
  1161  06B1                     l829:
  1162  06B1  01A8               	clrf	___awdiv@quotient
  1163  06B2  01A9               	clrf	___awdiv@quotient+1
  1164  06B3                     l831:
  1165  06B3  0877               	movf	___awdiv@divisor,w
  1166  06B4  0478               	iorwf	___awdiv@divisor+1,w
  1167  06B5  1903               	btfsc	3,2
  1168  06B6  2EB8               	goto	u331
  1169  06B7  2EB9               	goto	u330
  1170  06B8                     u331:
  1171  06B8  2EF0               	goto	l851
  1172  06B9                     u330:
  1173  06B9                     l833:
  1174  06B9  01A6               	clrf	___awdiv@counter
  1175  06BA  0AA6               	incf	___awdiv@counter,f
  1176  06BB  2EC7               	goto	l839
  1177  06BC                     l835:
  1178  06BC  3001               	movlw	1
  1179  06BD                     u345:
  1180  06BD  1003               	clrc
  1181  06BE  0DF7               	rlf	___awdiv@divisor,f
  1182  06BF  0DF8               	rlf	___awdiv@divisor+1,f
  1183  06C0  3EFF               	addlw	-1
  1184  06C1  1D03               	skipz
  1185  06C2  2EBD               	goto	u345
  1186  06C3                     l837:
  1187  06C3  3001               	movlw	1
  1188  06C4  00FB               	movwf	??___awdiv
  1189  06C5  087B               	movf	??___awdiv,w
  1190  06C6  07A6               	addwf	___awdiv@counter,f
  1191  06C7                     l839:
  1192  06C7  1FF8               	btfss	___awdiv@divisor+1,7
  1193  06C8  2ECA               	goto	u351
  1194  06C9  2ECB               	goto	u350
  1195  06CA                     u351:
  1196  06CA  2EBC               	goto	l835
  1197  06CB                     u350:
  1198  06CB                     l841:
  1199  06CB  3001               	movlw	1
  1200  06CC                     u365:
  1201  06CC  1003               	clrc
  1202  06CD  0DA8               	rlf	___awdiv@quotient,f
  1203  06CE  0DA9               	rlf	___awdiv@quotient+1,f
  1204  06CF  3EFF               	addlw	-1
  1205  06D0  1D03               	skipz
  1206  06D1  2ECC               	goto	u365
  1207  06D2  0878               	movf	___awdiv@divisor+1,w
  1208  06D3  027A               	subwf	___awdiv@dividend+1,w
  1209  06D4  1D03               	skipz
  1210  06D5  2ED8               	goto	u375
  1211  06D6  0877               	movf	___awdiv@divisor,w
  1212  06D7  0279               	subwf	___awdiv@dividend,w
  1213  06D8                     u375:
  1214  06D8  1C03               	skipc
  1215  06D9  2EDB               	goto	u371
  1216  06DA  2EDC               	goto	u370
  1217  06DB                     u371:
  1218  06DB  2EE3               	goto	l847
  1219  06DC                     u370:
  1220  06DC                     l843:
  1221  06DC  0877               	movf	___awdiv@divisor,w
  1222  06DD  02F9               	subwf	___awdiv@dividend,f
  1223  06DE  0878               	movf	___awdiv@divisor+1,w
  1224  06DF  1C03               	skipc
  1225  06E0  03FA               	decf	___awdiv@dividend+1,f
  1226  06E1  02FA               	subwf	___awdiv@dividend+1,f
  1227  06E2                     l845:
  1228  06E2  1428               	bsf	___awdiv@quotient,0
  1229  06E3                     l847:
  1230  06E3  3001               	movlw	1
  1231  06E4                     u385:
  1232  06E4  1003               	clrc
  1233  06E5  0CF8               	rrf	___awdiv@divisor+1,f
  1234  06E6  0CF7               	rrf	___awdiv@divisor,f
  1235  06E7  3EFF               	addlw	-1
  1236  06E8  1D03               	skipz
  1237  06E9  2EE4               	goto	u385
  1238  06EA                     l849:
  1239  06EA  3001               	movlw	1
  1240  06EB  02A6               	subwf	___awdiv@counter,f
  1241  06EC  1D03               	btfss	3,2
  1242  06ED  2EEF               	goto	u391
  1243  06EE  2EF0               	goto	u390
  1244  06EF                     u391:
  1245  06EF  2ECB               	goto	l841
  1246  06F0                     u390:
  1247  06F0                     l851:
  1248  06F0  0827               	movf	___awdiv@sign,w
  1249  06F1  1903               	btfsc	3,2
  1250  06F2  2EF4               	goto	u401
  1251  06F3  2EF5               	goto	u400
  1252  06F4                     u401:
  1253  06F4  2EFA               	goto	l855
  1254  06F5                     u400:
  1255  06F5                     l853:
  1256  06F5  09A8               	comf	___awdiv@quotient,f
  1257  06F6  09A9               	comf	___awdiv@quotient+1,f
  1258  06F7  0AA8               	incf	___awdiv@quotient,f
  1259  06F8  1903               	skipnz
  1260  06F9  0AA9               	incf	___awdiv@quotient+1,f
  1261  06FA                     l855:
  1262  06FA  0829               	movf	___awdiv@quotient+1,w
  1263  06FB  00F8               	movwf	?___awdiv+1
  1264  06FC  0828               	movf	___awdiv@quotient,w
  1265  06FD  00F7               	movwf	?___awdiv
  1266  06FE                     l296:
  1267  06FE  0008               	return
  1268  06FF                     __end_of___awdiv:
  1269  007E                     btemp	set	126	;btemp
  1270  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      4      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _lcd->_pulse
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2682
                            ___awdiv
                            ___awmod
                                _lcd
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                5     1      4     218
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     0      4    1260
                                              2 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _lcd
     _pulse
   _timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 28 12:56:59 2023

                     l42 05F4                       l39 060D                       l48 063C  
           ___awdiv@sign 0027                      l309 0695                      l296 06FE  
                    l801 05EF                      l811 0630                      l803 060E  
                    l821 06A2                      l813 063A                      l805 061C  
                    l901 071B                      l831 06B3                      l823 06A4  
                    l815 0696                      l807 061F                      l911 073B  
                    l903 0727                      l841 06CB                      l833 06B9  
                    l825 06A8                      l817 0699                      l809 062D  
                    l921 07A0                      l913 074E                      l905 072B  
                    l843 06DC                      l835 06BC                      l851 06F0  
                    l827 06AD                      l819 069D                      l923 07AC  
                    l915 076E                      l931 07E1                      l907 072F  
                    l853 06F5                      l845 06E2                      l837 06C3  
                    l829 06B1                      l861 063E                      l925 07BF  
                    l917 0781                      l909 0735                      l855 06FA  
                    l847 06E3                      l839 06C7                      l871 0652  
                    l863 0642                      l791 05F5                      l927 07CB  
                    l919 078D                      l849 06EA                      l881 066A  
                    l873 0658                      l865 0647                      l793 05F8  
                    l929 07DE                      l891 068C                      l883 0674  
                    l875 065B                      l867 0649                      l859 063D  
                    l795 0601                      l893 0691                      l885 067A  
                    l877 0662                      l869 064D                      l797 05E2  
                    l887 0681                      l879 0666                      l799 05ED  
                    l889 0687                      l897 06FF                      l899 070F  
                    _RC0 0038                      _RC5 003D                      _RC6 003E  
                    _RC7 003F                      u300 063A                      u301 0639  
                    u310 069D                      u311 069C                      u400 06F5  
                    u320 06A8                      u401 06F4                      u321 06A7  
                    u305 0636                      u330 06B9                      u410 0642  
                    u331 06B8                      u411 0641                      u420 064D  
                    u260 05E9                      u500 0735                      u421 064C  
                    u261 05E5                      u501 0734                      u350 06CB  
                    u430 0658                      u351 06CA                      u431 0657  
                    u280 061C                      u345 06BD                      u281 061B  
                    u370 06DC                      u450 066A                      u274 05EC  
                    u290 062D                      u371 06DB                      u451 0669  
                    u291 062C                      u460 0674                      u365 06CC  
                    u461 0673                      u445 065C                      u517 05FC  
                    u285 0618                      u390 06F0                      u391 06EF  
                    u375 06D8                      u527 0608                      u295 0629  
                    u480 0687                      u385 06E4                      u481 0686  
                    u465 0670                      u490 068C                      u491 068B  
                    u475 067B                      _lcd 05E2             ___awmod@sign 0076  
                   ?_lcd 0072                     _TMR1 000E                     _dig1 0024  
                   _dig2 0022                     _dig3 0020                     _main 06FF  
                   lcd@a 0072                     lcd@b 0074                     btemp 007E  
                   start 0000                    ??_lcd 0076                    ?_main 0070  
        __end_of___awdiv 06FF          __end_of___awmod 0696                    _ANSEL 0188  
        ___awdiv@divisor 0077                    _T1CON 0010          ___awdiv@counter 0026  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    _count 007C                    _timer 060E  
                  _pulse 05F5                    status 0003                    wtemp0 007E  
        __initialization 07F2             __end_of_main 07F2                   ??_main 007C  
       ___awdiv@dividend 0079                   ?_timer 0070                   ?_pulse 0070  
                 _ANSELH 0189                   _TMR1IF 0060                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 0028          ___awmod@divisor 0070  
        ___awmod@counter 0075                   timer@a 0070                   timer@b 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_timer 063D  
          __end_of_pulse 060E                  ??_timer 0074                  ??_pulse 0070  
             __pbssBANK0 0020               __pmaintext 06FF                  ___awdiv 0696  
                ___awmod 063D                  __ptext1 060E                  __ptext2 05E2  
                __ptext3 05F5                  __ptext4 063D                  __ptext5 0696  
           __size_of_lcd 0013         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07F2              __end_of_lcd 05F5              __pbssCOMMON 007C  
              ___latbits 0002            __pcstackBANK0 0026                 ?___awdiv 0077  
               ?___awmod 0070           __size_of_timer 002F           __size_of_pulse 0019  
       __size_of___awdiv 0069         __size_of___awmod 0059            __size_of_main 00F3  
