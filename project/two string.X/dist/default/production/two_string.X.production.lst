

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 11 12:14:37 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0008                     _PORTD	set	8
   207  0005                     _PORTA	set	5
   208  0046                     _RD6	set	70
   209  0045                     _RD5	set	69
   210  0047                     _RD7	set	71
   211  0088                     _TRISD	set	136
   212  0085                     _TRISA	set	133
   213  0189                     _ANSELH	set	393
   214  0188                     _ANSEL	set	392
   215                           
   216                           	psect	strings
   217  0003                     __pstrings:
   218  0003                     stringtab:
   219  0003                     __stringtab:
   220  0003                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223  0003                     stringdir:
   224  0003  3000               	movlw	high stringdir
   225  0004  008A               	movwf	10
   226  0005  0804               	movf	4,w
   227  0006  0A84               	incf	4,f
   228  0007  0782               	addwf	2,f
   229  0008                     __stringbase:
   230  0008  3400               	retlw	0
   231  0009                     __end_of__stringtab:
   232  0009                     STR_1:
   233  0009  3464               	retlw	100	;'d'
   234  000A  3469               	retlw	105	;'i'
   235  000B  3476               	retlw	118	;'v'
   236  000C  3461               	retlw	97	;'a'
   237  000D  3467               	retlw	103	;'g'
   238  000E  3461               	retlw	97	;'a'
   239  000F  3472               	retlw	114	;'r'
   240  0010  3420               	retlw	32	;' '
   241  0011  346E               	retlw	110	;'n'
   242  0012  3461               	retlw	97	;'a'
   243  0013  3474               	retlw	116	;'t'
   244  0014  3461               	retlw	97	;'a'
   245  0015  3472               	retlw	114	;'r'
   246  0016  346A               	retlw	106	;'j'
   247  0017  3461               	retlw	97	;'a'
   248  0018  344E               	retlw	78	;'N'
   249  0019  3400               	retlw	0
   250  001A                     STR_2:
   251  001A  3442               	retlw	66	;'B'
   252  001B  344C               	retlw	76	;'L'
   253  001C  344F               	retlw	79	;'O'
   254  001D  344F               	retlw	79	;'O'
   255  001E  3444               	retlw	68	;'D'
   256  001F  3459               	retlw	89	;'Y'
   257  0020  3420               	retlw	32	;' '
   258  0021  3453               	retlw	83	;'S'
   259  0022  3457               	retlw	87	;'W'
   260  0023  3445               	retlw	69	;'E'
   261  0024  3445               	retlw	69	;'E'
   262  0025  3454               	retlw	84	;'T'
   263  0026  3400               	retlw	0
   264                           
   265                           	psect	cinit
   266  07FC                     start_initialization:	
   267                           ; #config settings
   268                           
   269  07FC                     __initialization:
   270  07FC                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  07FC                     __end_of__initialization:
   274  07FC  0183               	clrf	3
   275  07FD  120A  118A  2FC8   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_type:
   280  0070                     ?_on:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_address1:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_display:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_address2:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_pulse:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_pulse:	
   299                           ; 1 bytes @ 0x0
   300                           
   301                           
   302                           ; 2 bytes @ 0x0
   303  0070                     	ds	2
   304  0072                     ??_type:
   305  0072                     ??_on:	
   306                           ; 1 bytes @ 0x2
   307                           
   308  0072                     ??_address1:	
   309                           ; 1 bytes @ 0x2
   310                           
   311  0072                     ??_display:	
   312                           ; 1 bytes @ 0x2
   313                           
   314  0072                     ??_address2:	
   315                           ; 1 bytes @ 0x2
   316                           
   317  0072                     display@i:	
   318                           ; 1 bytes @ 0x2
   319                           
   320                           
   321                           ; 2 bytes @ 0x2
   322  0072                     	ds	2
   323  0074                     display@name:
   324                           
   325                           ; 1 bytes @ 0x4
   326  0074                     	ds	1
   327  0075                     ??_main:
   328                           
   329                           	psect	maintext
   330  07C8                     __pmaintext:	
   331                           ; 1 bytes @ 0x5
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 25 in file "two string.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels required when called: 2
   357 ;; This function calls:
   358 ;;		_address1
   359 ;;		_address2
   360 ;;		_display
   361 ;;		_on
   362 ;;		_type
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           
   369                           ;psect for function _main
   370  07C8                     _main:
   371  07C8                     l731:	
   372                           ;incstack = 0
   373                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   374                           
   375                           
   376                           ;two string.c: 27:     TRISA=0x00;
   377  07C8  1683               	bsf	3,5	;RP0=1, select bank1
   378  07C9  1303               	bcf	3,6	;RP1=0, select bank1
   379  07CA  0185               	clrf	5	;volatile
   380                           
   381                           ;two string.c: 28:     PORTA=0x00;
   382  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   383  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   384  07CD  0185               	clrf	5	;volatile
   385                           
   386                           ;two string.c: 29:     TRISD=0x00;
   387  07CE  1683               	bsf	3,5	;RP0=1, select bank1
   388  07CF  1303               	bcf	3,6	;RP1=0, select bank1
   389  07D0  0188               	clrf	8	;volatile
   390                           
   391                           ;two string.c: 30:     PORTD=0x00;
   392  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   393  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   394  07D3  0188               	clrf	8	;volatile
   395                           
   396                           ;two string.c: 31:     ANSEL=0x00;
   397  07D4  1683               	bsf	3,5	;RP0=1, select bank3
   398  07D5  1703               	bsf	3,6	;RP1=1, select bank3
   399  07D6  0188               	clrf	8	;volatile
   400                           
   401                           ;two string.c: 32:     ANSELH=0x00;
   402  07D7  0189               	clrf	9	;volatile
   403  07D8                     l733:
   404                           
   405                           ;two string.c: 33:     type();
   406  07D8  120A  118A  2749  120A  118A  	fcall	_type
   407  07DD                     l735:
   408                           
   409                           ;two string.c: 34:     on();
   410  07DD  120A  118A  273D  120A  118A  	fcall	_on
   411  07E2                     l737:
   412                           
   413                           ;two string.c: 36:     {;two string.c: 37:         address1();
   414  07E2  120A  118A  2755  120A  118A  	fcall	_address1
   415  07E7                     l739:
   416                           
   417                           ;two string.c: 38:     display("divagar natarjaN");
   418  07E7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   419  07E8  120A  118A  279C  120A  118A  	fcall	_display
   420  07ED                     l741:
   421                           
   422                           ;two string.c: 39:     address2();
   423  07ED  120A  118A  276C  120A  118A  	fcall	_address2
   424  07F2                     l743:
   425                           
   426                           ;two string.c: 40:     display("BLOODY SWEET");
   427  07F2  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   428  07F3  120A  118A  279C  120A  118A  	fcall	_display
   429  07F8  2FE2               	goto	l737
   430  07F9  120A  118A  2800   	ljmp	start
   431  07FC                     __end_of_main:
   432                           
   433                           	psect	text1
   434  0749                     __ptext1:	
   435 ;; *************** function _type *****************
   436 ;; Defined at:
   437 ;;		line 44 in file "two string.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   451 ;;      Params:         0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 1
   458 ;; This function calls:
   459 ;;		_pulse
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           
   466                           ;psect for function _type
   467  0749                     _type:
   468  0749                     l657:	
   469                           ;incstack = 0
   470                           ; Regs used in _type: [wreg+status,2+status,0+pclath+cstack]
   471                           
   472                           
   473                           ;two string.c: 46:     RD5=0;
   474  0749  1283               	bcf	3,5	;RP0=0, select bank0
   475  074A  1303               	bcf	3,6	;RP1=0, select bank0
   476  074B  1288               	bcf	8,5	;volatile
   477                           
   478                           ;two string.c: 47:     RD6=0;
   479  074C  1308               	bcf	8,6	;volatile
   480  074D                     l659:
   481                           
   482                           ;two string.c: 48:     PORTA=0x38;
   483  074D  3038               	movlw	56
   484  074E  0085               	movwf	5	;volatile
   485  074F                     l661:
   486                           
   487                           ;two string.c: 49:     pulse();
   488  074F  120A  118A  2783  120A  118A  	fcall	_pulse
   489  0754                     l44:
   490  0754  0008               	return
   491  0755                     __end_of_type:
   492                           
   493                           	psect	text2
   494  073D                     __ptext2:	
   495 ;; *************** function _on *****************
   496 ;; Defined at:
   497 ;;		line 51 in file "two string.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used: 1
   517 ;; Hardware stack levels required when called: 1
   518 ;; This function calls:
   519 ;;		_pulse
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _on
   527  073D                     _on:
   528  073D                     l663:	
   529                           ;incstack = 0
   530                           ; Regs used in _on: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;two string.c: 53:     RD5=0;
   534  073D  1283               	bcf	3,5	;RP0=0, select bank0
   535  073E  1303               	bcf	3,6	;RP1=0, select bank0
   536  073F  1288               	bcf	8,5	;volatile
   537                           
   538                           ;two string.c: 54:     RD6=0;
   539  0740  1308               	bcf	8,6	;volatile
   540  0741                     l665:
   541                           
   542                           ;two string.c: 55:     PORTA=0x0E;
   543  0741  300E               	movlw	14
   544  0742  0085               	movwf	5	;volatile
   545  0743                     l667:
   546                           
   547                           ;two string.c: 56:     pulse();
   548  0743  120A  118A  2783  120A  118A  	fcall	_pulse
   549  0748                     l47:
   550  0748  0008               	return
   551  0749                     __end_of_on:
   552                           
   553                           	psect	text3
   554  079C                     __ptext3:	
   555 ;; *************** function _display *****************
   556 ;; Defined at:
   557 ;;		line 82 in file "two string.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  name            1    wreg     PTR unsigned char 
   560 ;;		 -> STR_2(13), STR_1(17), 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  name            1    4[COMMON] PTR unsigned char 
   563 ;;		 -> STR_2(13), STR_1(17), 
   564 ;;  i               2    2[COMMON] int 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         3       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         3       0       0       0       0
   578 ;;Total ram usage:        3 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 1
   581 ;; This function calls:
   582 ;;		_pulse
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _display
   590  079C                     _display:
   591                           
   592                           ;incstack = 0
   593                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   594                           ;display@name stored from wreg
   595  079C  00F4               	movwf	display@name
   596  079D                     l719:
   597                           
   598                           ;two string.c: 82:      void display(char *name);two string.c: 83:      {;two string.c: 
      +                          85:                 RD5=1;
   599  079D  1283               	bcf	3,5	;RP0=0, select bank0
   600  079E  1303               	bcf	3,6	;RP1=0, select bank0
   601  079F  1688               	bsf	8,5	;volatile
   602                           
   603                           ;two string.c: 86:                  RD6=0;
   604  07A0  1308               	bcf	8,6	;volatile
   605  07A1                     l721:
   606                           
   607                           ;two string.c: 88:          int i;;two string.c: 89:          for(i=0;name[i]!='\0';i++)
   608  07A1  01F2               	clrf	display@i
   609  07A2  01F3               	clrf	display@i+1
   610  07A3  2FBA               	goto	l729
   611  07A4                     l723:
   612                           
   613                           ;two string.c: 90:          {;two string.c: 92:        PORTA=name[i];
   614  07A4  0872               	movf	display@i,w
   615  07A5  0774               	addwf	display@name,w
   616  07A6  0084               	movwf	4
   617  07A7  120A  118A  2003  120A  118A  	fcall	stringdir
   618  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   619  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   620  07AE  0085               	movwf	5	;volatile
   621  07AF                     l725:
   622                           
   623                           ;two string.c: 93:        pulse();
   624  07AF  120A  118A  2783  120A  118A  	fcall	_pulse
   625  07B4                     l727:
   626                           
   627                           ;two string.c: 94:      }
   628  07B4  3001               	movlw	1
   629  07B5  07F2               	addwf	display@i,f
   630  07B6  1803               	skipnc
   631  07B7  0AF3               	incf	display@i+1,f
   632  07B8  3000               	movlw	0
   633  07B9  07F3               	addwf	display@i+1,f
   634  07BA                     l729:
   635  07BA  0872               	movf	display@i,w
   636  07BB  0774               	addwf	display@name,w
   637  07BC  0084               	movwf	4
   638  07BD  120A  118A  2003  120A  118A  	fcall	stringdir
   639  07C2  3A00               	xorlw	0
   640  07C3  1D03               	skipz
   641  07C4  2FC6               	goto	u21
   642  07C5  2FC7               	goto	u20
   643  07C6                     u21:
   644  07C6  2FA4               	goto	l723
   645  07C7                     u20:
   646  07C7                     l59:
   647  07C7  0008               	return
   648  07C8                     __end_of_display:
   649                           
   650                           	psect	text4
   651  076C                     __ptext4:	
   652 ;; *************** function _address2 *****************
   653 ;; Defined at:
   654 ;;		line 71 in file "two string.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 1
   675 ;; This function calls:
   676 ;;		_pulse
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _address2
   684  076C                     _address2:
   685  076C                     l693:	
   686                           ;incstack = 0
   687                           ; Regs used in _address2: [wreg+status,2+status,0+pclath+cstack]
   688                           
   689                           
   690                           ;two string.c: 73:          RD5=0;
   691  076C  1283               	bcf	3,5	;RP0=0, select bank0
   692  076D  1303               	bcf	3,6	;RP1=0, select bank0
   693  076E  1288               	bcf	8,5	;volatile
   694                           
   695                           ;two string.c: 74:          RD6=0;
   696  076F  1308               	bcf	8,6	;volatile
   697  0770                     l695:
   698                           
   699                           ;two string.c: 75:          PORTA=0xC0;
   700  0770  30C0               	movlw	192
   701  0771  0085               	movwf	5	;volatile
   702  0772                     l697:
   703                           
   704                           ;two string.c: 76:          pulse();
   705  0772  120A  118A  2783  120A  118A  	fcall	_pulse
   706  0777                     l699:
   707                           
   708                           ;two string.c: 77:          RD5=0;RD6=0;
   709  0777  1283               	bcf	3,5	;RP0=0, select bank0
   710  0778  1303               	bcf	3,6	;RP1=0, select bank0
   711  0779  1288               	bcf	8,5	;volatile
   712  077A                     l701:
   713  077A  1308               	bcf	8,6	;volatile
   714  077B                     l703:
   715                           
   716                           ;two string.c: 78:          PORTA=0x1C;
   717  077B  301C               	movlw	28
   718  077C  0085               	movwf	5	;volatile
   719                           
   720                           ;two string.c: 79:          pulse();
   721  077D  120A  118A  2783  120A  118A  	fcall	_pulse
   722  0782                     l53:
   723  0782  0008               	return
   724  0783                     __end_of_address2:
   725                           
   726                           	psect	text5
   727  0755                     __ptext5:	
   728 ;; *************** function _address1 *****************
   729 ;; Defined at:
   730 ;;		line 59 in file "two string.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 1
   751 ;; This function calls:
   752 ;;		_pulse
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _address1
   760  0755                     _address1:
   761  0755                     l669:	
   762                           ;incstack = 0
   763                           ; Regs used in _address1: [wreg+status,2+status,0+pclath+cstack]
   764                           
   765                           
   766                           ;two string.c: 61:          RD5=0;
   767  0755  1283               	bcf	3,5	;RP0=0, select bank0
   768  0756  1303               	bcf	3,6	;RP1=0, select bank0
   769  0757  1288               	bcf	8,5	;volatile
   770                           
   771                           ;two string.c: 62:          RD6=0;
   772  0758  1308               	bcf	8,6	;volatile
   773  0759                     l671:
   774                           
   775                           ;two string.c: 63:          PORTA=0x80;
   776  0759  3080               	movlw	128
   777  075A  0085               	movwf	5	;volatile
   778  075B                     l673:
   779                           
   780                           ;two string.c: 64:          pulse();
   781  075B  120A  118A  2783  120A  118A  	fcall	_pulse
   782  0760                     l675:
   783                           
   784                           ;two string.c: 65:          RD5=0;
   785  0760  1283               	bcf	3,5	;RP0=0, select bank0
   786  0761  1303               	bcf	3,6	;RP1=0, select bank0
   787  0762  1288               	bcf	8,5	;volatile
   788  0763                     l677:
   789                           
   790                           ;two string.c: 66:          RD6=0;
   791  0763  1308               	bcf	8,6	;volatile
   792  0764                     l679:
   793                           
   794                           ;two string.c: 67:          PORTA=0x1c;
   795  0764  301C               	movlw	28
   796  0765  0085               	movwf	5	;volatile
   797                           
   798                           ;two string.c: 68:          pulse();
   799  0766  120A  118A  2783  120A  118A  	fcall	_pulse
   800  076B                     l50:
   801  076B  0008               	return
   802  076C                     __end_of_address1:
   803                           
   804                           	psect	text6
   805  0783                     __ptext6:	
   806 ;; *************** function _pulse *****************
   807 ;; Defined at:
   808 ;;		line 17 in file "two string.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2   32[None  ] int 
   815 ;; Registers used:
   816 ;;		wreg
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          2       0       0       0       0
   825 ;;      Totals:         2       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_type
   832 ;;		_on
   833 ;;		_address1
   834 ;;		_address2
   835 ;;		_display
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _pulse
   841  0783                     _pulse:
   842  0783                     l651:	
   843                           ;incstack = 0
   844                           ; Regs used in _pulse: [wreg]
   845                           
   846                           
   847                           ;two string.c: 19:     RD7=1;
   848  0783  1283               	bcf	3,5	;RP0=0, select bank0
   849  0784  1303               	bcf	3,6	;RP1=0, select bank0
   850  0785  1788               	bsf	8,7	;volatile
   851  0786                     l653:
   852                           
   853                           ;two string.c: 20:     _delay((unsigned long)((500)*(400000/4000.0)));
   854  0786  3041               	movlw	65
   855  0787  00F1               	movwf	??_pulse+1
   856  0788  30EE               	movlw	238
   857  0789  00F0               	movwf	??_pulse
   858  078A                     u37:
   859  078A  0BF0               	decfsz	??_pulse,f
   860  078B  2F8A               	goto	u37
   861  078C  0BF1               	decfsz	??_pulse+1,f
   862  078D  2F8A               	goto	u37
   863  078E  0000               	nop
   864  078F                     l655:
   865                           
   866                           ;two string.c: 21:     RD7=0;
   867  078F  1283               	bcf	3,5	;RP0=0, select bank0
   868  0790  1303               	bcf	3,6	;RP1=0, select bank0
   869  0791  1388               	bcf	8,7	;volatile
   870                           
   871                           ;two string.c: 22:     _delay((unsigned long)((500)*(400000/4000.0)));
   872  0792  3041               	movlw	65
   873  0793  00F1               	movwf	??_pulse+1
   874  0794  30EE               	movlw	238
   875  0795  00F0               	movwf	??_pulse
   876  0796                     u47:
   877  0796  0BF0               	decfsz	??_pulse,f
   878  0797  2F96               	goto	u47
   879  0798  0BF1               	decfsz	??_pulse+1,f
   880  0799  2F96               	goto	u47
   881  079A  0000               	nop
   882  079B                     l33:
   883  079B  0008               	return
   884  079C                     __end_of_pulse:
   885  007E                     btemp	set	126	;btemp
   886  007E                     wtemp0	set	126

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@name	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[13]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_display
    _type->_pulse
    _on->_pulse
    _display->_pulse
    _address2->_pulse
    _address1->_pulse

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     156
                           _address1
                           _address2
                            _display
                                 _on
                               _type
 ---------------------------------------------------------------------------------
 (1) _type                                                 0     0      0       0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _on                                                   0     0      0       0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _display                                              3     3      0     156
                                              2 COMMON     3     3      0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _address2                                             0     0      0       0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _address1                                             0     0      0       0
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _address1
     _pulse
   _address2
     _pulse
   _display
     _pulse
   _on
     _pulse
   _type
     _pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 11 12:14:37 2023

                      pc 0002                       l33 079B                       l50 076B  
                     l44 0754                       l53 0782                       l47 0748  
                     l59 07C7                       u20 07C7                       u21 07C6  
                     u37 078A                       u47 0796                       _on 073D  
                     fsr 0004                      ?_on 0070                      l701 077A  
                    l703 077B                      l721 07A1                      l651 0783  
                    l723 07A4                      l731 07C8                      l653 0786  
                    l725 07AF                      l661 074F                      l741 07ED  
                    l733 07D8                      l655 078F                      l671 0759  
                    l727 07B4                      l719 079D                      l663 073D  
                    l743 07F2                      l735 07DD                      l673 075B  
                    l729 07BA                      l665 0741                      l657 0749  
                    l737 07E2                      l675 0760                      l667 0743  
                    l659 074D                      l739 07E7                      l677 0763  
                    l669 0755                      l693 076C                      l679 0764  
                    l695 0770                      l697 0772                      l699 0777  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    fsr0 0004                     ??_on 0072                     STR_1 0009  
                   STR_2 001A              display@name 0074                     _main 07C8  
                   btemp 007E                     _type 0749                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    ?_type 0070  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088          __end_of_display 07C8                    _pulse 0783  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_type 0755  
                 ??_main 0075                   ??_type 0072                   ?_pulse 0070  
                 _ANSELH 0189         __end_of_address1 076C         __end_of_address2 0783  
              ??_display 0072  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_pulse 079C               __end_of_on 0749                  ??_pulse 0070  
             __pmaintext 07C8                ?_address1 0070                ?_address2 0070  
             __stringtab 0003                  __ptext1 0749                  __ptext2 073D  
                __ptext3 079C                  __ptext4 076C                  __ptext5 0755  
                __ptext6 0783                  _display 079C               ??_address1 0072  
             ??_address2 0072     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002        __size_of_address1 0017        __size_of_address2 0017  
              __pstrings 0003                 ?_display 0070           __size_of_pulse 0019  
            __size_of_on 000C              __stringbase 0008       __end_of__stringtab 0009  
               _address1 0755                 _address2 076C         __size_of_display 002C  
          __size_of_main 0034            __size_of_type 000C                 display@i 0072  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
