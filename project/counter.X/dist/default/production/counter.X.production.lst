

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 03 15:53:32 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0001                     _TMR0	set	1
   206  0007                     _PORTC	set	7
   207  0005                     _PORTA	set	5
   208  0008                     _PORTD	set	8
   209  003E                     _RC6	set	62
   210  003D                     _RC5	set	61
   211  003F                     _RC7	set	63
   212  0081                     _OPTION_REG	set	129
   213  0088                     _TRISD	set	136
   214  0087                     _TRISC	set	135
   215  0085                     _TRISA	set	133
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	cinit
   219  07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07FC                     __initialization:
   223  07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226  07FC                     __end_of__initialization:
   227  07FC  0183               	clrf	3
   228  07FD  120A  118A  2E4D   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:
   232  0070                     ?_pulse:
   233  0070                     ??_pulse:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?___awmod:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ___awmod@divisor:	
   243                           ; 2 bytes @ 0x0
   244                           
   245                           
   246                           ; 2 bytes @ 0x0
   247  0070                     	ds	1
   248  0071                     ?_lcd:
   249  0071                     lcd@a:	
   250                           ; 1 bytes @ 0x1
   251                           
   252                           
   253                           ; 2 bytes @ 0x1
   254  0071                     	ds	1
   255  0072                     ___awmod@dividend:
   256                           
   257                           ; 2 bytes @ 0x2
   258  0072                     	ds	1
   259  0073                     lcd@b:
   260                           
   261                           ; 2 bytes @ 0x3
   262  0073                     	ds	1
   263  0074                     ??___awmod:
   264                           
   265                           ; 1 bytes @ 0x4
   266  0074                     	ds	1
   267  0075                     ??_lcd:
   268  0075                     ___awmod@counter:	
   269                           ; 1 bytes @ 0x5
   270                           
   271                           
   272                           ; 1 bytes @ 0x5
   273  0075                     	ds	1
   274  0076                     ___awmod@sign:
   275                           
   276                           ; 1 bytes @ 0x6
   277  0076                     	ds	1
   278  0077                     ?___awdiv:
   279  0077                     ___awdiv@divisor:	
   280                           ; 2 bytes @ 0x7
   281                           
   282                           
   283                           ; 2 bytes @ 0x7
   284  0077                     	ds	2
   285  0079                     ___awdiv@dividend:
   286                           
   287                           ; 2 bytes @ 0x9
   288  0079                     	ds	2
   289  007B                     ??___awdiv:
   290                           
   291                           ; 1 bytes @ 0xB
   292  007B                     	ds	1
   293  007C                     ??_display:
   294  007C                     ??_main:	
   295                           ; 1 bytes @ 0xC
   296                           
   297                           
   298                           ; 1 bytes @ 0xC
   299  007C                     	ds	2
   300                           
   301                           	psect	cstackBANK0
   302  0020                     __pcstackBANK0:
   303  0020                     ___awdiv@counter:
   304                           
   305                           ; 1 bytes @ 0x0
   306  0020                     	ds	1
   307  0021                     ___awdiv@sign:
   308                           
   309                           ; 1 bytes @ 0x1
   310  0021                     	ds	1
   311  0022                     ___awdiv@quotient:
   312                           
   313                           ; 2 bytes @ 0x2
   314  0022                     	ds	2
   315  0024                     ?_display:
   316  0024                     display@k:	
   317                           ; 1 bytes @ 0x4
   318                           
   319                           
   320                           ; 2 bytes @ 0x4
   321  0024                     	ds	2
   322  0026                     display@a:
   323                           
   324                           ; 2 bytes @ 0x6
   325  0026                     	ds	2
   326  0028                     display@b:
   327                           
   328                           ; 2 bytes @ 0x8
   329  0028                     	ds	2
   330  002A                     display@c:
   331                           
   332                           ; 2 bytes @ 0xA
   333  002A                     	ds	2
   334                           
   335                           	psect	maintext
   336  064D                     __pmaintext:	
   337 ;;
   338 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   339 ;;
   340 ;; *************** function _main *****************
   341 ;; Defined at:
   342 ;;		line 42 in file "counter.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0
   358 ;;      Temps:          2       0       0       0       0
   359 ;;      Totals:         2       0       0       0       0
   360 ;;Total ram usage:        2 bytes
   361 ;; Hardware stack levels required when called: 3
   362 ;; This function calls:
   363 ;;		_display
   364 ;;		_lcd
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           
   371                           ;psect for function _main
   372  064D                     _main:
   373  064D                     l849:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   376                           
   377                           
   378                           ;counter.c: 44:     TRISA=0x10;
   379  064D  3010               	movlw	16
   380  064E  1683               	bsf	3,5	;RP0=1, select bank1
   381  064F  1303               	bcf	3,6	;RP1=0, select bank1
   382  0650  0085               	movwf	5	;volatile
   383  0651                     l851:
   384                           
   385                           ;counter.c: 45:     PORTA=0x00;
   386  0651  1283               	bcf	3,5	;RP0=0, select bank0
   387  0652  1303               	bcf	3,6	;RP1=0, select bank0
   388  0653  0185               	clrf	5	;volatile
   389  0654                     l853:
   390                           
   391                           ;counter.c: 46:     TRISC=0x00;
   392  0654  1683               	bsf	3,5	;RP0=1, select bank1
   393  0655  1303               	bcf	3,6	;RP1=0, select bank1
   394  0656  0187               	clrf	7	;volatile
   395  0657                     l855:
   396                           
   397                           ;counter.c: 47:     PORTC=0x00;
   398  0657  1283               	bcf	3,5	;RP0=0, select bank0
   399  0658  1303               	bcf	3,6	;RP1=0, select bank0
   400  0659  0187               	clrf	7	;volatile
   401  065A                     l857:
   402                           
   403                           ;counter.c: 48:     TRISD=0x00;
   404  065A  1683               	bsf	3,5	;RP0=1, select bank1
   405  065B  1303               	bcf	3,6	;RP1=0, select bank1
   406  065C  0188               	clrf	8	;volatile
   407  065D                     l859:
   408                           
   409                           ;counter.c: 49:     PORTD=0x00;
   410  065D  1283               	bcf	3,5	;RP0=0, select bank0
   411  065E  1303               	bcf	3,6	;RP1=0, select bank0
   412  065F  0188               	clrf	8	;volatile
   413  0660                     l861:
   414                           
   415                           ;counter.c: 50:     ANSEL=0x00;
   416  0660  1683               	bsf	3,5	;RP0=1, select bank3
   417  0661  1703               	bsf	3,6	;RP1=1, select bank3
   418  0662  0188               	clrf	8	;volatile
   419                           
   420                           ;counter.c: 51:     OPTION_REG=0x20;
   421  0663  3020               	movlw	32
   422  0664  1683               	bsf	3,5	;RP0=1, select bank1
   423  0665  1303               	bcf	3,6	;RP1=0, select bank1
   424  0666  0081               	movwf	1	;volatile
   425  0667                     l863:
   426                           
   427                           ;counter.c: 52:     TMR0=0;
   428  0667  1283               	bcf	3,5	;RP0=0, select bank0
   429  0668  1303               	bcf	3,6	;RP1=0, select bank0
   430  0669  0181               	clrf	1	;volatile
   431  066A                     l865:
   432                           
   433                           ;counter.c: 53:      lcd(0x38,0);
   434  066A  3038               	movlw	56
   435  066B  00F1               	movwf	lcd@a
   436  066C  3000               	movlw	0
   437  066D  00F2               	movwf	lcd@a+1
   438  066E  3000               	movlw	0
   439  066F  00F3               	movwf	lcd@b
   440  0670  00F4               	movwf	lcd@b+1
   441  0671  120A  118A  263A  120A  118A  	fcall	_lcd
   442  0676                     l867:
   443                           
   444                           ;counter.c: 54:     lcd(0x0e,0);
   445  0676  300E               	movlw	14
   446  0677  00F1               	movwf	lcd@a
   447  0678  3000               	movlw	0
   448  0679  00F2               	movwf	lcd@a+1
   449  067A  3000               	movlw	0
   450  067B  00F3               	movwf	lcd@b
   451  067C  00F4               	movwf	lcd@b+1
   452  067D  120A  118A  263A  120A  118A  	fcall	_lcd
   453  0682                     l869:
   454                           
   455                           ;counter.c: 57:     {;counter.c: 58:         display(TMR0);
   456  0682  1283               	bcf	3,5	;RP0=0, select bank0
   457  0683  1303               	bcf	3,6	;RP1=0, select bank0
   458  0684  0801               	movf	1,w	;volatile
   459  0685  00FC               	movwf	??_main
   460  0686  01FD               	clrf	??_main+1
   461  0687  087C               	movf	??_main,w
   462  0688  00A4               	movwf	display@k
   463  0689  087D               	movf	??_main+1,w
   464  068A  00A5               	movwf	display@k+1
   465  068B  120A  118A  2756  120A  118A  	fcall	_display
   466  0690  2E82               	goto	l869
   467  0691  120A  118A  2800   	ljmp	start
   468  0694                     __end_of_main:
   469                           
   470                           	psect	text1
   471  0756                     __ptext1:	
   472 ;; *************** function _display *****************
   473 ;; Defined at:
   474 ;;		line 28 in file "counter.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  k               2    4[BANK0 ] int 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  c               2   10[BANK0 ] int 
   479 ;;  b               2    8[BANK0 ] int 
   480 ;;  a               2    6[BANK0 ] int 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       2       0       0       0
   491 ;;      Locals:         0       6       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       8       0       0       0
   494 ;;Total ram usage:        8 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 2
   497 ;; This function calls:
   498 ;;		___awdiv
   499 ;;		___awmod
   500 ;;		_lcd
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _display
   508  0756                     _display:
   509  0756                     l847:	
   510                           ;incstack = 0
   511                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;counter.c: 28: void display(int k);counter.c: 29: {;counter.c: 31:     int a,b,c;;count
      +                          er.c: 32:     a=k/100;
   515  0756  3064               	movlw	100
   516  0757  00F7               	movwf	___awdiv@divisor
   517  0758  3000               	movlw	0
   518  0759  00F8               	movwf	___awdiv@divisor+1
   519  075A  1283               	bcf	3,5	;RP0=0, select bank0
   520  075B  1303               	bcf	3,6	;RP1=0, select bank0
   521  075C  0825               	movf	display@k+1,w
   522  075D  00FA               	movwf	___awdiv@dividend+1
   523  075E  0824               	movf	display@k,w
   524  075F  00F9               	movwf	___awdiv@dividend
   525  0760  120A  118A  26ED  120A  118A  	fcall	___awdiv
   526  0765  0878               	movf	?___awdiv+1,w
   527  0766  1283               	bcf	3,5	;RP0=0, select bank0
   528  0767  1303               	bcf	3,6	;RP1=0, select bank0
   529  0768  00A7               	movwf	display@a+1
   530  0769  0877               	movf	?___awdiv,w
   531  076A  00A6               	movwf	display@a
   532                           
   533                           ;counter.c: 33:     b=((k%100)/10);
   534  076B  300A               	movlw	10
   535  076C  00F7               	movwf	___awdiv@divisor
   536  076D  3000               	movlw	0
   537  076E  00F8               	movwf	___awdiv@divisor+1
   538  076F  0825               	movf	display@k+1,w
   539  0770  00F3               	movwf	___awmod@dividend+1
   540  0771  0824               	movf	display@k,w
   541  0772  00F2               	movwf	___awmod@dividend
   542  0773  3064               	movlw	100
   543  0774  00F0               	movwf	___awmod@divisor
   544  0775  3000               	movlw	0
   545  0776  00F1               	movwf	___awmod@divisor+1
   546  0777  120A  118A  2694  120A  118A  	fcall	___awmod
   547  077C  0871               	movf	?___awmod+1,w
   548  077D  00FA               	movwf	___awdiv@dividend+1
   549  077E  0870               	movf	?___awmod,w
   550  077F  00F9               	movwf	___awdiv@dividend
   551  0780  120A  118A  26ED  120A  118A  	fcall	___awdiv
   552  0785  0878               	movf	?___awdiv+1,w
   553  0786  1283               	bcf	3,5	;RP0=0, select bank0
   554  0787  1303               	bcf	3,6	;RP1=0, select bank0
   555  0788  00A9               	movwf	display@b+1
   556  0789  0877               	movf	?___awdiv,w
   557  078A  00A8               	movwf	display@b
   558                           
   559                           ;counter.c: 34:     c=(k%10);
   560  078B  300A               	movlw	10
   561  078C  00F0               	movwf	___awmod@divisor
   562  078D  3000               	movlw	0
   563  078E  00F1               	movwf	___awmod@divisor+1
   564  078F  0825               	movf	display@k+1,w
   565  0790  00F3               	movwf	___awmod@dividend+1
   566  0791  0824               	movf	display@k,w
   567  0792  00F2               	movwf	___awmod@dividend
   568  0793  120A  118A  2694  120A  118A  	fcall	___awmod
   569  0798  0871               	movf	?___awmod+1,w
   570  0799  1283               	bcf	3,5	;RP0=0, select bank0
   571  079A  1303               	bcf	3,6	;RP1=0, select bank0
   572  079B  00AB               	movwf	display@c+1
   573  079C  0870               	movf	?___awmod,w
   574  079D  00AA               	movwf	display@c
   575                           
   576                           ;counter.c: 35:    lcd(0x80,0);
   577  079E  3080               	movlw	128
   578  079F  00F1               	movwf	lcd@a
   579  07A0  3000               	movlw	0
   580  07A1  00F2               	movwf	lcd@a+1
   581  07A2  3000               	movlw	0
   582  07A3  00F3               	movwf	lcd@b
   583  07A4  00F4               	movwf	lcd@b+1
   584  07A5  120A  118A  263A  120A  118A  	fcall	_lcd
   585                           
   586                           ;counter.c: 36:     lcd(0x30+a,1);
   587  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   588  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   589  07AC  0826               	movf	display@a,w
   590  07AD  3E30               	addlw	48
   591  07AE  00F1               	movwf	lcd@a
   592  07AF  0827               	movf	display@a+1,w
   593  07B0  1803               	skipnc
   594  07B1  3E01               	addlw	1
   595  07B2  3E00               	addlw	0
   596  07B3  00F2               	movwf	lcd@a+1
   597  07B4  3001               	movlw	1
   598  07B5  00F3               	movwf	lcd@b
   599  07B6  3000               	movlw	0
   600  07B7  00F4               	movwf	lcd@b+1
   601  07B8  120A  118A  263A  120A  118A  	fcall	_lcd
   602                           
   603                           ;counter.c: 37:    lcd(0x81,0);
   604  07BD  3081               	movlw	129
   605  07BE  00F1               	movwf	lcd@a
   606  07BF  3000               	movlw	0
   607  07C0  00F2               	movwf	lcd@a+1
   608  07C1  3000               	movlw	0
   609  07C2  00F3               	movwf	lcd@b
   610  07C3  00F4               	movwf	lcd@b+1
   611  07C4  120A  118A  263A  120A  118A  	fcall	_lcd
   612                           
   613                           ;counter.c: 38:     lcd(0x30+b,1);
   614  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   615  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   616  07CB  0828               	movf	display@b,w
   617  07CC  3E30               	addlw	48
   618  07CD  00F1               	movwf	lcd@a
   619  07CE  0829               	movf	display@b+1,w
   620  07CF  1803               	skipnc
   621  07D0  3E01               	addlw	1
   622  07D1  3E00               	addlw	0
   623  07D2  00F2               	movwf	lcd@a+1
   624  07D3  3001               	movlw	1
   625  07D4  00F3               	movwf	lcd@b
   626  07D5  3000               	movlw	0
   627  07D6  00F4               	movwf	lcd@b+1
   628  07D7  120A  118A  263A  120A  118A  	fcall	_lcd
   629                           
   630                           ;counter.c: 39:     lcd(0x82,0);
   631  07DC  3082               	movlw	130
   632  07DD  00F1               	movwf	lcd@a
   633  07DE  3000               	movlw	0
   634  07DF  00F2               	movwf	lcd@a+1
   635  07E0  3000               	movlw	0
   636  07E1  00F3               	movwf	lcd@b
   637  07E2  00F4               	movwf	lcd@b+1
   638  07E3  120A  118A  263A  120A  118A  	fcall	_lcd
   639                           
   640                           ;counter.c: 40:     lcd(0x30+c,1);
   641  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   642  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   643  07EA  082A               	movf	display@c,w
   644  07EB  3E30               	addlw	48
   645  07EC  00F1               	movwf	lcd@a
   646  07ED  082B               	movf	display@c+1,w
   647  07EE  1803               	skipnc
   648  07EF  3E01               	addlw	1
   649  07F0  3E00               	addlw	0
   650  07F1  00F2               	movwf	lcd@a+1
   651  07F2  3001               	movlw	1
   652  07F3  00F3               	movwf	lcd@b
   653  07F4  3000               	movlw	0
   654  07F5  00F4               	movwf	lcd@b+1
   655  07F6  120A  118A  263A  120A  118A  	fcall	_lcd
   656  07FB                     l35:
   657  07FB  0008               	return
   658  07FC                     __end_of_display:
   659                           
   660                           	psect	text2
   661  063A                     __ptext2:	
   662 ;; *************** function _lcd *****************
   663 ;; Defined at:
   664 ;;		line 21 in file "counter.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  a               2    1[COMMON] int 
   667 ;;  b               2    3[COMMON] int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         4       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         4       0       0       0       0
   683 ;;Total ram usage:        4 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 1
   686 ;; This function calls:
   687 ;;		_pulse
   688 ;; This function is called by:
   689 ;;		_display
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _lcd
   696  063A                     _lcd:
   697  063A                     l759:	
   698                           ;incstack = 0
   699                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   700                           
   701                           
   702                           ;counter.c: 21: void lcd(int a,int b);counter.c: 22: {;counter.c: 23:   RC5=b;
   703  063A  1873               	btfsc	lcd@b,0
   704  063B  2E3D               	goto	u221
   705  063C  2E41               	goto	u220
   706  063D                     u221:
   707  063D  1283               	bcf	3,5	;RP0=0, select bank0
   708  063E  1303               	bcf	3,6	;RP1=0, select bank0
   709  063F  1687               	bsf	7,5	;volatile
   710  0640  2E44               	goto	u234
   711  0641                     u220:
   712  0641  1283               	bcf	3,5	;RP0=0, select bank0
   713  0642  1303               	bcf	3,6	;RP1=0, select bank0
   714  0643  1287               	bcf	7,5	;volatile
   715  0644                     u234:
   716                           
   717                           ;counter.c: 24:   RC6=0;
   718  0644  1307               	bcf	7,6	;volatile
   719  0645                     l761:
   720                           
   721                           ;counter.c: 25:   PORTD=a;
   722  0645  0871               	movf	lcd@a,w
   723  0646  0088               	movwf	8	;volatile
   724  0647                     l763:
   725                           
   726                           ;counter.c: 26:   pulse();
   727  0647  120A  118A  2629  120A  118A  	fcall	_pulse
   728  064C                     l32:
   729  064C  0008               	return
   730  064D                     __end_of_lcd:
   731                           
   732                           	psect	text3
   733  0629                     __ptext3:	
   734 ;; *************** function _pulse *****************
   735 ;; Defined at:
   736 ;;		line 14 in file "counter.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          1       0       0       0       0
   753 ;;      Totals:         1       0       0       0       0
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_lcd
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _pulse
   765  0629                     _pulse:
   766  0629                     l753:	
   767                           ;incstack = 0
   768                           ; Regs used in _pulse: [wreg]
   769                           
   770                           
   771                           ;counter.c: 16:     RC7=1;
   772  0629  1283               	bcf	3,5	;RP0=0, select bank0
   773  062A  1303               	bcf	3,6	;RP1=0, select bank0
   774  062B  1787               	bsf	7,7	;volatile
   775  062C                     l755:
   776                           
   777                           ;counter.c: 17:    _delay((unsigned long)((50)*(4000000/4000000.0)));
   778  062C  3010               	movlw	16
   779  062D  00F0               	movwf	??_pulse
   780  062E                     u437:
   781  062E  0BF0               	decfsz	??_pulse,f
   782  062F  2E2E               	goto	u437
   783  0630  0000               	nop
   784  0631                     l757:
   785                           
   786                           ;counter.c: 18:     RC7=0;
   787  0631  1283               	bcf	3,5	;RP0=0, select bank0
   788  0632  1303               	bcf	3,6	;RP1=0, select bank0
   789  0633  1387               	bcf	7,7	;volatile
   790                           
   791                           ;counter.c: 19:    _delay((unsigned long)((50)*(4000000/4000000.0)));
   792  0634  3010               	movlw	16
   793  0635  00F0               	movwf	??_pulse
   794  0636                     u447:
   795  0636  0BF0               	decfsz	??_pulse,f
   796  0637  2E36               	goto	u447
   797  0638  0000               	nop
   798  0639                     l29:
   799  0639  0008               	return
   800  063A                     __end_of_pulse:
   801                           
   802                           	psect	text4
   803  0694                     __ptext4:	
   804 ;; *************** function ___awmod *****************
   805 ;; Defined at:
   806 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  divisor         2    0[COMMON] int 
   809 ;;  dividend        2    2[COMMON] int 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  sign            1    6[COMMON] unsigned char 
   812 ;;  counter         1    5[COMMON] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2    0[COMMON] int 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         4       0       0       0       0
   823 ;;      Locals:         2       0       0       0       0
   824 ;;      Temps:          1       0       0       0       0
   825 ;;      Totals:         7       0       0       0       0
   826 ;;Total ram usage:        7 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_display
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function ___awmod
   837  0694                     ___awmod:
   838  0694                     l809:	
   839                           ;incstack = 0
   840                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   841                           
   842  0694  01F6               	clrf	___awmod@sign
   843  0695                     l811:
   844  0695  1FF3               	btfss	___awmod@dividend+1,7
   845  0696  2E98               	goto	u341
   846  0697  2E99               	goto	u340
   847  0698                     u341:
   848  0698  2EA0               	goto	l817
   849  0699                     u340:
   850  0699                     l813:
   851  0699  09F2               	comf	___awmod@dividend,f
   852  069A  09F3               	comf	___awmod@dividend+1,f
   853  069B  0AF2               	incf	___awmod@dividend,f
   854  069C  1903               	skipnz
   855  069D  0AF3               	incf	___awmod@dividend+1,f
   856  069E                     l815:
   857  069E  01F6               	clrf	___awmod@sign
   858  069F  0AF6               	incf	___awmod@sign,f
   859  06A0                     l817:
   860  06A0  1FF1               	btfss	___awmod@divisor+1,7
   861  06A1  2EA3               	goto	u351
   862  06A2  2EA4               	goto	u350
   863  06A3                     u351:
   864  06A3  2EA9               	goto	l821
   865  06A4                     u350:
   866  06A4                     l819:
   867  06A4  09F0               	comf	___awmod@divisor,f
   868  06A5  09F1               	comf	___awmod@divisor+1,f
   869  06A6  0AF0               	incf	___awmod@divisor,f
   870  06A7  1903               	skipnz
   871  06A8  0AF1               	incf	___awmod@divisor+1,f
   872  06A9                     l821:
   873  06A9  0870               	movf	___awmod@divisor,w
   874  06AA  0471               	iorwf	___awmod@divisor+1,w
   875  06AB  1903               	btfsc	3,2
   876  06AC  2EAE               	goto	u361
   877  06AD  2EAF               	goto	u360
   878  06AE                     u361:
   879  06AE  2EDE               	goto	l839
   880  06AF                     u360:
   881  06AF                     l823:
   882  06AF  01F5               	clrf	___awmod@counter
   883  06B0  0AF5               	incf	___awmod@counter,f
   884  06B1  2EBD               	goto	l829
   885  06B2                     l825:
   886  06B2  3001               	movlw	1
   887  06B3                     u375:
   888  06B3  1003               	clrc
   889  06B4  0DF0               	rlf	___awmod@divisor,f
   890  06B5  0DF1               	rlf	___awmod@divisor+1,f
   891  06B6  3EFF               	addlw	-1
   892  06B7  1D03               	skipz
   893  06B8  2EB3               	goto	u375
   894  06B9                     l827:
   895  06B9  3001               	movlw	1
   896  06BA  00F4               	movwf	??___awmod
   897  06BB  0874               	movf	??___awmod,w
   898  06BC  07F5               	addwf	___awmod@counter,f
   899  06BD                     l829:
   900  06BD  1FF1               	btfss	___awmod@divisor+1,7
   901  06BE  2EC0               	goto	u381
   902  06BF  2EC1               	goto	u380
   903  06C0                     u381:
   904  06C0  2EB2               	goto	l825
   905  06C1                     u380:
   906  06C1                     l831:
   907  06C1  0871               	movf	___awmod@divisor+1,w
   908  06C2  0273               	subwf	___awmod@dividend+1,w
   909  06C3  1D03               	skipz
   910  06C4  2EC7               	goto	u395
   911  06C5  0870               	movf	___awmod@divisor,w
   912  06C6  0272               	subwf	___awmod@dividend,w
   913  06C7                     u395:
   914  06C7  1C03               	skipc
   915  06C8  2ECA               	goto	u391
   916  06C9  2ECB               	goto	u390
   917  06CA                     u391:
   918  06CA  2ED1               	goto	l835
   919  06CB                     u390:
   920  06CB                     l833:
   921  06CB  0870               	movf	___awmod@divisor,w
   922  06CC  02F2               	subwf	___awmod@dividend,f
   923  06CD  0871               	movf	___awmod@divisor+1,w
   924  06CE  1C03               	skipc
   925  06CF  03F3               	decf	___awmod@dividend+1,f
   926  06D0  02F3               	subwf	___awmod@dividend+1,f
   927  06D1                     l835:
   928  06D1  3001               	movlw	1
   929  06D2                     u405:
   930  06D2  1003               	clrc
   931  06D3  0CF1               	rrf	___awmod@divisor+1,f
   932  06D4  0CF0               	rrf	___awmod@divisor,f
   933  06D5  3EFF               	addlw	-1
   934  06D6  1D03               	skipz
   935  06D7  2ED2               	goto	u405
   936  06D8                     l837:
   937  06D8  3001               	movlw	1
   938  06D9  02F5               	subwf	___awmod@counter,f
   939  06DA  1D03               	btfss	3,2
   940  06DB  2EDD               	goto	u411
   941  06DC  2EDE               	goto	u410
   942  06DD                     u411:
   943  06DD  2EC1               	goto	l831
   944  06DE                     u410:
   945  06DE                     l839:
   946  06DE  0876               	movf	___awmod@sign,w
   947  06DF  1903               	btfsc	3,2
   948  06E0  2EE2               	goto	u421
   949  06E1  2EE3               	goto	u420
   950  06E2                     u421:
   951  06E2  2EE8               	goto	l843
   952  06E3                     u420:
   953  06E3                     l841:
   954  06E3  09F2               	comf	___awmod@dividend,f
   955  06E4  09F3               	comf	___awmod@dividend+1,f
   956  06E5  0AF2               	incf	___awmod@dividend,f
   957  06E6  1903               	skipnz
   958  06E7  0AF3               	incf	___awmod@dividend+1,f
   959  06E8                     l843:
   960  06E8  0873               	movf	___awmod@dividend+1,w
   961  06E9  00F1               	movwf	?___awmod+1
   962  06EA  0872               	movf	___awmod@dividend,w
   963  06EB  00F0               	movwf	?___awmod
   964  06EC                     l295:
   965  06EC  0008               	return
   966  06ED                     __end_of___awmod:
   967                           
   968                           	psect	text5
   969  06ED                     __ptext5:	
   970 ;; *************** function ___awdiv *****************
   971 ;; Defined at:
   972 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  divisor         2    7[COMMON] int 
   975 ;;  dividend        2    9[COMMON] int 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  quotient        2    2[BANK0 ] int 
   978 ;;  sign            1    1[BANK0 ] unsigned char 
   979 ;;  counter         1    0[BANK0 ] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  2    7[COMMON] int 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         4       0       0       0       0
   990 ;;      Locals:         0       4       0       0       0
   991 ;;      Temps:          1       0       0       0       0
   992 ;;      Totals:         5       4       0       0       0
   993 ;;Total ram usage:        9 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_display
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function ___awdiv
  1004  06ED                     ___awdiv:
  1005  06ED                     l765:	
  1006                           ;incstack = 0
  1007                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1008                           
  1009  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1010  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1011  06EF  01A1               	clrf	___awdiv@sign
  1012  06F0                     l767:
  1013  06F0  1FF8               	btfss	___awdiv@divisor+1,7
  1014  06F1  2EF3               	goto	u241
  1015  06F2  2EF4               	goto	u240
  1016  06F3                     u241:
  1017  06F3  2EFB               	goto	l773
  1018  06F4                     u240:
  1019  06F4                     l769:
  1020  06F4  09F7               	comf	___awdiv@divisor,f
  1021  06F5  09F8               	comf	___awdiv@divisor+1,f
  1022  06F6  0AF7               	incf	___awdiv@divisor,f
  1023  06F7  1903               	skipnz
  1024  06F8  0AF8               	incf	___awdiv@divisor+1,f
  1025  06F9                     l771:
  1026  06F9  01A1               	clrf	___awdiv@sign
  1027  06FA  0AA1               	incf	___awdiv@sign,f
  1028  06FB                     l773:
  1029  06FB  1FFA               	btfss	___awdiv@dividend+1,7
  1030  06FC  2EFE               	goto	u251
  1031  06FD  2EFF               	goto	u250
  1032  06FE                     u251:
  1033  06FE  2F08               	goto	l779
  1034  06FF                     u250:
  1035  06FF                     l775:
  1036  06FF  09F9               	comf	___awdiv@dividend,f
  1037  0700  09FA               	comf	___awdiv@dividend+1,f
  1038  0701  0AF9               	incf	___awdiv@dividend,f
  1039  0702  1903               	skipnz
  1040  0703  0AFA               	incf	___awdiv@dividend+1,f
  1041  0704                     l777:
  1042  0704  3001               	movlw	1
  1043  0705  00FB               	movwf	??___awdiv
  1044  0706  087B               	movf	??___awdiv,w
  1045  0707  06A1               	xorwf	___awdiv@sign,f
  1046  0708                     l779:
  1047  0708  01A2               	clrf	___awdiv@quotient
  1048  0709  01A3               	clrf	___awdiv@quotient+1
  1049  070A                     l781:
  1050  070A  0877               	movf	___awdiv@divisor,w
  1051  070B  0478               	iorwf	___awdiv@divisor+1,w
  1052  070C  1903               	btfsc	3,2
  1053  070D  2F0F               	goto	u261
  1054  070E  2F10               	goto	u260
  1055  070F                     u261:
  1056  070F  2F47               	goto	l801
  1057  0710                     u260:
  1058  0710                     l783:
  1059  0710  01A0               	clrf	___awdiv@counter
  1060  0711  0AA0               	incf	___awdiv@counter,f
  1061  0712  2F1E               	goto	l789
  1062  0713                     l785:
  1063  0713  3001               	movlw	1
  1064  0714                     u275:
  1065  0714  1003               	clrc
  1066  0715  0DF7               	rlf	___awdiv@divisor,f
  1067  0716  0DF8               	rlf	___awdiv@divisor+1,f
  1068  0717  3EFF               	addlw	-1
  1069  0718  1D03               	skipz
  1070  0719  2F14               	goto	u275
  1071  071A                     l787:
  1072  071A  3001               	movlw	1
  1073  071B  00FB               	movwf	??___awdiv
  1074  071C  087B               	movf	??___awdiv,w
  1075  071D  07A0               	addwf	___awdiv@counter,f
  1076  071E                     l789:
  1077  071E  1FF8               	btfss	___awdiv@divisor+1,7
  1078  071F  2F21               	goto	u281
  1079  0720  2F22               	goto	u280
  1080  0721                     u281:
  1081  0721  2F13               	goto	l785
  1082  0722                     u280:
  1083  0722                     l791:
  1084  0722  3001               	movlw	1
  1085  0723                     u295:
  1086  0723  1003               	clrc
  1087  0724  0DA2               	rlf	___awdiv@quotient,f
  1088  0725  0DA3               	rlf	___awdiv@quotient+1,f
  1089  0726  3EFF               	addlw	-1
  1090  0727  1D03               	skipz
  1091  0728  2F23               	goto	u295
  1092  0729  0878               	movf	___awdiv@divisor+1,w
  1093  072A  027A               	subwf	___awdiv@dividend+1,w
  1094  072B  1D03               	skipz
  1095  072C  2F2F               	goto	u305
  1096  072D  0877               	movf	___awdiv@divisor,w
  1097  072E  0279               	subwf	___awdiv@dividend,w
  1098  072F                     u305:
  1099  072F  1C03               	skipc
  1100  0730  2F32               	goto	u301
  1101  0731  2F33               	goto	u300
  1102  0732                     u301:
  1103  0732  2F3A               	goto	l797
  1104  0733                     u300:
  1105  0733                     l793:
  1106  0733  0877               	movf	___awdiv@divisor,w
  1107  0734  02F9               	subwf	___awdiv@dividend,f
  1108  0735  0878               	movf	___awdiv@divisor+1,w
  1109  0736  1C03               	skipc
  1110  0737  03FA               	decf	___awdiv@dividend+1,f
  1111  0738  02FA               	subwf	___awdiv@dividend+1,f
  1112  0739                     l795:
  1113  0739  1422               	bsf	___awdiv@quotient,0
  1114  073A                     l797:
  1115  073A  3001               	movlw	1
  1116  073B                     u315:
  1117  073B  1003               	clrc
  1118  073C  0CF8               	rrf	___awdiv@divisor+1,f
  1119  073D  0CF7               	rrf	___awdiv@divisor,f
  1120  073E  3EFF               	addlw	-1
  1121  073F  1D03               	skipz
  1122  0740  2F3B               	goto	u315
  1123  0741                     l799:
  1124  0741  3001               	movlw	1
  1125  0742  02A0               	subwf	___awdiv@counter,f
  1126  0743  1D03               	btfss	3,2
  1127  0744  2F46               	goto	u321
  1128  0745  2F47               	goto	u320
  1129  0746                     u321:
  1130  0746  2F22               	goto	l791
  1131  0747                     u320:
  1132  0747                     l801:
  1133  0747  0821               	movf	___awdiv@sign,w
  1134  0748  1903               	btfsc	3,2
  1135  0749  2F4B               	goto	u331
  1136  074A  2F4C               	goto	u330
  1137  074B                     u331:
  1138  074B  2F51               	goto	l805
  1139  074C                     u330:
  1140  074C                     l803:
  1141  074C  09A2               	comf	___awdiv@quotient,f
  1142  074D  09A3               	comf	___awdiv@quotient+1,f
  1143  074E  0AA2               	incf	___awdiv@quotient,f
  1144  074F  1903               	skipnz
  1145  0750  0AA3               	incf	___awdiv@quotient+1,f
  1146  0751                     l805:
  1147  0751  0823               	movf	___awdiv@quotient+1,w
  1148  0752  00F8               	movwf	?___awdiv+1
  1149  0753  0822               	movf	___awdiv@quotient,w
  1150  0754  00F7               	movwf	?___awdiv
  1151  0755                     l282:
  1152  0755  0008               	return
  1153  0756                     __end_of___awdiv:
  1154  007E                     btemp	set	126	;btemp
  1155  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___awdiv
    _lcd->_pulse
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3935
                                             12 COMMON     2     2      0
                            _display
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2    2675
                                              4 BANK0      8     6      2
                            ___awdiv
                            ___awmod
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     0      4    1260
                                              1 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd
       _pulse
   _lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 03 15:53:32 2023

                     l32 064C                       l35 07FB                       l29 0639  
           ___awdiv@sign 0021                      l282 0755                      l295 06EC  
                    l801 0747                      l803 074C                      l811 0695  
                    l805 0751                      l821 06A9                      l813 0699  
                    l831 06C1                      l823 06AF                      l815 069E  
                    l841 06E3                      l833 06CB                      l825 06B2  
                    l817 06A0                      l809 0694                      l753 0629  
                    l761 0645                      l771 06F9                      l843 06E8  
                    l835 06D1                      l827 06B9                      l819 06A4  
                    l755 062C                      l763 0647                      l851 0651  
                    l781 070A                      l773 06FB                      l765 06ED  
                    l837 06D8                      l829 06BD                      l757 0631  
                    l861 0660                      l853 0654                      l791 0722  
                    l783 0710                      l775 06FF                      l767 06F0  
                    l839 06DE                      l759 063A                      l847 0756  
                    l863 0667                      l855 0657                      l793 0733  
                    l785 0713                      l777 0704                      l769 06F4  
                    l865 066A                      l857 065A                      l849 064D  
                    l795 0739                      l787 071A                      l779 0708  
                    l867 0676                      l859 065D                      l797 073A  
                    l789 071E                      l869 0682                      l799 0741  
                    _RC5 003D                      _RC6 003E                      _RC7 003F  
                    u300 0733                      u220 0641                      u301 0732  
                    u221 063D                      u320 0747                      u240 06F4  
                    u321 0746                      u305 072F                      u241 06F3  
                    u330 074C                      u250 06FF                      u410 06DE  
                    u234 0644                      u331 074B                      u315 073B  
                    u251 06FE                      u411 06DD                      u260 0710  
                    u420 06E3                      u340 0699                      u261 070F  
                    u421 06E2                      u405 06D2                      u341 0698  
                    u350 06A4                      u351 06A3                      u280 0722  
                    u360 06AF                      u281 0721                      u361 06AE  
                    u275 0714                      u380 06C1                      u381 06C0  
                    u437 062E                      u390 06CB                      u295 0723  
                    u391 06CA                      u375 06B3                      u447 0636  
                    u395 06C7                      _lcd 063A             ___awmod@sign 0076  
                   ?_lcd 0071                     _TMR0 0001                     _main 064D  
                   lcd@a 0071                     lcd@b 0073                     btemp 007E  
                   start 0000                    ??_lcd 0075                    ?_main 0070  
        __end_of___awdiv 0756          __end_of___awmod 06ED                    _ANSEL 0188  
        ___awdiv@divisor 0077          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088          __end_of_display 07FC  
                  _pulse 0629                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0694                   ??_main 007C  
       ___awdiv@dividend 0079                   ?_pulse 0070                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_display 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_pulse 063A                  ??_pulse 0070  
             __pmaintext 064D                  ___awdiv 06ED                  ___awmod 0694  
                __ptext1 0756                  __ptext2 063A                  __ptext3 0629  
                __ptext4 0694                  __ptext5 06ED                  _display 0756  
           __size_of_lcd 0013         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07FC              __end_of_lcd 064D                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0077                 ?___awmod 0070  
               ?_display 0024           __size_of_pulse 0011         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of_display 00A6            __size_of_main 0047  
               display@a 0026                 display@b 0028                 display@c 002A  
               display@k 0024               _OPTION_REG 0081  
