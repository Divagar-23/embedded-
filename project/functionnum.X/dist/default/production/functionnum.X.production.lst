

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 10 14:35:59 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0008                     _PORTD	set	8
   204  0005                     _PORTA	set	5
   205  0046                     _RD6	set	70
   206  0045                     _RD5	set	69
   207  0047                     _RD7	set	71
   208  0088                     _TRISD	set	136
   209  0085                     _TRISA	set	133
   210  0189                     _ANSELH	set	393
   211  0188                     _ANSEL	set	392
   212                           
   213                           	psect	cinit
   214  07FC                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07FC                     __initialization:
   218  07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  07FC                     __end_of__initialization:
   222  07FC  0183               	clrf	3
   223  07FD  120A  118A  2F6F   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:
   227  0070                     ?_type:
   228  0070                     ?_on:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_display:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ??_pulse:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_pulse:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 2 bytes @ 0x0
   245  0070                     	ds	2
   246  0072                     ??_type:
   247  0072                     ??_on:	
   248                           ; 1 bytes @ 0x2
   249                           
   250  0072                     ??_display:	
   251                           ; 1 bytes @ 0x2
   252                           
   253  0072                     display@i:	
   254                           ; 1 bytes @ 0x2
   255                           
   256                           
   257                           ; 2 bytes @ 0x2
   258  0072                     	ds	2
   259  0074                     display@j:
   260                           
   261                           ; 2 bytes @ 0x4
   262  0074                     	ds	2
   263  0076                     display@k:
   264                           
   265                           ; 2 bytes @ 0x6
   266  0076                     	ds	2
   267  0078                     ??_main:
   268                           
   269                           	psect	maintext
   270  076F                     __pmaintext:	
   271                           ; 1 bytes @ 0x8
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 23 in file "function num.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : B00/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   291 ;;      Params:         0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels required when called: 2
   297 ;; This function calls:
   298 ;;		_display
   299 ;;		_on
   300 ;;		_type
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  076F                     _main:
   309  076F                     l709:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   312                           
   313                           
   314                           ;function num.c: 25:     TRISA=0x00;
   315  076F  1683               	bsf	3,5	;RP0=1, select bank1
   316  0770  1303               	bcf	3,6	;RP1=0, select bank1
   317  0771  0185               	clrf	5	;volatile
   318                           
   319                           ;function num.c: 26:     PORTA=0x00;
   320  0772  1283               	bcf	3,5	;RP0=0, select bank0
   321  0773  1303               	bcf	3,6	;RP1=0, select bank0
   322  0774  0185               	clrf	5	;volatile
   323                           
   324                           ;function num.c: 27:     TRISD=0x00;
   325  0775  1683               	bsf	3,5	;RP0=1, select bank1
   326  0776  1303               	bcf	3,6	;RP1=0, select bank1
   327  0777  0188               	clrf	8	;volatile
   328                           
   329                           ;function num.c: 28:     PORTD=0x00;
   330  0778  1283               	bcf	3,5	;RP0=0, select bank0
   331  0779  1303               	bcf	3,6	;RP1=0, select bank0
   332  077A  0188               	clrf	8	;volatile
   333                           
   334                           ;function num.c: 29:     ANSEL=0x00;
   335  077B  1683               	bsf	3,5	;RP0=1, select bank3
   336  077C  1703               	bsf	3,6	;RP1=1, select bank3
   337  077D  0188               	clrf	8	;volatile
   338                           
   339                           ;function num.c: 30:     ANSELH=0x00;
   340  077E  0189               	clrf	9	;volatile
   341  077F                     l711:
   342                           
   343                           ;function num.c: 31:     type();
   344  077F  120A  118A  274A  120A  118A  	fcall	_type
   345  0784                     l713:
   346                           
   347                           ;function num.c: 32:     on();
   348  0784  120A  118A  273E  120A  118A  	fcall	_on
   349  0789                     l715:
   350                           
   351                           ;function num.c: 33:     display();
   352  0789  120A  118A  2791  120A  118A  	fcall	_display
   353  078E                     l34:
   354  078E  120A  118A  2800   	ljmp	start
   355  0791                     __end_of_main:
   356                           
   357                           	psect	text1
   358  074A                     __ptext1:	
   359 ;; *************** function _type *****************
   360 ;; Defined at:
   361 ;;		line 35 in file "function num.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; Hardware stack levels required when called: 1
   382 ;; This function calls:
   383 ;;		_pulse
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _type
   391  074A                     _type:
   392  074A                     l647:	
   393                           ;incstack = 0
   394                           ; Regs used in _type: [wreg+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;function num.c: 37:     RD5=0;
   398  074A  1283               	bcf	3,5	;RP0=0, select bank0
   399  074B  1303               	bcf	3,6	;RP1=0, select bank0
   400  074C  1288               	bcf	8,5	;volatile
   401                           
   402                           ;function num.c: 38:     RD6=0;
   403  074D  1308               	bcf	8,6	;volatile
   404  074E                     l649:
   405                           
   406                           ;function num.c: 39:     PORTA=0x38;
   407  074E  3038               	movlw	56
   408  074F  0085               	movwf	5	;volatile
   409  0750                     l651:
   410                           
   411                           ;function num.c: 40:     pulse();
   412  0750  120A  118A  2756  120A  118A  	fcall	_pulse
   413  0755                     l37:
   414  0755  0008               	return
   415  0756                     __end_of_type:
   416                           
   417                           	psect	text2
   418  073E                     __ptext2:	
   419 ;; *************** function _on *****************
   420 ;; Defined at:
   421 ;;		line 42 in file "function num.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 1
   442 ;; This function calls:
   443 ;;		_pulse
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _on
   451  073E                     _on:
   452  073E                     l653:	
   453                           ;incstack = 0
   454                           ; Regs used in _on: [wreg+status,2+status,0+pclath+cstack]
   455                           
   456                           
   457                           ;function num.c: 44:     RD5=0;
   458  073E  1283               	bcf	3,5	;RP0=0, select bank0
   459  073F  1303               	bcf	3,6	;RP1=0, select bank0
   460  0740  1288               	bcf	8,5	;volatile
   461                           
   462                           ;function num.c: 45:     RD6=0;
   463  0741  1308               	bcf	8,6	;volatile
   464  0742                     l655:
   465                           
   466                           ;function num.c: 46:     PORTA=0x0E;
   467  0742  300E               	movlw	14
   468  0743  0085               	movwf	5	;volatile
   469  0744                     l657:
   470                           
   471                           ;function num.c: 47:     pulse();
   472  0744  120A  118A  2756  120A  118A  	fcall	_pulse
   473  0749                     l40:
   474  0749  0008               	return
   475  074A                     __end_of_on:
   476                           
   477                           	psect	text3
   478  0791                     __ptext3:	
   479 ;; *************** function _display *****************
   480 ;; Defined at:
   481 ;;		line 49 in file "function num.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  k               2    6[COMMON] int 
   486 ;;  j               2    4[COMMON] int 
   487 ;;  i               2    2[COMMON] int 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         6       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         6       0       0       0       0
   501 ;;Total ram usage:        6 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 1
   504 ;; This function calls:
   505 ;;		_pulse
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _display
   513  0791                     _display:
   514  0791                     l659:	
   515                           ;incstack = 0
   516                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   517                           
   518                           
   519                           ;function num.c: 51:      int i,j,k;;function num.c: 52:      for(i=0;i<=9;i++)
   520  0791  01F2               	clrf	display@i
   521  0792  01F3               	clrf	display@i+1
   522  0793                     l665:
   523                           
   524                           ;function num.c: 53:      {;function num.c: 54:          for(j=0;j<=9;j++)
   525  0793  01F4               	clrf	display@j
   526  0794  01F5               	clrf	display@j+1
   527  0795                     l671:
   528                           
   529                           ;function num.c: 55:          {;function num.c: 56:              for(k=0;k<=9;k++)
   530  0795  01F6               	clrf	display@k
   531  0796  01F7               	clrf	display@k+1
   532  0797                     l47:
   533                           
   534                           ;function num.c: 57:              {;function num.c: 58:           RD5=0;
   535  0797  1283               	bcf	3,5	;RP0=0, select bank0
   536  0798  1303               	bcf	3,6	;RP1=0, select bank0
   537  0799  1288               	bcf	8,5	;volatile
   538                           
   539                           ;function num.c: 59:           RD6=0;
   540  079A  1308               	bcf	8,6	;volatile
   541  079B                     l677:
   542                           
   543                           ;function num.c: 60:           PORTA=0x80;
   544  079B  3080               	movlw	128
   545  079C  0085               	movwf	5	;volatile
   546  079D                     l679:
   547                           
   548                           ;function num.c: 61:           pulse();
   549  079D  120A  118A  2756  120A  118A  	fcall	_pulse
   550  07A2                     l681:
   551                           
   552                           ;function num.c: 62:           RD5=1;
   553  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   554  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   555  07A4  1688               	bsf	8,5	;volatile
   556  07A5                     l683:
   557                           
   558                           ;function num.c: 63:           RD6=0;
   559  07A5  1308               	bcf	8,6	;volatile
   560  07A6                     l685:
   561                           
   562                           ;function num.c: 64:           PORTA=0x30+i;
   563  07A6  0872               	movf	display@i,w
   564  07A7  3E30               	addlw	48
   565  07A8  0085               	movwf	5	;volatile
   566  07A9                     l687:
   567                           
   568                           ;function num.c: 65:           pulse();
   569  07A9  120A  118A  2756  120A  118A  	fcall	_pulse
   570  07AE                     l689:
   571                           
   572                           ;function num.c: 66:           PORTA=0x30+j;
   573  07AE  0874               	movf	display@j,w
   574  07AF  3E30               	addlw	48
   575  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   576  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   577  07B2  0085               	movwf	5	;volatile
   578  07B3                     l691:
   579                           
   580                           ;function num.c: 67:           pulse();
   581  07B3  120A  118A  2756  120A  118A  	fcall	_pulse
   582  07B8                     l693:
   583                           
   584                           ;function num.c: 68:           PORTA=0x30+k;
   585  07B8  0876               	movf	display@k,w
   586  07B9  3E30               	addlw	48
   587  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   588  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   589  07BC  0085               	movwf	5	;volatile
   590  07BD                     l695:
   591                           
   592                           ;function num.c: 69:           pulse();
   593  07BD  120A  118A  2756  120A  118A  	fcall	_pulse
   594  07C2                     l697:
   595                           
   596                           ;function num.c: 70:      }
   597  07C2  3001               	movlw	1
   598  07C3  07F6               	addwf	display@k,f
   599  07C4  1803               	skipnc
   600  07C5  0AF7               	incf	display@k+1,f
   601  07C6  3000               	movlw	0
   602  07C7  07F7               	addwf	display@k+1,f
   603  07C8                     l699:
   604  07C8  0877               	movf	display@k+1,w
   605  07C9  3A80               	xorlw	128
   606  07CA  00FF               	movwf	btemp+1
   607  07CB  3080               	movlw	128
   608  07CC  027F               	subwf	btemp+1,w
   609  07CD  1D03               	skipz
   610  07CE  2FD1               	goto	u15
   611  07CF  300A               	movlw	10
   612  07D0  0276               	subwf	display@k,w
   613  07D1                     u15:
   614  07D1  1C03               	skipc
   615  07D2  2FD4               	goto	u11
   616  07D3  2FD5               	goto	u10
   617  07D4                     u11:
   618  07D4  2F97               	goto	l47
   619  07D5                     u10:
   620  07D5                     l701:
   621                           
   622                           ;function num.c: 71:      }
   623  07D5  3001               	movlw	1
   624  07D6  07F4               	addwf	display@j,f
   625  07D7  1803               	skipnc
   626  07D8  0AF5               	incf	display@j+1,f
   627  07D9  3000               	movlw	0
   628  07DA  07F5               	addwf	display@j+1,f
   629  07DB                     l703:
   630  07DB  0875               	movf	display@j+1,w
   631  07DC  3A80               	xorlw	128
   632  07DD  00FF               	movwf	btemp+1
   633  07DE  3080               	movlw	128
   634  07DF  027F               	subwf	btemp+1,w
   635  07E0  1D03               	skipz
   636  07E1  2FE4               	goto	u25
   637  07E2  300A               	movlw	10
   638  07E3  0274               	subwf	display@j,w
   639  07E4                     u25:
   640  07E4  1C03               	skipc
   641  07E5  2FE7               	goto	u21
   642  07E6  2FE8               	goto	u20
   643  07E7                     u21:
   644  07E7  2F95               	goto	l671
   645  07E8                     u20:
   646  07E8                     l705:
   647                           
   648                           ;function num.c: 72:      }
   649  07E8  3001               	movlw	1
   650  07E9  07F2               	addwf	display@i,f
   651  07EA  1803               	skipnc
   652  07EB  0AF3               	incf	display@i+1,f
   653  07EC  3000               	movlw	0
   654  07ED  07F3               	addwf	display@i+1,f
   655  07EE                     l707:
   656  07EE  0873               	movf	display@i+1,w
   657  07EF  3A80               	xorlw	128
   658  07F0  00FF               	movwf	btemp+1
   659  07F1  3080               	movlw	128
   660  07F2  027F               	subwf	btemp+1,w
   661  07F3  1D03               	skipz
   662  07F4  2FF7               	goto	u35
   663  07F5  300A               	movlw	10
   664  07F6  0272               	subwf	display@i,w
   665  07F7                     u35:
   666  07F7  1C03               	skipc
   667  07F8  2FFA               	goto	u31
   668  07F9  2FFB               	goto	u30
   669  07FA                     u31:
   670  07FA  2F93               	goto	l665
   671  07FB                     u30:
   672  07FB                     l49:
   673  07FB  0008               	return
   674  07FC                     __end_of_display:
   675                           
   676                           	psect	text4
   677  0756                     __ptext4:	
   678 ;; *************** function _pulse *****************
   679 ;; Defined at:
   680 ;;		line 16 in file "function num.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2   28[None  ] int 
   687 ;; Registers used:
   688 ;;		wreg
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0
   697 ;;      Totals:         2       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_type
   704 ;;		_on
   705 ;;		_display
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _pulse
   711  0756                     _pulse:
   712  0756                     l641:	
   713                           ;incstack = 0
   714                           ; Regs used in _pulse: [wreg]
   715                           
   716                           
   717                           ;function num.c: 18:     RD7=1;
   718  0756  1283               	bcf	3,5	;RP0=0, select bank0
   719  0757  1303               	bcf	3,6	;RP1=0, select bank0
   720  0758  1788               	bsf	8,7	;volatile
   721  0759                     l643:
   722                           
   723                           ;function num.c: 19:     _delay((unsigned long)((1000)*(400000/4000.0)));
   724  0759  3082               	movlw	130
   725  075A  00F1               	movwf	??_pulse+1
   726  075B  30DD               	movlw	221
   727  075C  00F0               	movwf	??_pulse
   728  075D                     u47:
   729  075D  0BF0               	decfsz	??_pulse,f
   730  075E  2F5D               	goto	u47
   731  075F  0BF1               	decfsz	??_pulse+1,f
   732  0760  2F5D               	goto	u47
   733  0761  2F62               	nop2
   734  0762                     l645:
   735                           
   736                           ;function num.c: 20:     RD7=0;
   737  0762  1283               	bcf	3,5	;RP0=0, select bank0
   738  0763  1303               	bcf	3,6	;RP1=0, select bank0
   739  0764  1388               	bcf	8,7	;volatile
   740                           
   741                           ;function num.c: 21:     _delay((unsigned long)((1000)*(400000/4000.0)));
   742  0765  3082               	movlw	130
   743  0766  00F1               	movwf	??_pulse+1
   744  0767  30DD               	movlw	221
   745  0768  00F0               	movwf	??_pulse
   746  0769                     u57:
   747  0769  0BF0               	decfsz	??_pulse,f
   748  076A  2F69               	goto	u57
   749  076B  0BF1               	decfsz	??_pulse+1,f
   750  076C  2F69               	goto	u57
   751  076D  2F6E               	nop2
   752  076E                     l29:
   753  076E  0008               	return
   754  076F                     __end_of_pulse:
   755  007E                     btemp	set	126	;btemp
   756  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _type->_pulse
    _on->_pulse
    _display->_pulse

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                            _display
                                 _on
                               _type
 ---------------------------------------------------------------------------------
 (1) _type                                                 0     0      0       0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _on                                                   0     0      0       0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _display                                              6     6      0     135
                                              2 COMMON     6     6      0
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _pulse
   _on
     _pulse
   _type
     _pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 10 14:35:59 2023

                     l40 0749                       l34 078E                       l29 076E  
                     l37 0755                       l47 0797                       l49 07FB  
                     u10 07D5                       u11 07D4                       u20 07E8  
                     u21 07E7                       u30 07FB                       u31 07FA  
                     u15 07D1                       u25 07E4                       u35 07F7  
                     u47 075D                       u57 0769                       _on 073E  
                    ?_on 0070                      l701 07D5                      l703 07DB  
                    l711 077F                      l641 0756                      l705 07E8  
                    l713 0784                      l643 0759                      l707 07EE  
                    l651 0750                      l715 0789                      l645 0762  
                    l653 073E                      l709 076F                      l671 0795  
                    l655 0742                      l647 074A                      l681 07A2  
                    l665 0793                      l657 0744                      l649 074E  
                    l691 07B3                      l683 07A5                      l659 0791  
                    l693 07B8                      l685 07A6                      l677 079B  
                    l695 07BD                      l687 07A9                      l679 079D  
                    l697 07C2                      l689 07AE                      l699 07C8  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                   ??_on 0072                     _main 076F                     btemp 007E  
                   _type 074A                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    ?_type 0070                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
        __end_of_display 07FC                    _pulse 0756                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0791  
           __end_of_type 0756                   ??_main 0078                   ??_type 0072  
                 ?_pulse 0070                   _ANSELH 0189                ??_display 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_pulse 076F  
             __end_of_on 074A                  ??_pulse 0070               __pmaintext 076F  
                __ptext1 074A                  __ptext2 073E                  __ptext3 0791  
                __ptext4 0756                  _display 0791     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                 ?_display 0070  
         __size_of_pulse 0019              __size_of_on 000C         __size_of_display 006B  
          __size_of_main 0022            __size_of_type 000C                 display@i 0072  
               display@j 0074                 display@k 0076  
