

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 03 15:49:53 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.20
    11                           ; Generated 12/02/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F887 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  0105                     	;# 
   108  0107                     	;# 
   109  0108                     	;# 
   110  0109                     	;# 
   111  010C                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0185                     	;# 
   117  0187                     	;# 
   118  0188                     	;# 
   119  0189                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  008F                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  0105                     	;# 
   186  0107                     	;# 
   187  0108                     	;# 
   188  0109                     	;# 
   189  010C                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  0185                     	;# 
   195  0187                     	;# 
   196  0188                     	;# 
   197  0189                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0009                     _PORTE	set	9
   201  0008                     _PORTD	set	8
   202  0007                     _PORTC	set	7
   203  0006                     _PORTB	set	6
   204  0005                     _PORTA	set	5
   205  0089                     _TRISE	set	137
   206  0088                     _TRISD	set	136
   207  0087                     _TRISC	set	135
   208  0086                     _TRISB	set	134
   209  0085                     _TRISA	set	133
   210  0189                     _ANSELH	set	393
   211  0188                     _ANSEL	set	392
   212                           
   213                           	psect	cinit
   214  07FC                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07FC                     __initialization:
   218  07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  07FC                     __end_of__initialization:
   222  07FC  0183               	clrf	3
   223  07FD  120A  118A  2EEB   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:
   227  0070                     ?_delay:
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     delay@j:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           ; 2 bytes @ 0x0
   236  0070                     	ds	2
   237  0072                     ??_delay:
   238  0072                     ??_main:	
   239                           ; 1 bytes @ 0x2
   240                           
   241                           
   242                           ; 1 bytes @ 0x2
   243  0072                     	ds	2
   244  0074                     main@i:
   245                           
   246                           ; 2 bytes @ 0x4
   247  0074                     	ds	2
   248  0076                     main@j:
   249                           
   250                           ; 2 bytes @ 0x6
   251  0076                     	ds	2
   252  0078                     main@k:
   253                           
   254                           ; 2 bytes @ 0x8
   255  0078                     	ds	2
   256  007A                     main@l:
   257                           
   258                           ; 2 bytes @ 0xA
   259  007A                     	ds	2
   260  007C                     main@m:
   261                           
   262                           ; 2 bytes @ 0xC
   263  007C                     	ds	2
   264                           
   265                           	psect	maintext
   266  06EB                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 14 in file "odd even.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  m               2   12[COMMON] int 
   277 ;;  l               2   10[COMMON] int 
   278 ;;  k               2    8[COMMON] int 
   279 ;;  j               2    6[COMMON] int 
   280 ;;  i               2    4[COMMON] int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:        10       0       0       0       0
   292 ;;      Temps:          2       0       0       0       0
   293 ;;      Totals:        12       0       0       0       0
   294 ;;Total ram usage:       12 bytes
   295 ;; Hardware stack levels required when called: 1
   296 ;; This function calls:
   297 ;;		_delay
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           
   304                           ;psect for function _main
   305  06EB                     _main:
   306  06EB                     l718:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   309                           
   310                           
   311                           ;odd even.c: 16:     TRISA=0x00;
   312  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   313  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   314  06ED  0185               	clrf	5	;volatile
   315                           
   316                           ;odd even.c: 17:     PORTA=0x00;
   317  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   318  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   319  06F0  0185               	clrf	5	;volatile
   320                           
   321                           ;odd even.c: 18:     TRISB=0x00;
   322  06F1  1683               	bsf	3,5	;RP0=1, select bank1
   323  06F2  1303               	bcf	3,6	;RP1=0, select bank1
   324  06F3  0186               	clrf	6	;volatile
   325                           
   326                           ;odd even.c: 19:     PORTB=0x00;
   327  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   328  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   329  06F6  0186               	clrf	6	;volatile
   330                           
   331                           ;odd even.c: 20:     TRISC=0x00;
   332  06F7  1683               	bsf	3,5	;RP0=1, select bank1
   333  06F8  1303               	bcf	3,6	;RP1=0, select bank1
   334  06F9  0187               	clrf	7	;volatile
   335                           
   336                           ;odd even.c: 21:     PORTC=0x00;
   337  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   338  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   339  06FC  0187               	clrf	7	;volatile
   340                           
   341                           ;odd even.c: 22:     TRISD=0x00;
   342  06FD  1683               	bsf	3,5	;RP0=1, select bank1
   343  06FE  1303               	bcf	3,6	;RP1=0, select bank1
   344  06FF  0188               	clrf	8	;volatile
   345                           
   346                           ;odd even.c: 23:     PORTD=0x00;
   347  0700  1283               	bcf	3,5	;RP0=0, select bank0
   348  0701  1303               	bcf	3,6	;RP1=0, select bank0
   349  0702  0188               	clrf	8	;volatile
   350                           
   351                           ;odd even.c: 24:     TRISE=0x00;
   352  0703  1683               	bsf	3,5	;RP0=1, select bank1
   353  0704  1303               	bcf	3,6	;RP1=0, select bank1
   354  0705  0189               	clrf	9	;volatile
   355                           
   356                           ;odd even.c: 25:     PORTE=0x00;
   357  0706  1283               	bcf	3,5	;RP0=0, select bank0
   358  0707  1303               	bcf	3,6	;RP1=0, select bank0
   359  0708  0189               	clrf	9	;volatile
   360                           
   361                           ;odd even.c: 26:     ANSEL=0x00;
   362  0709  1683               	bsf	3,5	;RP0=1, select bank3
   363  070A  1703               	bsf	3,6	;RP1=1, select bank3
   364  070B  0188               	clrf	8	;volatile
   365                           
   366                           ;odd even.c: 27:     ANSELH=0x00;
   367  070C  0189               	clrf	9	;volatile
   368  070D                     l35:	
   369                           ;odd even.c: 28:     while(1)
   370                           
   371                           
   372                           ;odd even.c: 29:     {;odd even.c: 30:         int i,j,k,l,m;;odd even.c: 31:         fo
      +                          r(i=0;i<8;i=i+2)
   373  070D  01F4               	clrf	main@i
   374  070E  01F5               	clrf	main@i+1
   375  070F                     l724:
   376                           
   377                           ;odd even.c: 32:         {;odd even.c: 33:             PORTA |=1<<i;
   378  070F  3001               	movlw	1
   379  0710  00F2               	movwf	??_main
   380  0711  0A74               	incf	main@i,w
   381  0712  2F15               	goto	u134
   382  0713                     u135:
   383  0713  1003               	clrc
   384  0714  0DF2               	rlf	??_main,f
   385  0715                     u134:
   386  0715  3EFF               	addlw	-1
   387  0716  1D03               	skipz
   388  0717  2F13               	goto	u135
   389  0718  0872               	movf	??_main,w
   390  0719  00F3               	movwf	??_main+1
   391  071A  0873               	movf	??_main+1,w
   392  071B  1283               	bcf	3,5	;RP0=0, select bank0
   393  071C  1303               	bcf	3,6	;RP1=0, select bank0
   394  071D  0485               	iorwf	5,f	;volatile
   395  071E                     l726:
   396                           
   397                           ;odd even.c: 34:             delay(1000);
   398  071E  30E8               	movlw	232
   399  071F  00F0               	movwf	delay@j
   400  0720  3003               	movlw	3
   401  0721  00F1               	movwf	delay@j+1
   402  0722  120A  118A  26DC  120A  118A  	fcall	_delay
   403  0727                     l728:
   404                           
   405                           ;odd even.c: 35:         }
   406  0727  0874               	movf	main@i,w
   407  0728  3E02               	addlw	2
   408  0729  00F4               	movwf	main@i
   409  072A  0875               	movf	main@i+1,w
   410  072B  1803               	skipnc
   411  072C  3E01               	addlw	1
   412  072D  3E00               	addlw	0
   413  072E  00F5               	movwf	main@i+1
   414  072F                     l730:
   415  072F  0875               	movf	main@i+1,w
   416  0730  3A80               	xorlw	128
   417  0731  00FF               	movwf	btemp+1
   418  0732  3080               	movlw	128
   419  0733  027F               	subwf	btemp+1,w
   420  0734  1D03               	skipz
   421  0735  2F38               	goto	u145
   422  0736  3008               	movlw	8
   423  0737  0274               	subwf	main@i,w
   424  0738                     u145:
   425  0738  1C03               	skipc
   426  0739  2F3B               	goto	u141
   427  073A  2F3C               	goto	u140
   428  073B                     u141:
   429  073B  2F0F               	goto	l724
   430  073C                     u140:
   431  073C                     l732:
   432                           
   433                           ;odd even.c: 36:             for(j=0;j<8;j=j+2)
   434  073C  01F6               	clrf	main@j
   435  073D  01F7               	clrf	main@j+1
   436  073E                     l738:
   437                           
   438                           ;odd even.c: 37:             {;odd even.c: 38:             PORTB |=1<<j;
   439  073E  3001               	movlw	1
   440  073F  00F2               	movwf	??_main
   441  0740  0A76               	incf	main@j,w
   442  0741  2F44               	goto	u154
   443  0742                     u155:
   444  0742  1003               	clrc
   445  0743  0DF2               	rlf	??_main,f
   446  0744                     u154:
   447  0744  3EFF               	addlw	-1
   448  0745  1D03               	skipz
   449  0746  2F42               	goto	u155
   450  0747  0872               	movf	??_main,w
   451  0748  00F3               	movwf	??_main+1
   452  0749  0873               	movf	??_main+1,w
   453  074A  1283               	bcf	3,5	;RP0=0, select bank0
   454  074B  1303               	bcf	3,6	;RP1=0, select bank0
   455  074C  0486               	iorwf	6,f	;volatile
   456  074D                     l740:
   457                           
   458                           ;odd even.c: 39:             delay(1000);
   459  074D  30E8               	movlw	232
   460  074E  00F0               	movwf	delay@j
   461  074F  3003               	movlw	3
   462  0750  00F1               	movwf	delay@j+1
   463  0751  120A  118A  26DC  120A  118A  	fcall	_delay
   464  0756                     l742:
   465                           
   466                           ;odd even.c: 40:             }
   467  0756  0876               	movf	main@j,w
   468  0757  3E02               	addlw	2
   469  0758  00F6               	movwf	main@j
   470  0759  0877               	movf	main@j+1,w
   471  075A  1803               	skipnc
   472  075B  3E01               	addlw	1
   473  075C  3E00               	addlw	0
   474  075D  00F7               	movwf	main@j+1
   475  075E                     l744:
   476  075E  0877               	movf	main@j+1,w
   477  075F  3A80               	xorlw	128
   478  0760  00FF               	movwf	btemp+1
   479  0761  3080               	movlw	128
   480  0762  027F               	subwf	btemp+1,w
   481  0763  1D03               	skipz
   482  0764  2F67               	goto	u165
   483  0765  3008               	movlw	8
   484  0766  0276               	subwf	main@j,w
   485  0767                     u165:
   486  0767  1C03               	skipc
   487  0768  2F6A               	goto	u161
   488  0769  2F6B               	goto	u160
   489  076A                     u161:
   490  076A  2F3E               	goto	l738
   491  076B                     u160:
   492  076B                     l746:
   493                           
   494                           ;odd even.c: 41:             for(k=0;k<8;k=k+2)
   495  076B  01F8               	clrf	main@k
   496  076C  01F9               	clrf	main@k+1
   497  076D                     l752:
   498                           
   499                           ;odd even.c: 42:             {;odd even.c: 43:             PORTC |=1<<k;
   500  076D  3001               	movlw	1
   501  076E  00F2               	movwf	??_main
   502  076F  0A78               	incf	main@k,w
   503  0770  2F73               	goto	u174
   504  0771                     u175:
   505  0771  1003               	clrc
   506  0772  0DF2               	rlf	??_main,f
   507  0773                     u174:
   508  0773  3EFF               	addlw	-1
   509  0774  1D03               	skipz
   510  0775  2F71               	goto	u175
   511  0776  0872               	movf	??_main,w
   512  0777  00F3               	movwf	??_main+1
   513  0778  0873               	movf	??_main+1,w
   514  0779  1283               	bcf	3,5	;RP0=0, select bank0
   515  077A  1303               	bcf	3,6	;RP1=0, select bank0
   516  077B  0487               	iorwf	7,f	;volatile
   517  077C                     l754:
   518                           
   519                           ;odd even.c: 44:             delay(1000);
   520  077C  30E8               	movlw	232
   521  077D  00F0               	movwf	delay@j
   522  077E  3003               	movlw	3
   523  077F  00F1               	movwf	delay@j+1
   524  0780  120A  118A  26DC  120A  118A  	fcall	_delay
   525  0785                     l756:
   526                           
   527                           ;odd even.c: 45:             }
   528  0785  0878               	movf	main@k,w
   529  0786  3E02               	addlw	2
   530  0787  00F8               	movwf	main@k
   531  0788  0879               	movf	main@k+1,w
   532  0789  1803               	skipnc
   533  078A  3E01               	addlw	1
   534  078B  3E00               	addlw	0
   535  078C  00F9               	movwf	main@k+1
   536  078D                     l758:
   537  078D  0879               	movf	main@k+1,w
   538  078E  3A80               	xorlw	128
   539  078F  00FF               	movwf	btemp+1
   540  0790  3080               	movlw	128
   541  0791  027F               	subwf	btemp+1,w
   542  0792  1D03               	skipz
   543  0793  2F96               	goto	u185
   544  0794  3008               	movlw	8
   545  0795  0278               	subwf	main@k,w
   546  0796                     u185:
   547  0796  1C03               	skipc
   548  0797  2F99               	goto	u181
   549  0798  2F9A               	goto	u180
   550  0799                     u181:
   551  0799  2F6D               	goto	l752
   552  079A                     u180:
   553  079A                     l760:
   554                           
   555                           ;odd even.c: 46:             for(l=0;l<8;l=l+2)
   556  079A  01FA               	clrf	main@l
   557  079B  01FB               	clrf	main@l+1
   558  079C                     l766:
   559                           
   560                           ;odd even.c: 47:             {;odd even.c: 48:             PORTD |=1<<l;
   561  079C  3001               	movlw	1
   562  079D  00F2               	movwf	??_main
   563  079E  0A7A               	incf	main@l,w
   564  079F  2FA2               	goto	u194
   565  07A0                     u195:
   566  07A0  1003               	clrc
   567  07A1  0DF2               	rlf	??_main,f
   568  07A2                     u194:
   569  07A2  3EFF               	addlw	-1
   570  07A3  1D03               	skipz
   571  07A4  2FA0               	goto	u195
   572  07A5  0872               	movf	??_main,w
   573  07A6  00F3               	movwf	??_main+1
   574  07A7  0873               	movf	??_main+1,w
   575  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   576  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   577  07AA  0488               	iorwf	8,f	;volatile
   578  07AB                     l768:
   579                           
   580                           ;odd even.c: 49:             delay(1000);
   581  07AB  30E8               	movlw	232
   582  07AC  00F0               	movwf	delay@j
   583  07AD  3003               	movlw	3
   584  07AE  00F1               	movwf	delay@j+1
   585  07AF  120A  118A  26DC  120A  118A  	fcall	_delay
   586  07B4                     l770:
   587                           
   588                           ;odd even.c: 50:             }
   589  07B4  087A               	movf	main@l,w
   590  07B5  3E02               	addlw	2
   591  07B6  00FA               	movwf	main@l
   592  07B7  087B               	movf	main@l+1,w
   593  07B8  1803               	skipnc
   594  07B9  3E01               	addlw	1
   595  07BA  3E00               	addlw	0
   596  07BB  00FB               	movwf	main@l+1
   597  07BC                     l772:
   598  07BC  087B               	movf	main@l+1,w
   599  07BD  3A80               	xorlw	128
   600  07BE  00FF               	movwf	btemp+1
   601  07BF  3080               	movlw	128
   602  07C0  027F               	subwf	btemp+1,w
   603  07C1  1D03               	skipz
   604  07C2  2FC5               	goto	u205
   605  07C3  3008               	movlw	8
   606  07C4  027A               	subwf	main@l,w
   607  07C5                     u205:
   608  07C5  1C03               	skipc
   609  07C6  2FC8               	goto	u201
   610  07C7  2FC9               	goto	u200
   611  07C8                     u201:
   612  07C8  2F9C               	goto	l766
   613  07C9                     u200:
   614  07C9                     l774:
   615                           
   616                           ;odd even.c: 51:             for(m=0;m<=8;m=m+2)
   617  07C9  01FC               	clrf	main@m
   618  07CA  01FD               	clrf	main@m+1
   619  07CB                     l780:
   620                           
   621                           ;odd even.c: 52:             {;odd even.c: 53:             PORTE|=1<<m;
   622  07CB  3001               	movlw	1
   623  07CC  00F2               	movwf	??_main
   624  07CD  0A7C               	incf	main@m,w
   625  07CE  2FD1               	goto	u214
   626  07CF                     u215:
   627  07CF  1003               	clrc
   628  07D0  0DF2               	rlf	??_main,f
   629  07D1                     u214:
   630  07D1  3EFF               	addlw	-1
   631  07D2  1D03               	skipz
   632  07D3  2FCF               	goto	u215
   633  07D4  0872               	movf	??_main,w
   634  07D5  00F3               	movwf	??_main+1
   635  07D6  0873               	movf	??_main+1,w
   636  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   637  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   638  07D9  0489               	iorwf	9,f	;volatile
   639  07DA                     l782:
   640                           
   641                           ;odd even.c: 54:             delay(1000);
   642  07DA  30E8               	movlw	232
   643  07DB  00F0               	movwf	delay@j
   644  07DC  3003               	movlw	3
   645  07DD  00F1               	movwf	delay@j+1
   646  07DE  120A  118A  26DC  120A  118A  	fcall	_delay
   647  07E3                     l784:
   648                           
   649                           ;odd even.c: 56:         }
   650  07E3  087C               	movf	main@m,w
   651  07E4  3E02               	addlw	2
   652  07E5  00FC               	movwf	main@m
   653  07E6  087D               	movf	main@m+1,w
   654  07E7  1803               	skipnc
   655  07E8  3E01               	addlw	1
   656  07E9  3E00               	addlw	0
   657  07EA  00FD               	movwf	main@m+1
   658  07EB                     l786:
   659  07EB  087D               	movf	main@m+1,w
   660  07EC  3A80               	xorlw	128
   661  07ED  00FF               	movwf	btemp+1
   662  07EE  3080               	movlw	128
   663  07EF  027F               	subwf	btemp+1,w
   664  07F0  1D03               	skipz
   665  07F1  2FF4               	goto	u225
   666  07F2  3009               	movlw	9
   667  07F3  027C               	subwf	main@m,w
   668  07F4                     u225:
   669  07F4  1C03               	skipc
   670  07F5  2FF7               	goto	u221
   671  07F6  2FF8               	goto	u220
   672  07F7                     u221:
   673  07F7  2FCB               	goto	l780
   674  07F8                     u220:
   675  07F8  2F0D               	goto	l35
   676  07F9  120A  118A  2800   	ljmp	start
   677  07FC                     __end_of_main:
   678                           
   679                           	psect	text1
   680  06DC                     __ptext1:	
   681 ;; *************** function _delay *****************
   682 ;; Defined at:
   683 ;;		line 9 in file "odd even.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  j               2    0[COMMON] int 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         2       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         2       0       0       0       0
   701 ;;Total ram usage:        2 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _delay
   712  06DC                     _delay:
   713  06DC                     l714:	
   714                           ;incstack = 0
   715                           ; Regs used in _delay: [wreg+status,2+status,0]
   716                           
   717  06DC                     l716:	
   718                           ;odd even.c: 9: void delay(int j);odd even.c: 10: {;odd even.c: 12:     while(j--);
   719                           
   720  06DC  30FF               	movlw	255
   721  06DD  07F0               	addwf	delay@j,f
   722  06DE  1803               	skipnc
   723  06DF  0AF1               	incf	delay@j+1,f
   724  06E0  30FF               	movlw	255
   725  06E1  07F1               	addwf	delay@j+1,f
   726  06E2  0A70               	incf	delay@j,w
   727  06E3  1D03               	skipz
   728  06E4  2EE9               	goto	u121
   729  06E5  0A71               	incf	delay@j+1,w
   730  06E6  1D03               	btfss	3,2
   731  06E7  2EE9               	goto	u121
   732  06E8  2EEA               	goto	u120
   733  06E9                     u121:
   734  06E9  2EDC               	goto	l716
   735  06EA                     u120:
   736  06EA                     l30:
   737  06EA  0008               	return
   738  06EB                     __end_of_delay:
   739  007E                     btemp	set	126	;btemp
   740  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     852
                                              2 COMMON    12    12      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 03 15:49:53 2023

                     l30 06EA                       l35 070D                      l714 06DC  
                    l730 072F                      l716 06DC                      l740 074D  
                    l732 073C                      l724 070F                      l742 0756  
                    l726 071E                      l718 06EB                      l760 079A  
                    l752 076D                      l744 075E                      l728 0727  
                    l770 07B4                      l754 077C                      l746 076B  
                    l738 073E                      l780 07CB                      l772 07BC  
                    l756 0785                      l782 07DA                      l774 07C9  
                    l766 079C                      l758 078D                      l784 07E3  
                    l768 07AB                      l786 07EB                      u120 06EA  
                    u200 07C9                      u121 06E9                      u201 07C8  
                    u220 07F8                      u140 073C                      u221 07F7  
                    u205 07C5                      u141 073B                      u214 07D1  
                    u134 0715                      u215 07CF                      u135 0713  
                    u160 076B                      u225 07F4                      u161 076A  
                    u145 0738                      u154 0744                      u155 0742  
                    u180 079A                      u181 0799                      u165 0767  
                    u174 0773                      u175 0771                      u185 0796  
                    u194 07A2                      u195 07A0                     _main 06EB  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _delay 06DC  
                  main@i 0074                    main@j 0076                    main@k 0078  
                  main@l 007A                    main@m 007C                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0072                   ?_delay 0070                   _ANSELH 0189  
                 delay@j 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 06EB                  ??_delay 0072               __pmaintext 06EB  
                __ptext1 06DC     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002           __size_of_delay 000F            __size_of_main 0111  
