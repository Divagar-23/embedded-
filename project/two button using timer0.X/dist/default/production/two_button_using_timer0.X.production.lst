

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 29 11:52:03 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0001                     _TMR0	set	1
   209  0008                     _PORTD	set	8
   210  0007                     _PORTC	set	7
   211  0005                     _PORTA	set	5
   212  005A                     _T0IF	set	90
   213  003E                     _RC6	set	62
   214  003D                     _RC5	set	61
   215  003F                     _RC7	set	63
   216  0038                     _RC0	set	56
   217  0029                     _RA1	set	41
   218  0028                     _RA0	set	40
   219  0081                     _OPTION_REG	set	129
   220  0088                     _TRISD	set	136
   221  0087                     _TRISC	set	135
   222  0085                     _TRISA	set	133
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	cinit
   226  07F6                     start_initialization:	
   227                           ; #config settings
   228                           
   229  07F6                     __initialization:
   230                           
   231                           ; Clear objects allocated to COMMON
   232  07F6  01FC               	clrf	__pbssCOMMON& (0+127)
   233  07F7  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   234                           
   235                           ; Clear objects allocated to BANK0
   236  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   237  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   238  07FA  01AC               	clrf	__pbssBANK0& (0+127)
   239  07FB  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   240  07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  07FC                     __end_of__initialization:
   244  07FC  0183               	clrf	3
   245  07FD  120A  118A  2F66   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  007C                     __pbssCOMMON:
   249  007C                     _count:
   250  007C                     	ds	2
   251                           
   252                           	psect	bssBANK0
   253  002C                     __pbssBANK0:
   254  002C                     _count1:
   255  002C                     	ds	2
   256                           
   257                           	psect	cstackCOMMON
   258  0070                     __pcstackCOMMON:
   259  0070                     ?_timer:
   260  0070                     ?_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_pulse:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_pulse:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?___awmod:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     timer@m:	
   273                           ; 2 bytes @ 0x0
   274                           
   275  0070                     ___awmod@divisor:	
   276                           ; 2 bytes @ 0x0
   277                           
   278                           
   279                           ; 2 bytes @ 0x0
   280  0070                     	ds	1
   281  0071                     ?_LCD:
   282  0071                     LCD@g:	
   283                           ; 1 bytes @ 0x1
   284                           
   285                           
   286                           ; 2 bytes @ 0x1
   287  0071                     	ds	1
   288  0072                     ??_timer:
   289  0072                     ___awmod@dividend:	
   290                           ; 1 bytes @ 0x2
   291                           
   292                           
   293                           ; 2 bytes @ 0x2
   294  0072                     	ds	1
   295  0073                     LCD@h:
   296  0073                     timer@time:	
   297                           ; 2 bytes @ 0x3
   298                           
   299                           
   300                           ; 2 bytes @ 0x3
   301  0073                     	ds	1
   302  0074                     ??___awmod:
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	1
   306  0075                     ??_LCD:
   307  0075                     ___awmod@counter:	
   308                           ; 1 bytes @ 0x5
   309                           
   310  0075                     timer@cnt:	
   311                           ; 1 bytes @ 0x5
   312                           
   313                           
   314                           ; 2 bytes @ 0x5
   315  0075                     	ds	1
   316  0076                     ___awmod@sign:
   317                           
   318                           ; 1 bytes @ 0x6
   319  0076                     	ds	1
   320  0077                     ?___awdiv:
   321  0077                     ___awdiv@divisor:	
   322                           ; 2 bytes @ 0x7
   323                           
   324                           
   325                           ; 2 bytes @ 0x7
   326  0077                     	ds	2
   327  0079                     ___awdiv@dividend:
   328                           
   329                           ; 2 bytes @ 0x9
   330  0079                     	ds	2
   331  007B                     ??___awdiv:
   332                           
   333                           ; 1 bytes @ 0xB
   334  007B                     	ds	1
   335  007C                     ??_display:
   336  007C                     ??_main:	
   337                           ; 1 bytes @ 0xC
   338                           
   339                           
   340                           	psect	cstackBANK0
   341  0020                     __pcstackBANK0:	
   342                           ; 1 bytes @ 0xC
   343                           
   344  0020                     ___awdiv@counter:
   345                           
   346                           ; 1 bytes @ 0x0
   347  0020                     	ds	1
   348  0021                     ___awdiv@sign:
   349                           
   350                           ; 1 bytes @ 0x1
   351  0021                     	ds	1
   352  0022                     ___awdiv@quotient:
   353                           
   354                           ; 2 bytes @ 0x2
   355  0022                     	ds	2
   356  0024                     ?_display:
   357  0024                     display@k:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 2 bytes @ 0x4
   362  0024                     	ds	2
   363  0026                     display@a:
   364                           
   365                           ; 2 bytes @ 0x6
   366  0026                     	ds	2
   367  0028                     display@b:
   368                           
   369                           ; 2 bytes @ 0x8
   370  0028                     	ds	2
   371  002A                     display@c:
   372                           
   373                           ; 2 bytes @ 0xA
   374  002A                     	ds	2
   375                           
   376                           	psect	maintext
   377  0766                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 19 in file "two button.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels required when called: 3
   403 ;; This function calls:
   404 ;;		_LCD
   405 ;;		_display
   406 ;;		_timer
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0766                     _main:
   415  0766                     l945:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   418                           
   419                           
   420                           ;two button.c: 21:     TRISA=0X03;
   421  0766  3003               	movlw	3
   422  0767  1683               	bsf	3,5	;RP0=1, select bank1
   423  0768  1303               	bcf	3,6	;RP1=0, select bank1
   424  0769  0085               	movwf	5	;volatile
   425  076A                     l947:
   426                           
   427                           ;two button.c: 22:     PORTA=0X00;
   428  076A  1283               	bcf	3,5	;RP0=0, select bank0
   429  076B  1303               	bcf	3,6	;RP1=0, select bank0
   430  076C  0185               	clrf	5	;volatile
   431  076D                     l949:
   432                           
   433                           ;two button.c: 23:     TRISC=0X00;
   434  076D  1683               	bsf	3,5	;RP0=1, select bank1
   435  076E  1303               	bcf	3,6	;RP1=0, select bank1
   436  076F  0187               	clrf	7	;volatile
   437  0770                     l951:
   438                           
   439                           ;two button.c: 24:     PORTC=0X00;
   440  0770  1283               	bcf	3,5	;RP0=0, select bank0
   441  0771  1303               	bcf	3,6	;RP1=0, select bank0
   442  0772  0187               	clrf	7	;volatile
   443  0773                     l953:
   444                           
   445                           ;two button.c: 25:     TRISD=0X00;
   446  0773  1683               	bsf	3,5	;RP0=1, select bank1
   447  0774  1303               	bcf	3,6	;RP1=0, select bank1
   448  0775  0188               	clrf	8	;volatile
   449  0776                     l955:
   450                           
   451                           ;two button.c: 26:     PORTD=0X00;
   452  0776  1283               	bcf	3,5	;RP0=0, select bank0
   453  0777  1303               	bcf	3,6	;RP1=0, select bank0
   454  0778  0188               	clrf	8	;volatile
   455  0779                     l957:
   456                           
   457                           ;two button.c: 27:     ANSEL=0x00;
   458  0779  1683               	bsf	3,5	;RP0=1, select bank3
   459  077A  1703               	bsf	3,6	;RP1=1, select bank3
   460  077B  0188               	clrf	8	;volatile
   461                           
   462                           ;two button.c: 28:     OPTION_REG=0x85;
   463  077C  3085               	movlw	133
   464  077D  1683               	bsf	3,5	;RP0=1, select bank1
   465  077E  1303               	bcf	3,6	;RP1=0, select bank1
   466  077F  0081               	movwf	1	;volatile
   467                           
   468                           ;two button.c: 29:     TMR0=130;
   469  0780  3082               	movlw	130
   470  0781  1283               	bcf	3,5	;RP0=0, select bank0
   471  0782  1303               	bcf	3,6	;RP1=0, select bank0
   472  0783  0081               	movwf	1	;volatile
   473  0784                     l959:
   474                           
   475                           ;two button.c: 30:     LCD(0x02,0);
   476  0784  3002               	movlw	2
   477  0785  00F1               	movwf	LCD@g
   478  0786  3000               	movlw	0
   479  0787  00F2               	movwf	LCD@g+1
   480  0788  3000               	movlw	0
   481  0789  00F3               	movwf	LCD@h
   482  078A  00F4               	movwf	LCD@h+1
   483  078B  120A  118A  25C9  120A  118A  	fcall	_LCD
   484  0790                     l961:
   485                           
   486                           ;two button.c: 31:     LCD(0X28,0);
   487  0790  3028               	movlw	40
   488  0791  00F1               	movwf	LCD@g
   489  0792  3000               	movlw	0
   490  0793  00F2               	movwf	LCD@g+1
   491  0794  3000               	movlw	0
   492  0795  00F3               	movwf	LCD@h
   493  0796  00F4               	movwf	LCD@h+1
   494  0797  120A  118A  25C9  120A  118A  	fcall	_LCD
   495  079C                     l963:
   496                           
   497                           ;two button.c: 32:     LCD(0X0E,0);
   498  079C  300E               	movlw	14
   499  079D  00F1               	movwf	LCD@g
   500  079E  3000               	movlw	0
   501  079F  00F2               	movwf	LCD@g+1
   502  07A0  3000               	movlw	0
   503  07A1  00F3               	movwf	LCD@h
   504  07A2  00F4               	movwf	LCD@h+1
   505  07A3  120A  118A  25C9  120A  118A  	fcall	_LCD
   506  07A8                     l965:
   507                           
   508                           ;two button.c: 33:     LCD(0X80,0);
   509  07A8  3080               	movlw	128
   510  07A9  00F1               	movwf	LCD@g
   511  07AA  3000               	movlw	0
   512  07AB  00F2               	movwf	LCD@g+1
   513  07AC  3000               	movlw	0
   514  07AD  00F3               	movwf	LCD@h
   515  07AE  00F4               	movwf	LCD@h+1
   516  07AF  120A  118A  25C9  120A  118A  	fcall	_LCD
   517  07B4                     l967:
   518                           
   519                           ;two button.c: 35:     {;two button.c: 36:         if (RA0==1)
   520  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   521  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   522  07B6  1C05               	btfss	5,0	;volatile
   523  07B7  2FB9               	goto	u551
   524  07B8  2FBA               	goto	u550
   525  07B9                     u551:
   526  07B9  2FDD               	goto	l50
   527  07BA                     u550:
   528  07BA                     l969:
   529                           
   530                           ;two button.c: 37:         {;two button.c: 38:             LCD(0x80,0);
   531  07BA  3080               	movlw	128
   532  07BB  00F1               	movwf	LCD@g
   533  07BC  3000               	movlw	0
   534  07BD  00F2               	movwf	LCD@g+1
   535  07BE  3000               	movlw	0
   536  07BF  00F3               	movwf	LCD@h
   537  07C0  00F4               	movwf	LCD@h+1
   538  07C1  120A  118A  25C9  120A  118A  	fcall	_LCD
   539  07C6                     l971:
   540                           
   541                           ;two button.c: 39:             count++;
   542  07C6  3001               	movlw	1
   543  07C7  07FC               	addwf	_count,f
   544  07C8  1803               	skipnc
   545  07C9  0AFD               	incf	_count+1,f
   546  07CA  3000               	movlw	0
   547  07CB  07FD               	addwf	_count+1,f
   548  07CC                     l973:
   549                           
   550                           ;two button.c: 40:             display(count);
   551  07CC  087D               	movf	_count+1,w
   552  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   553  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   554  07CF  00A5               	movwf	display@k+1
   555  07D0  087C               	movf	_count,w
   556  07D1  00A4               	movwf	display@k
   557  07D2  120A  118A  26E6  120A  118A  	fcall	_display
   558  07D7                     l51:	
   559                           ;two button.c: 41:             while(RA0==1);
   560                           
   561  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   562  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   563  07D9  1805               	btfsc	5,0	;volatile
   564  07DA  2FDC               	goto	u561
   565  07DB  2FDD               	goto	u560
   566  07DC                     u561:
   567  07DC  2FD7               	goto	l51
   568  07DD                     u560:
   569  07DD                     l50:	
   570                           ;two button.c: 42:         }
   571                           
   572                           
   573                           ;two button.c: 43:         if (RA1==1)
   574  07DD  1C85               	btfss	5,1	;volatile
   575  07DE  2FE0               	goto	u571
   576  07DF  2FE1               	goto	u570
   577  07E0                     u571:
   578  07E0  2FB4               	goto	l967
   579  07E1                     u570:
   580  07E1                     l55:
   581  07E1  1885               	btfsc	5,1	;volatile
   582  07E2  2FE4               	goto	u581
   583  07E3  2FE5               	goto	u580
   584  07E4                     u581:
   585  07E4  2FE1               	goto	l55
   586  07E5                     u580:
   587  07E5                     l57:
   588                           
   589                           ;two button.c: 46:             RC0=1;
   590  07E5  1407               	bsf	7,0	;volatile
   591  07E6                     l977:
   592                           
   593                           ;two button.c: 47:             timer(5);
   594  07E6  3005               	movlw	5
   595  07E7  00F0               	movwf	timer@m
   596  07E8  3000               	movlw	0
   597  07E9  00F1               	movwf	timer@m+1
   598  07EA  120A  118A  25F2  120A  118A  	fcall	_timer
   599  07EF                     l979:
   600                           
   601                           ;two button.c: 48:             RC0=0;
   602  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   603  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   604  07F1  1007               	bcf	7,0	;volatile
   605  07F2  2FB4               	goto	l967
   606  07F3  120A  118A  2800   	ljmp	start
   607  07F6                     __end_of_main:
   608                           
   609                           	psect	text1
   610  05F2                     __ptext1:	
   611 ;; *************** function _timer *****************
   612 ;; Defined at:
   613 ;;		line 68 in file "two button.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  m               2    0[COMMON] int 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  cnt             2    5[COMMON] int 
   618 ;;  time            2    3[COMMON] int 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         2       0       0       0       0
   629 ;;      Locals:         4       0       0       0       0
   630 ;;      Temps:          1       0       0       0       0
   631 ;;      Totals:         7       0       0       0       0
   632 ;;Total ram usage:        7 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _timer
   643  05F2                     _timer:
   644  05F2                     l931:	
   645                           ;incstack = 0
   646                           ; Regs used in _timer: [wreg+status,2+status,0]
   647                           
   648                           
   649                           ;two button.c: 68: void timer(int m);two button.c: 69: {;two button.c: 70:     int time=
      +                          0,cnt=0;
   650  05F2  01F3               	clrf	timer@time
   651  05F3  01F4               	clrf	timer@time+1
   652  05F4  01F5               	clrf	timer@cnt
   653  05F5  01F6               	clrf	timer@cnt+1
   654                           
   655                           ;two button.c: 71:     while (m>time)
   656  05F6  2E15               	goto	l943
   657  05F7                     l70:
   658                           
   659                           ;two button.c: 72:     {;two button.c: 73:       if (T0IF==1)
   660  05F7  1D0B               	btfss	11,2	;volatile
   661  05F8  2DFA               	goto	u521
   662  05F9  2DFB               	goto	u520
   663  05FA                     u521:
   664  05FA  2E06               	goto	l937
   665  05FB                     u520:
   666  05FB                     l933:
   667                           
   668                           ;two button.c: 74:       {;two button.c: 75:           cnt++;
   669  05FB  3001               	movlw	1
   670  05FC  07F5               	addwf	timer@cnt,f
   671  05FD  1803               	skipnc
   672  05FE  0AF6               	incf	timer@cnt+1,f
   673  05FF  3000               	movlw	0
   674  0600  07F6               	addwf	timer@cnt+1,f
   675  0601                     l935:
   676                           
   677                           ;two button.c: 76:           T0IF=0;
   678  0601  110B               	bcf	11,2	;volatile
   679                           
   680                           ;two button.c: 77:           TMR0=130;
   681  0602  3082               	movlw	130
   682  0603  1283               	bcf	3,5	;RP0=0, select bank0
   683  0604  1303               	bcf	3,6	;RP1=0, select bank0
   684  0605  0081               	movwf	1	;volatile
   685  0606                     l937:
   686                           
   687                           ;two button.c: 79:       if (cnt==125)
   688  0606  307D               	movlw	125
   689  0607  0675               	xorwf	timer@cnt,w
   690  0608  0476               	iorwf	timer@cnt+1,w
   691  0609  1D03               	btfss	3,2
   692  060A  2E0C               	goto	u531
   693  060B  2E0D               	goto	u530
   694  060C                     u531:
   695  060C  2E15               	goto	l943
   696  060D                     u530:
   697  060D                     l939:
   698                           
   699                           ;two button.c: 80:       {;two button.c: 81:           time++;
   700  060D  3001               	movlw	1
   701  060E  07F3               	addwf	timer@time,f
   702  060F  1803               	skipnc
   703  0610  0AF4               	incf	timer@time+1,f
   704  0611  3000               	movlw	0
   705  0612  07F4               	addwf	timer@time+1,f
   706  0613                     l941:
   707                           
   708                           ;two button.c: 82:           cnt=0;
   709  0613  01F5               	clrf	timer@cnt
   710  0614  01F6               	clrf	timer@cnt+1
   711  0615                     l943:
   712                           
   713                           ;two button.c: 71:     while (m>time)
   714  0615  0874               	movf	timer@time+1,w
   715  0616  3A80               	xorlw	128
   716  0617  00F2               	movwf	??_timer
   717  0618  0871               	movf	timer@m+1,w
   718  0619  3A80               	xorlw	128
   719  061A  0272               	subwf	??_timer,w
   720  061B  1D03               	skipz
   721  061C  2E1F               	goto	u545
   722  061D  0870               	movf	timer@m,w
   723  061E  0273               	subwf	timer@time,w
   724  061F                     u545:
   725  061F  1C03               	skipc
   726  0620  2E22               	goto	u541
   727  0621  2E23               	goto	u540
   728  0622                     u541:
   729  0622  2DF7               	goto	l70
   730  0623                     u540:
   731  0623                     l74:
   732  0623  0008               	return
   733  0624                     __end_of_timer:
   734                           
   735                           	psect	text2
   736  06E6                     __ptext2:	
   737 ;; *************** function _display *****************
   738 ;; Defined at:
   739 ;;		line 86 in file "two button.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  k               2    4[BANK0 ] int 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  c               2   10[BANK0 ] int 
   744 ;;  b               2    8[BANK0 ] int 
   745 ;;  a               2    6[BANK0 ] int 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       2       0       0       0
   756 ;;      Locals:         0       6       0       0       0
   757 ;;      Temps:          0       0       0       0       0
   758 ;;      Totals:         0       8       0       0       0
   759 ;;Total ram usage:        8 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 2
   762 ;; This function calls:
   763 ;;		_LCD
   764 ;;		___awdiv
   765 ;;		___awmod
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _display
   773  06E6                     _display:
   774  06E6                     l923:	
   775                           ;incstack = 0
   776                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   777                           
   778                           
   779                           ;two button.c: 86: void display(int k);two button.c: 87: {;two button.c: 88:     int a,b
      +                          ,c;;two button.c: 89:     a=k/100;
   780  06E6  3064               	movlw	100
   781  06E7  00F7               	movwf	___awdiv@divisor
   782  06E8  3000               	movlw	0
   783  06E9  00F8               	movwf	___awdiv@divisor+1
   784  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   785  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   786  06EC  0825               	movf	display@k+1,w
   787  06ED  00FA               	movwf	___awdiv@dividend+1
   788  06EE  0824               	movf	display@k,w
   789  06EF  00F9               	movwf	___awdiv@dividend
   790  06F0  120A  118A  267D  120A  118A  	fcall	___awdiv
   791  06F5  0878               	movf	?___awdiv+1,w
   792  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   793  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   794  06F8  00A7               	movwf	display@a+1
   795  06F9  0877               	movf	?___awdiv,w
   796  06FA  00A6               	movwf	display@a
   797                           
   798                           ;two button.c: 90:     b=(k%100)/10;
   799  06FB  300A               	movlw	10
   800  06FC  00F7               	movwf	___awdiv@divisor
   801  06FD  3000               	movlw	0
   802  06FE  00F8               	movwf	___awdiv@divisor+1
   803  06FF  0825               	movf	display@k+1,w
   804  0700  00F3               	movwf	___awmod@dividend+1
   805  0701  0824               	movf	display@k,w
   806  0702  00F2               	movwf	___awmod@dividend
   807  0703  3064               	movlw	100
   808  0704  00F0               	movwf	___awmod@divisor
   809  0705  3000               	movlw	0
   810  0706  00F1               	movwf	___awmod@divisor+1
   811  0707  120A  118A  2624  120A  118A  	fcall	___awmod
   812  070C  0871               	movf	?___awmod+1,w
   813  070D  00FA               	movwf	___awdiv@dividend+1
   814  070E  0870               	movf	?___awmod,w
   815  070F  00F9               	movwf	___awdiv@dividend
   816  0710  120A  118A  267D  120A  118A  	fcall	___awdiv
   817  0715  0878               	movf	?___awdiv+1,w
   818  0716  1283               	bcf	3,5	;RP0=0, select bank0
   819  0717  1303               	bcf	3,6	;RP1=0, select bank0
   820  0718  00A9               	movwf	display@b+1
   821  0719  0877               	movf	?___awdiv,w
   822  071A  00A8               	movwf	display@b
   823                           
   824                           ;two button.c: 91:     c=k%10;
   825  071B  300A               	movlw	10
   826  071C  00F0               	movwf	___awmod@divisor
   827  071D  3000               	movlw	0
   828  071E  00F1               	movwf	___awmod@divisor+1
   829  071F  0825               	movf	display@k+1,w
   830  0720  00F3               	movwf	___awmod@dividend+1
   831  0721  0824               	movf	display@k,w
   832  0722  00F2               	movwf	___awmod@dividend
   833  0723  120A  118A  2624  120A  118A  	fcall	___awmod
   834  0728  0871               	movf	?___awmod+1,w
   835  0729  1283               	bcf	3,5	;RP0=0, select bank0
   836  072A  1303               	bcf	3,6	;RP1=0, select bank0
   837  072B  00AB               	movwf	display@c+1
   838  072C  0870               	movf	?___awmod,w
   839  072D  00AA               	movwf	display@c
   840  072E                     l925:
   841                           
   842                           ;two button.c: 92:     LCD(0x30+a,1);
   843  072E  0826               	movf	display@a,w
   844  072F  3E30               	addlw	48
   845  0730  00F1               	movwf	LCD@g
   846  0731  0827               	movf	display@a+1,w
   847  0732  1803               	skipnc
   848  0733  3E01               	addlw	1
   849  0734  3E00               	addlw	0
   850  0735  00F2               	movwf	LCD@g+1
   851  0736  3001               	movlw	1
   852  0737  00F3               	movwf	LCD@h
   853  0738  3000               	movlw	0
   854  0739  00F4               	movwf	LCD@h+1
   855  073A  120A  118A  25C9  120A  118A  	fcall	_LCD
   856  073F                     l927:
   857                           
   858                           ;two button.c: 93:     LCD(0x30+b,1);
   859  073F  1283               	bcf	3,5	;RP0=0, select bank0
   860  0740  1303               	bcf	3,6	;RP1=0, select bank0
   861  0741  0828               	movf	display@b,w
   862  0742  3E30               	addlw	48
   863  0743  00F1               	movwf	LCD@g
   864  0744  0829               	movf	display@b+1,w
   865  0745  1803               	skipnc
   866  0746  3E01               	addlw	1
   867  0747  3E00               	addlw	0
   868  0748  00F2               	movwf	LCD@g+1
   869  0749  3001               	movlw	1
   870  074A  00F3               	movwf	LCD@h
   871  074B  3000               	movlw	0
   872  074C  00F4               	movwf	LCD@h+1
   873  074D  120A  118A  25C9  120A  118A  	fcall	_LCD
   874  0752                     l929:
   875                           
   876                           ;two button.c: 94:     LCD(0x30+c,1);
   877  0752  1283               	bcf	3,5	;RP0=0, select bank0
   878  0753  1303               	bcf	3,6	;RP1=0, select bank0
   879  0754  082A               	movf	display@c,w
   880  0755  3E30               	addlw	48
   881  0756  00F1               	movwf	LCD@g
   882  0757  082B               	movf	display@c+1,w
   883  0758  1803               	skipnc
   884  0759  3E01               	addlw	1
   885  075A  3E00               	addlw	0
   886  075B  00F2               	movwf	LCD@g+1
   887  075C  3001               	movlw	1
   888  075D  00F3               	movwf	LCD@h
   889  075E  3000               	movlw	0
   890  075F  00F4               	movwf	LCD@h+1
   891  0760  120A  118A  25C9  120A  118A  	fcall	_LCD
   892  0765                     l77:
   893  0765  0008               	return
   894  0766                     __end_of_display:
   895                           
   896                           	psect	text3
   897  0624                     __ptext3:	
   898 ;; *************** function ___awmod *****************
   899 ;; Defined at:
   900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  divisor         2    0[COMMON] int 
   903 ;;  dividend        2    2[COMMON] int 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  sign            1    6[COMMON] unsigned char 
   906 ;;  counter         1    5[COMMON] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    0[COMMON] int 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         4       0       0       0       0
   917 ;;      Locals:         2       0       0       0       0
   918 ;;      Temps:          1       0       0       0       0
   919 ;;      Totals:         7       0       0       0       0
   920 ;;Total ram usage:        7 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_display
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function ___awmod
   931  0624                     ___awmod:
   932  0624                     l885:	
   933                           ;incstack = 0
   934                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   935                           
   936  0624  01F6               	clrf	___awmod@sign
   937  0625                     l887:
   938  0625  1FF3               	btfss	___awmod@dividend+1,7
   939  0626  2E28               	goto	u431
   940  0627  2E29               	goto	u430
   941  0628                     u431:
   942  0628  2E30               	goto	l893
   943  0629                     u430:
   944  0629                     l889:
   945  0629  09F2               	comf	___awmod@dividend,f
   946  062A  09F3               	comf	___awmod@dividend+1,f
   947  062B  0AF2               	incf	___awmod@dividend,f
   948  062C  1903               	skipnz
   949  062D  0AF3               	incf	___awmod@dividend+1,f
   950  062E                     l891:
   951  062E  01F6               	clrf	___awmod@sign
   952  062F  0AF6               	incf	___awmod@sign,f
   953  0630                     l893:
   954  0630  1FF1               	btfss	___awmod@divisor+1,7
   955  0631  2E33               	goto	u441
   956  0632  2E34               	goto	u440
   957  0633                     u441:
   958  0633  2E39               	goto	l897
   959  0634                     u440:
   960  0634                     l895:
   961  0634  09F0               	comf	___awmod@divisor,f
   962  0635  09F1               	comf	___awmod@divisor+1,f
   963  0636  0AF0               	incf	___awmod@divisor,f
   964  0637  1903               	skipnz
   965  0638  0AF1               	incf	___awmod@divisor+1,f
   966  0639                     l897:
   967  0639  0870               	movf	___awmod@divisor,w
   968  063A  0471               	iorwf	___awmod@divisor+1,w
   969  063B  1903               	btfsc	3,2
   970  063C  2E3E               	goto	u451
   971  063D  2E3F               	goto	u450
   972  063E                     u451:
   973  063E  2E6E               	goto	l915
   974  063F                     u450:
   975  063F                     l899:
   976  063F  01F5               	clrf	___awmod@counter
   977  0640  0AF5               	incf	___awmod@counter,f
   978  0641  2E4D               	goto	l905
   979  0642                     l901:
   980  0642  3001               	movlw	1
   981  0643                     u465:
   982  0643  1003               	clrc
   983  0644  0DF0               	rlf	___awmod@divisor,f
   984  0645  0DF1               	rlf	___awmod@divisor+1,f
   985  0646  3EFF               	addlw	-1
   986  0647  1D03               	skipz
   987  0648  2E43               	goto	u465
   988  0649                     l903:
   989  0649  3001               	movlw	1
   990  064A  00F4               	movwf	??___awmod
   991  064B  0874               	movf	??___awmod,w
   992  064C  07F5               	addwf	___awmod@counter,f
   993  064D                     l905:
   994  064D  1FF1               	btfss	___awmod@divisor+1,7
   995  064E  2E50               	goto	u471
   996  064F  2E51               	goto	u470
   997  0650                     u471:
   998  0650  2E42               	goto	l901
   999  0651                     u470:
  1000  0651                     l907:
  1001  0651  0871               	movf	___awmod@divisor+1,w
  1002  0652  0273               	subwf	___awmod@dividend+1,w
  1003  0653  1D03               	skipz
  1004  0654  2E57               	goto	u485
  1005  0655  0870               	movf	___awmod@divisor,w
  1006  0656  0272               	subwf	___awmod@dividend,w
  1007  0657                     u485:
  1008  0657  1C03               	skipc
  1009  0658  2E5A               	goto	u481
  1010  0659  2E5B               	goto	u480
  1011  065A                     u481:
  1012  065A  2E61               	goto	l911
  1013  065B                     u480:
  1014  065B                     l909:
  1015  065B  0870               	movf	___awmod@divisor,w
  1016  065C  02F2               	subwf	___awmod@dividend,f
  1017  065D  0871               	movf	___awmod@divisor+1,w
  1018  065E  1C03               	skipc
  1019  065F  03F3               	decf	___awmod@dividend+1,f
  1020  0660  02F3               	subwf	___awmod@dividend+1,f
  1021  0661                     l911:
  1022  0661  3001               	movlw	1
  1023  0662                     u495:
  1024  0662  1003               	clrc
  1025  0663  0CF1               	rrf	___awmod@divisor+1,f
  1026  0664  0CF0               	rrf	___awmod@divisor,f
  1027  0665  3EFF               	addlw	-1
  1028  0666  1D03               	skipz
  1029  0667  2E62               	goto	u495
  1030  0668                     l913:
  1031  0668  3001               	movlw	1
  1032  0669  02F5               	subwf	___awmod@counter,f
  1033  066A  1D03               	btfss	3,2
  1034  066B  2E6D               	goto	u501
  1035  066C  2E6E               	goto	u500
  1036  066D                     u501:
  1037  066D  2E51               	goto	l907
  1038  066E                     u500:
  1039  066E                     l915:
  1040  066E  0876               	movf	___awmod@sign,w
  1041  066F  1903               	btfsc	3,2
  1042  0670  2E72               	goto	u511
  1043  0671  2E73               	goto	u510
  1044  0672                     u511:
  1045  0672  2E78               	goto	l919
  1046  0673                     u510:
  1047  0673                     l917:
  1048  0673  09F2               	comf	___awmod@dividend,f
  1049  0674  09F3               	comf	___awmod@dividend+1,f
  1050  0675  0AF2               	incf	___awmod@dividend,f
  1051  0676  1903               	skipnz
  1052  0677  0AF3               	incf	___awmod@dividend+1,f
  1053  0678                     l919:
  1054  0678  0873               	movf	___awmod@dividend+1,w
  1055  0679  00F1               	movwf	?___awmod+1
  1056  067A  0872               	movf	___awmod@dividend,w
  1057  067B  00F0               	movwf	?___awmod
  1058  067C                     l329:
  1059  067C  0008               	return
  1060  067D                     __end_of___awmod:
  1061                           
  1062                           	psect	text4
  1063  067D                     __ptext4:	
  1064 ;; *************** function ___awdiv *****************
  1065 ;; Defined at:
  1066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  divisor         2    7[COMMON] int 
  1069 ;;  dividend        2    9[COMMON] int 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  quotient        2    2[BANK0 ] int 
  1072 ;;  sign            1    1[BANK0 ] unsigned char 
  1073 ;;  counter         1    0[BANK0 ] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2    7[COMMON] int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         4       0       0       0       0
  1084 ;;      Locals:         0       4       0       0       0
  1085 ;;      Temps:          1       0       0       0       0
  1086 ;;      Totals:         5       4       0       0       0
  1087 ;;Total ram usage:        9 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_display
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function ___awdiv
  1098  067D                     ___awdiv:
  1099  067D                     l841:	
  1100                           ;incstack = 0
  1101                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1102                           
  1103  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1104  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1105  067F  01A1               	clrf	___awdiv@sign
  1106  0680                     l843:
  1107  0680  1FF8               	btfss	___awdiv@divisor+1,7
  1108  0681  2E83               	goto	u331
  1109  0682  2E84               	goto	u330
  1110  0683                     u331:
  1111  0683  2E8B               	goto	l849
  1112  0684                     u330:
  1113  0684                     l845:
  1114  0684  09F7               	comf	___awdiv@divisor,f
  1115  0685  09F8               	comf	___awdiv@divisor+1,f
  1116  0686  0AF7               	incf	___awdiv@divisor,f
  1117  0687  1903               	skipnz
  1118  0688  0AF8               	incf	___awdiv@divisor+1,f
  1119  0689                     l847:
  1120  0689  01A1               	clrf	___awdiv@sign
  1121  068A  0AA1               	incf	___awdiv@sign,f
  1122  068B                     l849:
  1123  068B  1FFA               	btfss	___awdiv@dividend+1,7
  1124  068C  2E8E               	goto	u341
  1125  068D  2E8F               	goto	u340
  1126  068E                     u341:
  1127  068E  2E98               	goto	l855
  1128  068F                     u340:
  1129  068F                     l851:
  1130  068F  09F9               	comf	___awdiv@dividend,f
  1131  0690  09FA               	comf	___awdiv@dividend+1,f
  1132  0691  0AF9               	incf	___awdiv@dividend,f
  1133  0692  1903               	skipnz
  1134  0693  0AFA               	incf	___awdiv@dividend+1,f
  1135  0694                     l853:
  1136  0694  3001               	movlw	1
  1137  0695  00FB               	movwf	??___awdiv
  1138  0696  087B               	movf	??___awdiv,w
  1139  0697  06A1               	xorwf	___awdiv@sign,f
  1140  0698                     l855:
  1141  0698  01A2               	clrf	___awdiv@quotient
  1142  0699  01A3               	clrf	___awdiv@quotient+1
  1143  069A                     l857:
  1144  069A  0877               	movf	___awdiv@divisor,w
  1145  069B  0478               	iorwf	___awdiv@divisor+1,w
  1146  069C  1903               	btfsc	3,2
  1147  069D  2E9F               	goto	u351
  1148  069E  2EA0               	goto	u350
  1149  069F                     u351:
  1150  069F  2ED7               	goto	l877
  1151  06A0                     u350:
  1152  06A0                     l859:
  1153  06A0  01A0               	clrf	___awdiv@counter
  1154  06A1  0AA0               	incf	___awdiv@counter,f
  1155  06A2  2EAE               	goto	l865
  1156  06A3                     l861:
  1157  06A3  3001               	movlw	1
  1158  06A4                     u365:
  1159  06A4  1003               	clrc
  1160  06A5  0DF7               	rlf	___awdiv@divisor,f
  1161  06A6  0DF8               	rlf	___awdiv@divisor+1,f
  1162  06A7  3EFF               	addlw	-1
  1163  06A8  1D03               	skipz
  1164  06A9  2EA4               	goto	u365
  1165  06AA                     l863:
  1166  06AA  3001               	movlw	1
  1167  06AB  00FB               	movwf	??___awdiv
  1168  06AC  087B               	movf	??___awdiv,w
  1169  06AD  07A0               	addwf	___awdiv@counter,f
  1170  06AE                     l865:
  1171  06AE  1FF8               	btfss	___awdiv@divisor+1,7
  1172  06AF  2EB1               	goto	u371
  1173  06B0  2EB2               	goto	u370
  1174  06B1                     u371:
  1175  06B1  2EA3               	goto	l861
  1176  06B2                     u370:
  1177  06B2                     l867:
  1178  06B2  3001               	movlw	1
  1179  06B3                     u385:
  1180  06B3  1003               	clrc
  1181  06B4  0DA2               	rlf	___awdiv@quotient,f
  1182  06B5  0DA3               	rlf	___awdiv@quotient+1,f
  1183  06B6  3EFF               	addlw	-1
  1184  06B7  1D03               	skipz
  1185  06B8  2EB3               	goto	u385
  1186  06B9  0878               	movf	___awdiv@divisor+1,w
  1187  06BA  027A               	subwf	___awdiv@dividend+1,w
  1188  06BB  1D03               	skipz
  1189  06BC  2EBF               	goto	u395
  1190  06BD  0877               	movf	___awdiv@divisor,w
  1191  06BE  0279               	subwf	___awdiv@dividend,w
  1192  06BF                     u395:
  1193  06BF  1C03               	skipc
  1194  06C0  2EC2               	goto	u391
  1195  06C1  2EC3               	goto	u390
  1196  06C2                     u391:
  1197  06C2  2ECA               	goto	l873
  1198  06C3                     u390:
  1199  06C3                     l869:
  1200  06C3  0877               	movf	___awdiv@divisor,w
  1201  06C4  02F9               	subwf	___awdiv@dividend,f
  1202  06C5  0878               	movf	___awdiv@divisor+1,w
  1203  06C6  1C03               	skipc
  1204  06C7  03FA               	decf	___awdiv@dividend+1,f
  1205  06C8  02FA               	subwf	___awdiv@dividend+1,f
  1206  06C9                     l871:
  1207  06C9  1422               	bsf	___awdiv@quotient,0
  1208  06CA                     l873:
  1209  06CA  3001               	movlw	1
  1210  06CB                     u405:
  1211  06CB  1003               	clrc
  1212  06CC  0CF8               	rrf	___awdiv@divisor+1,f
  1213  06CD  0CF7               	rrf	___awdiv@divisor,f
  1214  06CE  3EFF               	addlw	-1
  1215  06CF  1D03               	skipz
  1216  06D0  2ECB               	goto	u405
  1217  06D1                     l875:
  1218  06D1  3001               	movlw	1
  1219  06D2  02A0               	subwf	___awdiv@counter,f
  1220  06D3  1D03               	btfss	3,2
  1221  06D4  2ED6               	goto	u411
  1222  06D5  2ED7               	goto	u410
  1223  06D6                     u411:
  1224  06D6  2EB2               	goto	l867
  1225  06D7                     u410:
  1226  06D7                     l877:
  1227  06D7  0821               	movf	___awdiv@sign,w
  1228  06D8  1903               	btfsc	3,2
  1229  06D9  2EDB               	goto	u421
  1230  06DA  2EDC               	goto	u420
  1231  06DB                     u421:
  1232  06DB  2EE1               	goto	l881
  1233  06DC                     u420:
  1234  06DC                     l879:
  1235  06DC  09A2               	comf	___awdiv@quotient,f
  1236  06DD  09A3               	comf	___awdiv@quotient+1,f
  1237  06DE  0AA2               	incf	___awdiv@quotient,f
  1238  06DF  1903               	skipnz
  1239  06E0  0AA3               	incf	___awdiv@quotient+1,f
  1240  06E1                     l881:
  1241  06E1  0823               	movf	___awdiv@quotient+1,w
  1242  06E2  00F8               	movwf	?___awdiv+1
  1243  06E3  0822               	movf	___awdiv@quotient,w
  1244  06E4  00F7               	movwf	?___awdiv
  1245  06E5                     l316:
  1246  06E5  0008               	return
  1247  06E6                     __end_of___awdiv:
  1248                           
  1249                           	psect	text5
  1250  05C9                     __ptext5:	
  1251 ;; *************** function _LCD *****************
  1252 ;; Defined at:
  1253 ;;		line 59 in file "two button.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  g               2    1[COMMON] int 
  1256 ;;  h               2    3[COMMON] int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         4       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0
  1270 ;;      Temps:          2       0       0       0       0
  1271 ;;      Totals:         6       0       0       0       0
  1272 ;;Total ram usage:        6 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 1
  1275 ;; This function calls:
  1276 ;;		_pulse
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;;		_display
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _LCD
  1285  05C9                     _LCD:
  1286  05C9                     l831:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1289                           
  1290                           
  1291                           ;two button.c: 59: void LCD(int g,int h);two button.c: 60: {;two button.c: 61:     RC5=h
      +                          ;
  1292  05C9  1873               	btfsc	LCD@h,0
  1293  05CA  2DCC               	goto	u301
  1294  05CB  2DD0               	goto	u300
  1295  05CC                     u301:
  1296  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1297  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1298  05CE  1687               	bsf	7,5	;volatile
  1299  05CF  2DD3               	goto	u314
  1300  05D0                     u300:
  1301  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1302  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1303  05D2  1287               	bcf	7,5	;volatile
  1304  05D3                     u314:
  1305                           
  1306                           ;two button.c: 62:     RC6=0;
  1307  05D3  1307               	bcf	7,6	;volatile
  1308  05D4                     l833:
  1309                           
  1310                           ;two button.c: 63:     PORTD=(g&0xf0)>>4;
  1311  05D4  0872               	movf	LCD@g+1,w
  1312  05D5  00F6               	movwf	??_LCD+1
  1313  05D6  0871               	movf	LCD@g,w
  1314  05D7  00F5               	movwf	??_LCD
  1315  05D8  3004               	movlw	4
  1316  05D9  00FF               	movwf	btemp+1
  1317  05DA                     u325:
  1318  05DA  0D76               	rlf	??_LCD+1,w
  1319  05DB  0CF6               	rrf	??_LCD+1,f
  1320  05DC  0CF5               	rrf	??_LCD,f
  1321  05DD  0BFF               	decfsz	btemp+1,f
  1322  05DE  2DDA               	goto	u325
  1323  05DF  0875               	movf	??_LCD,w
  1324  05E0  390F               	andlw	15
  1325  05E1  0088               	movwf	8	;volatile
  1326  05E2                     l835:
  1327                           
  1328                           ;two button.c: 64:     pulse();
  1329  05E2  120A  118A  25B8  120A  118A  	fcall	_pulse
  1330  05E7                     l837:
  1331                           
  1332                           ;two button.c: 65:     PORTD=(g&0x0f);
  1333  05E7  0871               	movf	LCD@g,w
  1334  05E8  390F               	andlw	15
  1335  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1336  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1337  05EB  0088               	movwf	8	;volatile
  1338  05EC                     l839:
  1339                           
  1340                           ;two button.c: 66:     pulse();
  1341  05EC  120A  118A  25B8  120A  118A  	fcall	_pulse
  1342  05F1                     l66:
  1343  05F1  0008               	return
  1344  05F2                     __end_of_LCD:
  1345                           
  1346                           	psect	text6
  1347  05B8                     __ptext6:	
  1348 ;; *************** function _pulse *****************
  1349 ;; Defined at:
  1350 ;;		line 52 in file "two button.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          1       0       0       0       0
  1367 ;;      Totals:         1       0       0       0       0
  1368 ;;Total ram usage:        1 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_LCD
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _pulse
  1379  05B8                     _pulse:
  1380  05B8                     l825:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _pulse: [wreg]
  1383                           
  1384                           
  1385                           ;two button.c: 54:     RC7=1;
  1386  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1387  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1388  05BA  1787               	bsf	7,7	;volatile
  1389  05BB                     l827:
  1390                           
  1391                           ;two button.c: 55:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1392  05BB  3010               	movlw	16
  1393  05BC  00F0               	movwf	??_pulse
  1394  05BD                     u597:
  1395  05BD  0BF0               	decfsz	??_pulse,f
  1396  05BE  2DBD               	goto	u597
  1397  05BF  0000               	nop
  1398  05C0                     l829:
  1399                           
  1400                           ;two button.c: 56:     RC7=0;
  1401  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1402  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1403  05C2  1387               	bcf	7,7	;volatile
  1404                           
  1405                           ;two button.c: 57:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1406  05C3  3010               	movlw	16
  1407  05C4  00F0               	movwf	??_pulse
  1408  05C5                     u607:
  1409  05C5  0BF0               	decfsz	??_pulse,f
  1410  05C6  2DC5               	goto	u607
  1411  05C7  0000               	nop
  1412  05C8                     l63:
  1413  05C8  0008               	return
  1414  05C9                     __end_of_pulse:
  1415  007E                     btemp	set	126	;btemp
  1416  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     12      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4126
                                _LCD
                            _display
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                7     5      2     147
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2    2697
                                              4 BANK0      8     6      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  6     2      4    1282
                                              1 COMMON     6     2      4
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _display
     _LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 29 11:52:03 2023

                     l50 07DD                       l51 07D7                       l70 05F7  
                     l63 05C8                       l55 07E1                       l57 07E5  
                     l66 05F1                       l74 0623                       l77 0765  
           ___awdiv@sign 0021                      l316 06E5                      l329 067C  
                    l901 0642                      l831 05C9                      l911 0661  
                    l903 0649                      l825 05B8                      l833 05D4  
                    l841 067D                      l913 0668                      l905 064D  
                    l827 05BB                      l835 05E2                      l851 068F  
                    l843 0680                      l907 0651                      l915 066E  
                    l923 06E6                      l931 05F2                      l829 05C0  
                    l837 05E7                      l861 06A3                      l853 0694  
                    l845 0684                      l917 0673                      l909 065B  
                    l925 072E                      l941 0613                      l933 05FB  
                    l839 05EC                      l871 06C9                      l863 06AA  
                    l855 0698                      l847 0689                      l919 0678  
                    l927 073F                      l935 0601                      l943 0615  
                    l951 0770                      l881 06E1                      l873 06CA  
                    l865 06AE                      l857 069A                      l849 068B  
                    l929 0752                      l937 0606                      l961 0790  
                    l953 0773                      l945 0766                      l875 06D1  
                    l867 06B2                      l859 06A0                      l891 062E  
                    l939 060D                      l971 07C6                      l963 079C  
                    l955 0776                      l947 076A                      l869 06C3  
                    l877 06D7                      l893 0630                      l885 0624  
                    l973 07CC                      l965 07A8                      l957 0779  
                    l949 076D                      l879 06DC                      l895 0634  
                    l887 0625                      l967 07B4                      l959 0784  
                    l897 0639                      l889 0629                      l977 07E6  
                    l969 07BA                      l899 063F                      l979 07EF  
                    _RA0 0028                      _LCD 05C9                      _RA1 0029  
                    _RC0 0038                      _RC5 003D                      _RC6 003E  
                    _RC7 003F                      u300 05D0                      u301 05CC  
                    u314 05D3                      u410 06D7                      u330 0684  
                    u411 06D6                      u331 0683                      u420 06DC  
                    u340 068F                      u500 066E                      u325 05DA  
                    u421 06DB                      u405 06CB                      u341 068E  
                    u501 066D                      u350 06A0                      u510 0673  
                    u430 0629                      u351 069F                      u511 0672  
                    u431 0628                      u440 0634                      u520 05FB  
                    u441 0633                      u521 05FA                      u370 06B2  
                    u450 063F                      u530 060D                      u371 06B1  
                    u451 063E                      u531 060C                      u540 0623  
                    u365 06A4                      u541 0622                      u390 06C3  
                    u470 0651                      u550 07BA                      u607 05C5  
                    u391 06C2                      u471 0650                      u551 07B9  
                    u480 065B                      u560 07DD                      u385 06B3  
                    u481 065A                      u465 0643                      u545 061F  
                    u561 07DC                      u570 07E1                      u395 06BF  
                    u571 07E0                      u580 07E5                      u485 0657  
                    u581 07E4                      u495 0662                      u597 05BD  
           ___awmod@sign 0076                     LCD@g 0071                     LCD@h 0073  
                   ?_LCD 0071                     _T0IF 005A                     _TMR0 0001  
                   _main 0766                     btemp 007E                     start 0000  
                  ??_LCD 0075                    ?_main 0070          __end_of___awdiv 06E6  
        __end_of___awmod 067D                    _ANSEL 0188          ___awdiv@divisor 0077  
        ___awdiv@counter 0020                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088          __end_of_display 0766                    _count 007C  
                  _timer 05F2                    _pulse 05B8                    status 0003  
                  wtemp0 007E          __initialization 07F6             __end_of_main 07F6  
                 ??_main 007C         ___awdiv@dividend 0079                   ?_timer 0070  
                 ?_pulse 0070                ??___awdiv 007B                ??___awmod 0074  
                 _count1 002C         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_display 007C                   timer@m 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_timer 0624  
          __end_of_pulse 05C9                  ??_timer 0072                  ??_pulse 0070  
             __pbssBANK0 002C               __pmaintext 0766                  ___awdiv 067D  
                ___awmod 0624                  __ptext1 05F2                  __ptext2 06E6  
                __ptext3 0624                  __ptext4 067D                  __ptext5 05C9  
                __ptext6 05B8                  _display 06E6             __size_of_LCD 0029  
       ___awmod@dividend 0072     end_of_initialization 07FC      start_initialization 07F6  
            __end_of_LCD 05F2              __pbssCOMMON 007C                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0077                 ?___awmod 0070  
               ?_display 0024           __size_of_timer 0032           __size_of_pulse 0011  
       __size_of___awdiv 0069         __size_of___awmod 0059         __size_of_display 0080  
          __size_of_main 0090                timer@time 0073                 display@a 0026  
               display@b 0028                 display@c 002A                 display@k 0024  
               timer@cnt 0075               _OPTION_REG 0081  
