

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 21 11:16:25 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0008                     _PORTD	set	8
   207  0007                     _PORTC	set	7
   208  0005                     _PORTA	set	5
   209  003E                     _RC6	set	62
   210  003D                     _RC5	set	61
   211  003F                     _RC7	set	63
   212  002A                     _RA2	set	42
   213  0029                     _RA1	set	41
   214  0028                     _RA0	set	40
   215  0088                     _TRISD	set	136
   216  0087                     _TRISC	set	135
   217  0085                     _TRISA	set	133
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	cinit
   222  07F4                     start_initialization:	
   223                           ; #config settings
   224                           
   225  07F4                     __initialization:
   226                           
   227                           ; Clear objects allocated to BANK0
   228  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   229  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   230  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   231  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   232  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   233  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   234  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   235  07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   236  07FC                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239  07FC                     __end_of__initialization:
   240  07FC  0183               	clrf	3
   241  07FD  120A  118A  2F44   	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssBANK0
   244  0020                     __pbssBANK0:
   245  0020                     _total:
   246  0020                     	ds	2
   247  0022                     _count1:
   248  0022                     	ds	2
   249  0024                     _count:
   250  0024                     	ds	2
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:
   254  0070                     ?_main:
   255  0070                     ?_pulse:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ??_pulse:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?___awdiv:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?___awmod:	
   265                           ; 2 bytes @ 0x0
   266                           
   267  0070                     ___awdiv@divisor:	
   268                           ; 2 bytes @ 0x0
   269                           
   270  0070                     ___awmod@divisor:	
   271                           ; 2 bytes @ 0x0
   272                           
   273                           
   274                           ; 2 bytes @ 0x0
   275  0070                     	ds	2
   276  0072                     ___awdiv@dividend:
   277  0072                     ___awmod@dividend:	
   278                           ; 2 bytes @ 0x2
   279                           
   280                           
   281                           ; 2 bytes @ 0x2
   282  0072                     	ds	2
   283  0074                     ??___awdiv:
   284  0074                     ??___awmod:	
   285                           ; 1 bytes @ 0x4
   286                           
   287                           
   288                           ; 1 bytes @ 0x4
   289  0074                     	ds	1
   290  0075                     ___awdiv@counter:
   291  0075                     ___awmod@counter:	
   292                           ; 1 bytes @ 0x5
   293                           
   294                           
   295                           ; 1 bytes @ 0x5
   296  0075                     	ds	1
   297  0076                     ___awdiv@sign:
   298  0076                     ___awmod@sign:	
   299                           ; 1 bytes @ 0x6
   300                           
   301                           
   302                           ; 1 bytes @ 0x6
   303  0076                     	ds	1
   304  0077                     ___awdiv@quotient:
   305                           
   306                           ; 2 bytes @ 0x7
   307  0077                     	ds	2
   308  0079                     ?_lcd:
   309  0079                     lcd@g:	
   310                           ; 1 bytes @ 0x9
   311                           
   312                           
   313                           ; 2 bytes @ 0x9
   314  0079                     	ds	2
   315  007B                     lcd@h:
   316                           
   317                           ; 2 bytes @ 0xB
   318  007B                     	ds	2
   319  007D                     ??_lcd:
   320  007D                     ??_display:	
   321                           ; 1 bytes @ 0xD
   322                           
   323  007D                     ??_main:	
   324                           ; 1 bytes @ 0xD
   325                           
   326                           
   327                           	psect	cstackBANK0
   328  0026                     __pcstackBANK0:	
   329                           ; 1 bytes @ 0xD
   330                           
   331  0026                     ?_display:
   332  0026                     display@c:	
   333                           ; 1 bytes @ 0x0
   334                           
   335                           
   336                           ; 2 bytes @ 0x0
   337  0026                     	ds	2
   338                           
   339                           	psect	maintext
   340  0744                     __pmaintext:	
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 22 in file "lcdusing button.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels required when called: 3
   366 ;; This function calls:
   367 ;;		_display
   368 ;;		_lcd
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _main
   376  0744                     _main:
   377  0744                     l893:	
   378                           ;incstack = 0
   379                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   380                           
   381                           
   382                           ;lcdusing button.c: 24:     TRISA=0xFF;
   383  0744  30FF               	movlw	255
   384  0745  1683               	bsf	3,5	;RP0=1, select bank1
   385  0746  1303               	bcf	3,6	;RP1=0, select bank1
   386  0747  0085               	movwf	5	;volatile
   387  0748                     l895:
   388                           
   389                           ;lcdusing button.c: 25:     PORTA=0x00;
   390  0748  1283               	bcf	3,5	;RP0=0, select bank0
   391  0749  1303               	bcf	3,6	;RP1=0, select bank0
   392  074A  0185               	clrf	5	;volatile
   393  074B                     l897:
   394                           
   395                           ;lcdusing button.c: 26:     TRISC=0x00;
   396  074B  1683               	bsf	3,5	;RP0=1, select bank1
   397  074C  1303               	bcf	3,6	;RP1=0, select bank1
   398  074D  0187               	clrf	7	;volatile
   399  074E                     l899:
   400                           
   401                           ;lcdusing button.c: 27:     PORTC=0x00;
   402  074E  1283               	bcf	3,5	;RP0=0, select bank0
   403  074F  1303               	bcf	3,6	;RP1=0, select bank0
   404  0750  0187               	clrf	7	;volatile
   405  0751                     l901:
   406                           
   407                           ;lcdusing button.c: 28:     TRISD=0x00;
   408  0751  1683               	bsf	3,5	;RP0=1, select bank1
   409  0752  1303               	bcf	3,6	;RP1=0, select bank1
   410  0753  0188               	clrf	8	;volatile
   411  0754                     l903:
   412                           
   413                           ;lcdusing button.c: 29:     PORTD=0x00;
   414  0754  1283               	bcf	3,5	;RP0=0, select bank0
   415  0755  1303               	bcf	3,6	;RP1=0, select bank0
   416  0756  0188               	clrf	8	;volatile
   417  0757                     l905:
   418                           
   419                           ;lcdusing button.c: 30:     ANSEL=0x00;
   420  0757  1683               	bsf	3,5	;RP0=1, select bank3
   421  0758  1703               	bsf	3,6	;RP1=1, select bank3
   422  0759  0188               	clrf	8	;volatile
   423  075A                     l907:
   424                           
   425                           ;lcdusing button.c: 31:     ANSELH=0x00;
   426  075A  0189               	clrf	9	;volatile
   427  075B                     l909:
   428                           
   429                           ;lcdusing button.c: 32:     lcd(0x38,0);
   430  075B  3038               	movlw	56
   431  075C  00F9               	movwf	lcd@g
   432  075D  3000               	movlw	0
   433  075E  00FA               	movwf	lcd@g+1
   434  075F  3000               	movlw	0
   435  0760  00FB               	movwf	lcd@h
   436  0761  00FC               	movwf	lcd@h+1
   437  0762  120A  118A  260F  120A  118A  	fcall	_lcd
   438  0767                     l911:
   439                           
   440                           ;lcdusing button.c: 33:     lcd(0x0E,0);
   441  0767  300E               	movlw	14
   442  0768  00F9               	movwf	lcd@g
   443  0769  3000               	movlw	0
   444  076A  00FA               	movwf	lcd@g+1
   445  076B  3000               	movlw	0
   446  076C  00FB               	movwf	lcd@h
   447  076D  00FC               	movwf	lcd@h+1
   448  076E  120A  118A  260F  120A  118A  	fcall	_lcd
   449  0773                     l913:
   450                           
   451                           ;lcdusing button.c: 35:     {;lcdusing button.c: 36:         if(RA0==1)
   452  0773  1283               	bcf	3,5	;RP0=0, select bank0
   453  0774  1303               	bcf	3,6	;RP1=0, select bank0
   454  0775  1C05               	btfss	5,0	;volatile
   455  0776  2F78               	goto	u491
   456  0777  2F79               	goto	u490
   457  0778                     u491:
   458  0778  2F9C               	goto	l46
   459  0779                     u490:
   460  0779                     l915:
   461                           
   462                           ;lcdusing button.c: 37:         {;lcdusing button.c: 38:             lcd(0x80,0);
   463  0779  3080               	movlw	128
   464  077A  00F9               	movwf	lcd@g
   465  077B  3000               	movlw	0
   466  077C  00FA               	movwf	lcd@g+1
   467  077D  3000               	movlw	0
   468  077E  00FB               	movwf	lcd@h
   469  077F  00FC               	movwf	lcd@h+1
   470  0780  120A  118A  260F  120A  118A  	fcall	_lcd
   471  0785                     l917:
   472                           
   473                           ;lcdusing button.c: 39:             count++;
   474  0785  3001               	movlw	1
   475  0786  1283               	bcf	3,5	;RP0=0, select bank0
   476  0787  1303               	bcf	3,6	;RP1=0, select bank0
   477  0788  07A4               	addwf	_count,f
   478  0789  1803               	skipnc
   479  078A  0AA5               	incf	_count+1,f
   480  078B  3000               	movlw	0
   481  078C  07A5               	addwf	_count+1,f
   482  078D                     l919:
   483                           
   484                           ;lcdusing button.c: 40:             display(count);
   485  078D  0825               	movf	_count+1,w
   486  078E  00A7               	movwf	display@c+1
   487  078F  0824               	movf	_count,w
   488  0790  00A6               	movwf	display@c
   489  0791  120A  118A  263B  120A  118A  	fcall	_display
   490  0796                     l47:	
   491                           ;lcdusing button.c: 41:             while(RA0==1);
   492                           
   493  0796  1283               	bcf	3,5	;RP0=0, select bank0
   494  0797  1303               	bcf	3,6	;RP1=0, select bank0
   495  0798  1805               	btfsc	5,0	;volatile
   496  0799  2F9B               	goto	u501
   497  079A  2F9C               	goto	u500
   498  079B                     u501:
   499  079B  2F96               	goto	l47
   500  079C                     u500:
   501  079C                     l46:	
   502                           ;lcdusing button.c: 42:         }
   503                           
   504                           
   505                           ;lcdusing button.c: 43:         if(RA1==1)
   506  079C  1C85               	btfss	5,1	;volatile
   507  079D  2F9F               	goto	u511
   508  079E  2FA0               	goto	u510
   509  079F                     u511:
   510  079F  2FC3               	goto	l50
   511  07A0                     u510:
   512  07A0                     l921:
   513                           
   514                           ;lcdusing button.c: 44:         {;lcdusing button.c: 45:             lcd(0x8c,0);
   515  07A0  308C               	movlw	140
   516  07A1  00F9               	movwf	lcd@g
   517  07A2  3000               	movlw	0
   518  07A3  00FA               	movwf	lcd@g+1
   519  07A4  3000               	movlw	0
   520  07A5  00FB               	movwf	lcd@h
   521  07A6  00FC               	movwf	lcd@h+1
   522  07A7  120A  118A  260F  120A  118A  	fcall	_lcd
   523  07AC                     l923:
   524                           
   525                           ;lcdusing button.c: 46:             count1++;
   526  07AC  3001               	movlw	1
   527  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   528  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   529  07AF  07A2               	addwf	_count1,f
   530  07B0  1803               	skipnc
   531  07B1  0AA3               	incf	_count1+1,f
   532  07B2  3000               	movlw	0
   533  07B3  07A3               	addwf	_count1+1,f
   534  07B4                     l925:
   535                           
   536                           ;lcdusing button.c: 47:             display(count1);
   537  07B4  0823               	movf	_count1+1,w
   538  07B5  00A7               	movwf	display@c+1
   539  07B6  0822               	movf	_count1,w
   540  07B7  00A6               	movwf	display@c
   541  07B8  120A  118A  263B  120A  118A  	fcall	_display
   542  07BD                     l51:	
   543                           ;lcdusing button.c: 48:             while(RA1==1);
   544                           
   545  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   546  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   547  07BF  1885               	btfsc	5,1	;volatile
   548  07C0  2FC2               	goto	u521
   549  07C1  2FC3               	goto	u520
   550  07C2                     u521:
   551  07C2  2FBD               	goto	l51
   552  07C3                     u520:
   553  07C3                     l50:	
   554                           ;lcdusing button.c: 49:         }
   555                           
   556                           
   557                           ;lcdusing button.c: 50:         if(RA2==1)
   558  07C3  1D05               	btfss	5,2	;volatile
   559  07C4  2FC6               	goto	u531
   560  07C5  2FC7               	goto	u530
   561  07C6                     u531:
   562  07C6  2F73               	goto	l913
   563  07C7                     u530:
   564  07C7                     l927:
   565                           
   566                           ;lcdusing button.c: 51:         {;lcdusing button.c: 52:             lcd(0xc7,0);
   567  07C7  30C7               	movlw	199
   568  07C8  00F9               	movwf	lcd@g
   569  07C9  3000               	movlw	0
   570  07CA  00FA               	movwf	lcd@g+1
   571  07CB  3000               	movlw	0
   572  07CC  00FB               	movwf	lcd@h
   573  07CD  00FC               	movwf	lcd@h+1
   574  07CE  120A  118A  260F  120A  118A  	fcall	_lcd
   575  07D3                     l929:
   576                           
   577                           ;lcdusing button.c: 53:             total=count+count1;
   578  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   579  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   580  07D5  0822               	movf	_count1,w
   581  07D6  0724               	addwf	_count,w
   582  07D7  00A0               	movwf	_total
   583  07D8  0823               	movf	_count1+1,w
   584  07D9  1803               	skipnc
   585  07DA  0A23               	incf	_count1+1,w
   586  07DB  0725               	addwf	_count+1,w
   587  07DC  00A1               	movwf	_total+1
   588  07DD                     l931:
   589                           
   590                           ;lcdusing button.c: 54:             display(total-1);
   591  07DD  0820               	movf	_total,w
   592  07DE  3EFF               	addlw	255
   593  07DF  00A6               	movwf	display@c
   594  07E0  0821               	movf	_total+1,w
   595  07E1  1803               	skipnc
   596  07E2  3E01               	addlw	1
   597  07E3  3EFF               	addlw	255
   598  07E4  00A7               	movwf	display@c+1
   599  07E5  120A  118A  263B  120A  118A  	fcall	_display
   600  07EA                     l55:	
   601                           ;lcdusing button.c: 55:             while(RA2==1);
   602                           
   603  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   604  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   605  07EC  1905               	btfsc	5,2	;volatile
   606  07ED  2FEF               	goto	u541
   607  07EE  2FF0               	goto	u540
   608  07EF                     u541:
   609  07EF  2FEA               	goto	l55
   610  07F0                     u540:
   611  07F0  2F73               	goto	l913
   612  07F1  120A  118A  2800   	ljmp	start
   613  07F4                     __end_of_main:
   614                           
   615                           	psect	text1
   616  063B                     __ptext1:	
   617 ;; *************** function _display *****************
   618 ;; Defined at:
   619 ;;		line 73 in file "lcdusing button.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  c               2    0[BANK0 ] int 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       2       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         0       2       0       0       0
   637 ;;Total ram usage:        2 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; Hardware stack levels required when called: 2
   640 ;; This function calls:
   641 ;;		___awdiv
   642 ;;		___awmod
   643 ;;		_lcd
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _display
   651  063B                     _display:
   652  063B                     l891:	
   653                           ;incstack = 0
   654                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   655                           
   656                           
   657                           ;lcdusing button.c: 73: void display(int c);lcdusing button.c: 74: {;lcdusing button.c: 
      +                          75:     lcd((0x30+(c-1)/10),1);
   658  063B  300A               	movlw	10
   659  063C  00F0               	movwf	___awdiv@divisor
   660  063D  3000               	movlw	0
   661  063E  00F1               	movwf	___awdiv@divisor+1
   662  063F  1283               	bcf	3,5	;RP0=0, select bank0
   663  0640  1303               	bcf	3,6	;RP1=0, select bank0
   664  0641  0826               	movf	display@c,w
   665  0642  3EFF               	addlw	255
   666  0643  00F2               	movwf	___awdiv@dividend
   667  0644  0827               	movf	display@c+1,w
   668  0645  1803               	skipnc
   669  0646  3E01               	addlw	1
   670  0647  3EFF               	addlw	255
   671  0648  00F3               	movwf	___awdiv@dividend+1
   672  0649  120A  118A  26DD  120A  118A  	fcall	___awdiv
   673  064E  0870               	movf	?___awdiv,w
   674  064F  3E30               	addlw	48
   675  0650  00F9               	movwf	lcd@g
   676  0651  0871               	movf	?___awdiv+1,w
   677  0652  1803               	skipnc
   678  0653  3E01               	addlw	1
   679  0654  3E00               	addlw	0
   680  0655  00FA               	movwf	lcd@g+1
   681  0656  3001               	movlw	1
   682  0657  00FB               	movwf	lcd@h
   683  0658  3000               	movlw	0
   684  0659  00FC               	movwf	lcd@h+1
   685  065A  120A  118A  260F  120A  118A  	fcall	_lcd
   686                           
   687                           ;lcdusing button.c: 76:     lcd((0x30+(c-1)%10),1);
   688  065F  300A               	movlw	10
   689  0660  00F0               	movwf	___awmod@divisor
   690  0661  3000               	movlw	0
   691  0662  00F1               	movwf	___awmod@divisor+1
   692  0663  1283               	bcf	3,5	;RP0=0, select bank0
   693  0664  1303               	bcf	3,6	;RP1=0, select bank0
   694  0665  0826               	movf	display@c,w
   695  0666  3EFF               	addlw	255
   696  0667  00F2               	movwf	___awmod@dividend
   697  0668  0827               	movf	display@c+1,w
   698  0669  1803               	skipnc
   699  066A  3E01               	addlw	1
   700  066B  3EFF               	addlw	255
   701  066C  00F3               	movwf	___awmod@dividend+1
   702  066D  120A  118A  2684  120A  118A  	fcall	___awmod
   703  0672  0870               	movf	?___awmod,w
   704  0673  3E30               	addlw	48
   705  0674  00F9               	movwf	lcd@g
   706  0675  0871               	movf	?___awmod+1,w
   707  0676  1803               	skipnc
   708  0677  3E01               	addlw	1
   709  0678  3E00               	addlw	0
   710  0679  00FA               	movwf	lcd@g+1
   711  067A  3001               	movlw	1
   712  067B  00FB               	movwf	lcd@h
   713  067C  3000               	movlw	0
   714  067D  00FC               	movwf	lcd@h+1
   715  067E  120A  118A  260F  120A  118A  	fcall	_lcd
   716  0683                     l69:
   717  0683  0008               	return
   718  0684                     __end_of_display:
   719                           
   720                           	psect	text2
   721  060F                     __ptext2:	
   722 ;; *************** function _lcd *****************
   723 ;; Defined at:
   724 ;;		line 66 in file "lcdusing button.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  g               2    9[COMMON] int 
   727 ;;  h               2   11[COMMON] int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         4       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         4       0       0       0       0
   743 ;;Total ram usage:        4 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 1
   746 ;; This function calls:
   747 ;;		_pulse
   748 ;; This function is called by:
   749 ;;		_main
   750 ;;		_display
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           
   755                           ;psect for function _lcd
   756  060F                     _lcd:
   757  060F                     l803:	
   758                           ;incstack = 0
   759                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   760                           
   761                           
   762                           ;lcdusing button.c: 66: void lcd(int g,int h);lcdusing button.c: 67: {;lcdusing button.c
      +                          : 68:     RC5=h;
   763  060F  187B               	btfsc	lcd@h,0
   764  0610  2E12               	goto	u281
   765  0611  2E16               	goto	u280
   766  0612                     u281:
   767  0612  1283               	bcf	3,5	;RP0=0, select bank0
   768  0613  1303               	bcf	3,6	;RP1=0, select bank0
   769  0614  1687               	bsf	7,5	;volatile
   770  0615  2E19               	goto	u294
   771  0616                     u280:
   772  0616  1283               	bcf	3,5	;RP0=0, select bank0
   773  0617  1303               	bcf	3,6	;RP1=0, select bank0
   774  0618  1287               	bcf	7,5	;volatile
   775  0619                     u294:
   776                           
   777                           ;lcdusing button.c: 69:     RC6=0;
   778  0619  1307               	bcf	7,6	;volatile
   779  061A                     l805:
   780                           
   781                           ;lcdusing button.c: 70:     PORTD=g;
   782  061A  0879               	movf	lcd@g,w
   783  061B  0088               	movwf	8	;volatile
   784  061C                     l807:
   785                           
   786                           ;lcdusing button.c: 71:     pulse();
   787  061C  120A  118A  2622  120A  118A  	fcall	_pulse
   788  0621                     l66:
   789  0621  0008               	return
   790  0622                     __end_of_lcd:
   791                           
   792                           	psect	text3
   793  0622                     __ptext3:	
   794 ;; *************** function _pulse *****************
   795 ;; Defined at:
   796 ;;		line 59 in file "lcdusing button.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          2       0       0       0       0
   813 ;;      Totals:         2       0       0       0       0
   814 ;;Total ram usage:        2 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_lcd
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _pulse
   825  0622                     _pulse:
   826  0622                     l797:	
   827                           ;incstack = 0
   828                           ; Regs used in _pulse: [wreg]
   829                           
   830                           
   831                           ;lcdusing button.c: 61:     RC7=1;
   832  0622  1283               	bcf	3,5	;RP0=0, select bank0
   833  0623  1303               	bcf	3,6	;RP1=0, select bank0
   834  0624  1787               	bsf	7,7	;volatile
   835  0625                     l799:
   836                           
   837                           ;lcdusing button.c: 62:     _delay((unsigned long)((100)*(4000000/4000.0)));
   838  0625  3082               	movlw	130
   839  0626  00F1               	movwf	??_pulse+1
   840  0627  30DD               	movlw	221
   841  0628  00F0               	movwf	??_pulse
   842  0629                     u557:
   843  0629  0BF0               	decfsz	??_pulse,f
   844  062A  2E29               	goto	u557
   845  062B  0BF1               	decfsz	??_pulse+1,f
   846  062C  2E29               	goto	u557
   847  062D  2E2E               	nop2
   848  062E                     l801:
   849                           
   850                           ;lcdusing button.c: 63:     RC7=0;
   851  062E  1283               	bcf	3,5	;RP0=0, select bank0
   852  062F  1303               	bcf	3,6	;RP1=0, select bank0
   853  0630  1387               	bcf	7,7	;volatile
   854                           
   855                           ;lcdusing button.c: 64:     _delay((unsigned long)((100)*(4000000/4000.0)));
   856  0631  3082               	movlw	130
   857  0632  00F1               	movwf	??_pulse+1
   858  0633  30DD               	movlw	221
   859  0634  00F0               	movwf	??_pulse
   860  0635                     u567:
   861  0635  0BF0               	decfsz	??_pulse,f
   862  0636  2E35               	goto	u567
   863  0637  0BF1               	decfsz	??_pulse+1,f
   864  0638  2E35               	goto	u567
   865  0639  2E3A               	nop2
   866  063A                     l63:
   867  063A  0008               	return
   868  063B                     __end_of_pulse:
   869                           
   870                           	psect	text4
   871  0684                     __ptext4:	
   872 ;; *************** function ___awmod *****************
   873 ;; Defined at:
   874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  divisor         2    0[COMMON] int 
   877 ;;  dividend        2    2[COMMON] int 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  sign            1    6[COMMON] unsigned char 
   880 ;;  counter         1    5[COMMON] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  2    0[COMMON] int 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         4       0       0       0       0
   891 ;;      Locals:         2       0       0       0       0
   892 ;;      Temps:          1       0       0       0       0
   893 ;;      Totals:         7       0       0       0       0
   894 ;;Total ram usage:        7 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_display
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function ___awmod
   905  0684                     ___awmod:
   906  0684                     l853:	
   907                           ;incstack = 0
   908                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   909                           
   910  0684  01F6               	clrf	___awmod@sign
   911  0685                     l855:
   912  0685  1FF3               	btfss	___awmod@dividend+1,7
   913  0686  2E88               	goto	u401
   914  0687  2E89               	goto	u400
   915  0688                     u401:
   916  0688  2E90               	goto	l861
   917  0689                     u400:
   918  0689                     l857:
   919  0689  09F2               	comf	___awmod@dividend,f
   920  068A  09F3               	comf	___awmod@dividend+1,f
   921  068B  0AF2               	incf	___awmod@dividend,f
   922  068C  1903               	skipnz
   923  068D  0AF3               	incf	___awmod@dividend+1,f
   924  068E                     l859:
   925  068E  01F6               	clrf	___awmod@sign
   926  068F  0AF6               	incf	___awmod@sign,f
   927  0690                     l861:
   928  0690  1FF1               	btfss	___awmod@divisor+1,7
   929  0691  2E93               	goto	u411
   930  0692  2E94               	goto	u410
   931  0693                     u411:
   932  0693  2E99               	goto	l865
   933  0694                     u410:
   934  0694                     l863:
   935  0694  09F0               	comf	___awmod@divisor,f
   936  0695  09F1               	comf	___awmod@divisor+1,f
   937  0696  0AF0               	incf	___awmod@divisor,f
   938  0697  1903               	skipnz
   939  0698  0AF1               	incf	___awmod@divisor+1,f
   940  0699                     l865:
   941  0699  0870               	movf	___awmod@divisor,w
   942  069A  0471               	iorwf	___awmod@divisor+1,w
   943  069B  1903               	btfsc	3,2
   944  069C  2E9E               	goto	u421
   945  069D  2E9F               	goto	u420
   946  069E                     u421:
   947  069E  2ECE               	goto	l883
   948  069F                     u420:
   949  069F                     l867:
   950  069F  01F5               	clrf	___awmod@counter
   951  06A0  0AF5               	incf	___awmod@counter,f
   952  06A1  2EAD               	goto	l873
   953  06A2                     l869:
   954  06A2  3001               	movlw	1
   955  06A3                     u435:
   956  06A3  1003               	clrc
   957  06A4  0DF0               	rlf	___awmod@divisor,f
   958  06A5  0DF1               	rlf	___awmod@divisor+1,f
   959  06A6  3EFF               	addlw	-1
   960  06A7  1D03               	skipz
   961  06A8  2EA3               	goto	u435
   962  06A9                     l871:
   963  06A9  3001               	movlw	1
   964  06AA  00F4               	movwf	??___awmod
   965  06AB  0874               	movf	??___awmod,w
   966  06AC  07F5               	addwf	___awmod@counter,f
   967  06AD                     l873:
   968  06AD  1FF1               	btfss	___awmod@divisor+1,7
   969  06AE  2EB0               	goto	u441
   970  06AF  2EB1               	goto	u440
   971  06B0                     u441:
   972  06B0  2EA2               	goto	l869
   973  06B1                     u440:
   974  06B1                     l875:
   975  06B1  0871               	movf	___awmod@divisor+1,w
   976  06B2  0273               	subwf	___awmod@dividend+1,w
   977  06B3  1D03               	skipz
   978  06B4  2EB7               	goto	u455
   979  06B5  0870               	movf	___awmod@divisor,w
   980  06B6  0272               	subwf	___awmod@dividend,w
   981  06B7                     u455:
   982  06B7  1C03               	skipc
   983  06B8  2EBA               	goto	u451
   984  06B9  2EBB               	goto	u450
   985  06BA                     u451:
   986  06BA  2EC1               	goto	l879
   987  06BB                     u450:
   988  06BB                     l877:
   989  06BB  0870               	movf	___awmod@divisor,w
   990  06BC  02F2               	subwf	___awmod@dividend,f
   991  06BD  0871               	movf	___awmod@divisor+1,w
   992  06BE  1C03               	skipc
   993  06BF  03F3               	decf	___awmod@dividend+1,f
   994  06C0  02F3               	subwf	___awmod@dividend+1,f
   995  06C1                     l879:
   996  06C1  3001               	movlw	1
   997  06C2                     u465:
   998  06C2  1003               	clrc
   999  06C3  0CF1               	rrf	___awmod@divisor+1,f
  1000  06C4  0CF0               	rrf	___awmod@divisor,f
  1001  06C5  3EFF               	addlw	-1
  1002  06C6  1D03               	skipz
  1003  06C7  2EC2               	goto	u465
  1004  06C8                     l881:
  1005  06C8  3001               	movlw	1
  1006  06C9  02F5               	subwf	___awmod@counter,f
  1007  06CA  1D03               	btfss	3,2
  1008  06CB  2ECD               	goto	u471
  1009  06CC  2ECE               	goto	u470
  1010  06CD                     u471:
  1011  06CD  2EB1               	goto	l875
  1012  06CE                     u470:
  1013  06CE                     l883:
  1014  06CE  0876               	movf	___awmod@sign,w
  1015  06CF  1903               	btfsc	3,2
  1016  06D0  2ED2               	goto	u481
  1017  06D1  2ED3               	goto	u480
  1018  06D2                     u481:
  1019  06D2  2ED8               	goto	l887
  1020  06D3                     u480:
  1021  06D3                     l885:
  1022  06D3  09F2               	comf	___awmod@dividend,f
  1023  06D4  09F3               	comf	___awmod@dividend+1,f
  1024  06D5  0AF2               	incf	___awmod@dividend,f
  1025  06D6  1903               	skipnz
  1026  06D7  0AF3               	incf	___awmod@dividend+1,f
  1027  06D8                     l887:
  1028  06D8  0873               	movf	___awmod@dividend+1,w
  1029  06D9  00F1               	movwf	?___awmod+1
  1030  06DA  0872               	movf	___awmod@dividend,w
  1031  06DB  00F0               	movwf	?___awmod
  1032  06DC                     l321:
  1033  06DC  0008               	return
  1034  06DD                     __end_of___awmod:
  1035                           
  1036                           	psect	text5
  1037  06DD                     __ptext5:	
  1038 ;; *************** function ___awdiv *****************
  1039 ;; Defined at:
  1040 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  divisor         2    0[COMMON] int 
  1043 ;;  dividend        2    2[COMMON] int 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  quotient        2    7[COMMON] int 
  1046 ;;  sign            1    6[COMMON] unsigned char 
  1047 ;;  counter         1    5[COMMON] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2    0[COMMON] int 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         4       0       0       0       0
  1058 ;;      Locals:         4       0       0       0       0
  1059 ;;      Temps:          1       0       0       0       0
  1060 ;;      Totals:         9       0       0       0       0
  1061 ;;Total ram usage:        9 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_display
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function ___awdiv
  1072  06DD                     ___awdiv:
  1073  06DD                     l809:	
  1074                           ;incstack = 0
  1075                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1076                           
  1077  06DD  01F6               	clrf	___awdiv@sign
  1078  06DE                     l811:
  1079  06DE  1FF1               	btfss	___awdiv@divisor+1,7
  1080  06DF  2EE1               	goto	u301
  1081  06E0  2EE2               	goto	u300
  1082  06E1                     u301:
  1083  06E1  2EE9               	goto	l817
  1084  06E2                     u300:
  1085  06E2                     l813:
  1086  06E2  09F0               	comf	___awdiv@divisor,f
  1087  06E3  09F1               	comf	___awdiv@divisor+1,f
  1088  06E4  0AF0               	incf	___awdiv@divisor,f
  1089  06E5  1903               	skipnz
  1090  06E6  0AF1               	incf	___awdiv@divisor+1,f
  1091  06E7                     l815:
  1092  06E7  01F6               	clrf	___awdiv@sign
  1093  06E8  0AF6               	incf	___awdiv@sign,f
  1094  06E9                     l817:
  1095  06E9  1FF3               	btfss	___awdiv@dividend+1,7
  1096  06EA  2EEC               	goto	u311
  1097  06EB  2EED               	goto	u310
  1098  06EC                     u311:
  1099  06EC  2EF6               	goto	l823
  1100  06ED                     u310:
  1101  06ED                     l819:
  1102  06ED  09F2               	comf	___awdiv@dividend,f
  1103  06EE  09F3               	comf	___awdiv@dividend+1,f
  1104  06EF  0AF2               	incf	___awdiv@dividend,f
  1105  06F0  1903               	skipnz
  1106  06F1  0AF3               	incf	___awdiv@dividend+1,f
  1107  06F2                     l821:
  1108  06F2  3001               	movlw	1
  1109  06F3  00F4               	movwf	??___awdiv
  1110  06F4  0874               	movf	??___awdiv,w
  1111  06F5  06F6               	xorwf	___awdiv@sign,f
  1112  06F6                     l823:
  1113  06F6  01F7               	clrf	___awdiv@quotient
  1114  06F7  01F8               	clrf	___awdiv@quotient+1
  1115  06F8                     l825:
  1116  06F8  0870               	movf	___awdiv@divisor,w
  1117  06F9  0471               	iorwf	___awdiv@divisor+1,w
  1118  06FA  1903               	btfsc	3,2
  1119  06FB  2EFD               	goto	u321
  1120  06FC  2EFE               	goto	u320
  1121  06FD                     u321:
  1122  06FD  2F35               	goto	l845
  1123  06FE                     u320:
  1124  06FE                     l827:
  1125  06FE  01F5               	clrf	___awdiv@counter
  1126  06FF  0AF5               	incf	___awdiv@counter,f
  1127  0700  2F0C               	goto	l833
  1128  0701                     l829:
  1129  0701  3001               	movlw	1
  1130  0702                     u335:
  1131  0702  1003               	clrc
  1132  0703  0DF0               	rlf	___awdiv@divisor,f
  1133  0704  0DF1               	rlf	___awdiv@divisor+1,f
  1134  0705  3EFF               	addlw	-1
  1135  0706  1D03               	skipz
  1136  0707  2F02               	goto	u335
  1137  0708                     l831:
  1138  0708  3001               	movlw	1
  1139  0709  00F4               	movwf	??___awdiv
  1140  070A  0874               	movf	??___awdiv,w
  1141  070B  07F5               	addwf	___awdiv@counter,f
  1142  070C                     l833:
  1143  070C  1FF1               	btfss	___awdiv@divisor+1,7
  1144  070D  2F0F               	goto	u341
  1145  070E  2F10               	goto	u340
  1146  070F                     u341:
  1147  070F  2F01               	goto	l829
  1148  0710                     u340:
  1149  0710                     l835:
  1150  0710  3001               	movlw	1
  1151  0711                     u355:
  1152  0711  1003               	clrc
  1153  0712  0DF7               	rlf	___awdiv@quotient,f
  1154  0713  0DF8               	rlf	___awdiv@quotient+1,f
  1155  0714  3EFF               	addlw	-1
  1156  0715  1D03               	skipz
  1157  0716  2F11               	goto	u355
  1158  0717  0871               	movf	___awdiv@divisor+1,w
  1159  0718  0273               	subwf	___awdiv@dividend+1,w
  1160  0719  1D03               	skipz
  1161  071A  2F1D               	goto	u365
  1162  071B  0870               	movf	___awdiv@divisor,w
  1163  071C  0272               	subwf	___awdiv@dividend,w
  1164  071D                     u365:
  1165  071D  1C03               	skipc
  1166  071E  2F20               	goto	u361
  1167  071F  2F21               	goto	u360
  1168  0720                     u361:
  1169  0720  2F28               	goto	l841
  1170  0721                     u360:
  1171  0721                     l837:
  1172  0721  0870               	movf	___awdiv@divisor,w
  1173  0722  02F2               	subwf	___awdiv@dividend,f
  1174  0723  0871               	movf	___awdiv@divisor+1,w
  1175  0724  1C03               	skipc
  1176  0725  03F3               	decf	___awdiv@dividend+1,f
  1177  0726  02F3               	subwf	___awdiv@dividend+1,f
  1178  0727                     l839:
  1179  0727  1477               	bsf	___awdiv@quotient,0
  1180  0728                     l841:
  1181  0728  3001               	movlw	1
  1182  0729                     u375:
  1183  0729  1003               	clrc
  1184  072A  0CF1               	rrf	___awdiv@divisor+1,f
  1185  072B  0CF0               	rrf	___awdiv@divisor,f
  1186  072C  3EFF               	addlw	-1
  1187  072D  1D03               	skipz
  1188  072E  2F29               	goto	u375
  1189  072F                     l843:
  1190  072F  3001               	movlw	1
  1191  0730  02F5               	subwf	___awdiv@counter,f
  1192  0731  1D03               	btfss	3,2
  1193  0732  2F34               	goto	u381
  1194  0733  2F35               	goto	u380
  1195  0734                     u381:
  1196  0734  2F10               	goto	l835
  1197  0735                     u380:
  1198  0735                     l845:
  1199  0735  0876               	movf	___awdiv@sign,w
  1200  0736  1903               	btfsc	3,2
  1201  0737  2F39               	goto	u391
  1202  0738  2F3A               	goto	u390
  1203  0739                     u391:
  1204  0739  2F3F               	goto	l849
  1205  073A                     u390:
  1206  073A                     l847:
  1207  073A  09F7               	comf	___awdiv@quotient,f
  1208  073B  09F8               	comf	___awdiv@quotient+1,f
  1209  073C  0AF7               	incf	___awdiv@quotient,f
  1210  073D  1903               	skipnz
  1211  073E  0AF8               	incf	___awdiv@quotient+1,f
  1212  073F                     l849:
  1213  073F  0878               	movf	___awdiv@quotient+1,w
  1214  0740  00F1               	movwf	?___awdiv+1
  1215  0741  0877               	movf	___awdiv@quotient,w
  1216  0742  00F0               	movwf	?___awdiv
  1217  0743                     l308:
  1218  0743  0008               	return
  1219  0744                     __end_of___awdiv:
  1220  007E                     btemp	set	126	;btemp
  1221  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      2       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd
    _display->_lcd
    _lcd->___awdiv

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3388
                            _display
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _display                                              2     0      2    2280
                                              0 BANK0      2     0      2
                            ___awdiv
                            ___awmod
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     0      4    1108
                                              9 COMMON     4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___awdiv
     ___awmod
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
       _pulse (ARG)
   _lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 21 11:16:25 2023

                     l50 07C3                       l51 07BD                       l46 079C  
                     l63 063A                       l55 07EA                       l47 0796  
                     l66 0621                       l69 0683             ___awdiv@sign 0076  
                    l321 06DC                      l308 0743                      l801 062E  
                    l811 06DE                      l803 060F                      l821 06F2  
                    l813 06E2                      l805 061A                      l901 0751  
                    l831 0708                      l823 06F6                      l815 06E7  
                    l807 061C                      l911 0767                      l903 0754  
                    l841 0728                      l833 070C                      l825 06F8  
                    l817 06E9                      l809 06DD                      l921 07A0  
                    l913 0773                      l905 0757                      l843 072F  
                    l835 0710                      l827 06FE                      l819 06ED  
                    l931 07DD                      l923 07AC                      l915 0779  
                    l907 075A                      l837 0721                      l829 0701  
                    l845 0735                      l861 0690                      l853 0684  
                    l925 07B4                      l917 0785                      l909 075B  
                    l847 073A                      l839 0727                      l871 06A9  
                    l863 0694                      l855 0685                      l927 07C7  
                    l919 078D                      l849 073F                      l881 06C8  
                    l873 06AD                      l865 0699                      l857 0689  
                    l929 07D3                      l875 06B1                      l867 069F  
                    l883 06CE                      l859 068E                      l891 063B  
                    l885 06D3                      l877 06BB                      l869 06A2  
                    l797 0622                      l893 0744                      l887 06D8  
                    l879 06C1                      l799 0625                      l895 0748  
                    l897 074B                      l899 074E                      _RA0 0028  
                    _RA1 0029                      _RA2 002A                      _RC5 003D  
                    _RC6 003E                      _RC7 003F                      u300 06E2  
                    u301 06E1                      u310 06ED                      u311 06EC  
                    u320 06FE                      u400 0689                      u321 06FD  
                    u401 0688                      u410 0694                      u411 0693  
                    u340 0710                      u420 069F                      u500 079C  
                    u341 070F                      u421 069E                      u501 079B  
                    u510 07A0                      u335 0702                      u511 079F  
                    u360 0721                      u440 06B1                      u280 0616  
                    u520 07C3                      u361 0720                      u441 06B0  
                    u281 0612                      u521 07C2                      u450 06BB  
                    u530 07C7                      u355 0711                      u451 06BA  
                    u435 06A3                      u531 07C6                      u380 0735  
                    u540 07F0                      u381 0734                      u365 071D  
                    u541 07EF                      u390 073A                      u470 06CE  
                    u294 0619                      u391 0739                      u375 0729  
                    u471 06CD                      u455 06B7                      u480 06D3  
                    u481 06D2                      u465 06C2                      u490 0779  
                    u491 0778                      u557 0629                      u567 0635  
                    _lcd 060F             ___awmod@sign 0076                     ?_lcd 0079  
                   _main 0744                     lcd@g 0079                     lcd@h 007B  
                   btemp 007E                     start 0000                    ??_lcd 007D  
                  ?_main 0070          __end_of___awdiv 0744          __end_of___awmod 06DD  
                  _ANSEL 0188          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
        __end_of_display 0684                    _count 0024                    _pulse 0622  
                  _total 0020                    status 0003                    wtemp0 007E  
        __initialization 07F4             __end_of_main 07F4                   ??_main 007D  
       ___awdiv@dividend 0072                   ?_pulse 0070                   _ANSELH 0189  
              ??___awdiv 0074                ??___awmod 0074                   _count1 0022  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_display 007D  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_pulse 063B                  ??_pulse 0070               __pbssBANK0 0020  
             __pmaintext 0744                  ___awdiv 06DD                  ___awmod 0684  
                __ptext1 063B                  __ptext2 060F                  __ptext3 0622  
                __ptext4 0684                  __ptext5 06DD                  _display 063B  
           __size_of_lcd 0013         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07F4              __end_of_lcd 0622                ___latbits 0002  
          __pcstackBANK0 0026                 ?___awdiv 0070                 ?___awmod 0070  
               ?_display 0026           __size_of_pulse 0019         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of_display 0049            __size_of_main 00B0  
               display@c 0026  
