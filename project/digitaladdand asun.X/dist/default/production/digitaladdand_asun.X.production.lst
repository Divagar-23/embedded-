

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 17 15:11:15 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  05E3                     __pidataBANK0:
   213                           
   214                           ;initializer for _cc
   215  05E3  343F               	retlw	63
   216  05E4  3400               	retlw	0
   217  05E5  3406               	retlw	6
   218  05E6  3400               	retlw	0
   219  05E7  345B               	retlw	91
   220  05E8  3400               	retlw	0
   221  05E9  344F               	retlw	79
   222  05EA  3400               	retlw	0
   223  05EB  3466               	retlw	102
   224  05EC  3400               	retlw	0
   225  05ED  346D               	retlw	109
   226  05EE  3400               	retlw	0
   227  05EF  347D               	retlw	125
   228  05F0  3400               	retlw	0
   229  05F1  3407               	retlw	7
   230  05F2  3400               	retlw	0
   231  05F3  347F               	retlw	127
   232  05F4  3400               	retlw	0
   233  05F5  346F               	retlw	111
   234  05F6  3400               	retlw	0
   235  0008                     _PORTD	set	8
   236  0007                     _PORTC	set	7
   237  0005                     _PORTA	set	5
   238  0040                     _RD0	set	64
   239  0041                     _RD1	set	65
   240  0042                     _RD2	set	66
   241  0043                     _RD3	set	67
   242  0029                     _RA1	set	41
   243  0028                     _RA0	set	40
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0085                     _TRISA	set	133
   247  0189                     _ANSELH	set	393
   248  0188                     _ANSEL	set	392
   249                           
   250                           	psect	cinit
   251  07EA                     start_initialization:	
   252                           ; #config settings
   253                           
   254  07EA                     __initialization:
   255                           
   256                           ; Initialize objects allocated to BANK0
   257  07EA  1383               	bcf	3,7	;select IRP bank0
   258  07EB  3034               	movlw	low (__pdataBANK0+20)
   259  07EC  00FD               	movwf	btemp+-1
   260  07ED  3005               	movlw	high __pidataBANK0
   261  07EE  00FE               	movwf	btemp
   262  07EF  30E3               	movlw	low __pidataBANK0
   263  07F0  00FF               	movwf	btemp+1
   264  07F1  3020               	movlw	low __pdataBANK0
   265  07F2  0084               	movwf	4
   266  07F3  120A  118A  25D4  120A  118A  	fcall	init_ram0
   267                           
   268                           ; Clear objects allocated to BANK0
   269  07F8  01B4               	clrf	__pbssBANK0& (0+127)
   270  07F9  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   271  07FA  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   272  07FB  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   273  07FC                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  07FC                     __end_of__initialization:
   277  07FC  0183               	clrf	3
   278  07FD  120A  118A  2E49   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssBANK0
   281  0034                     __pbssBANK0:
   282  0034                     _j:
   283  0034                     	ds	2
   284  0036                     _i:
   285  0036                     	ds	2
   286                           
   287                           	psect	dataBANK0
   288  0020                     __pdataBANK0:
   289  0020                     _cc:
   290  0020                     	ds	20
   291                           
   292                           	psect	inittext
   293  05D0                     init_fetch0:	
   294                           ;	Called with low address in FSR and high address in W
   295                           
   296  05D0  087E               	movf	btemp,w
   297  05D1  008A               	movwf	10
   298  05D2  087F               	movf	btemp+1,w
   299  05D3  0082               	movwf	2
   300  05D4                     init_ram0:	
   301                           ;Called with:
   302                           ;	high address of idata address in btemp 
   303                           ;	low address of idata address in btemp+1 
   304                           ;	low address of data in FSR
   305                           ;	high address + 1 of data in btemp-1
   306                           
   307  05D4  120A  118A  25D0  120A  118A  	fcall	init_fetch0
   308  05D9  0080               	movwf	0
   309  05DA  0A84               	incf	4,f
   310  05DB  0804               	movf	4,w
   311  05DC  067D               	xorwf	btemp+-1,w
   312  05DD  1903               	btfsc	3,2
   313  05DE  3400               	retlw	0
   314  05DF  0AFF               	incf	btemp+1,f
   315  05E0  1903               	btfsc	3,2
   316  05E1  0AFE               	incf	btemp,f
   317  05E2  2DD4               	goto	init_ram0
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:
   321  0070                     ?_main:
   322  0070                     ?___awdiv:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?___awmod:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     ___awdiv@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331  0070                     ___awmod@divisor:	
   332                           ; 2 bytes @ 0x0
   333                           
   334                           
   335                           ; 2 bytes @ 0x0
   336  0070                     	ds	2
   337  0072                     ___awdiv@dividend:
   338  0072                     ___awmod@dividend:	
   339                           ; 2 bytes @ 0x2
   340                           
   341                           
   342                           ; 2 bytes @ 0x2
   343  0072                     	ds	2
   344  0074                     ??___awdiv:
   345  0074                     ??___awmod:	
   346                           ; 1 bytes @ 0x4
   347                           
   348                           
   349                           ; 1 bytes @ 0x4
   350  0074                     	ds	1
   351  0075                     ___awdiv@counter:
   352  0075                     ___awmod@counter:	
   353                           ; 1 bytes @ 0x5
   354                           
   355                           
   356                           ; 1 bytes @ 0x5
   357  0075                     	ds	1
   358  0076                     ___awdiv@sign:
   359  0076                     ___awmod@sign:	
   360                           ; 1 bytes @ 0x6
   361                           
   362                           
   363                           ; 1 bytes @ 0x6
   364  0076                     	ds	1
   365  0077                     ___awdiv@quotient:
   366                           
   367                           ; 2 bytes @ 0x7
   368  0077                     	ds	2
   369  0079                     ?_display2:
   370  0079                     ?_display1:	
   371                           ; 1 bytes @ 0x9
   372                           
   373  0079                     display1@k:	
   374                           ; 1 bytes @ 0x9
   375                           
   376  0079                     display2@l:	
   377                           ; 2 bytes @ 0x9
   378                           
   379                           
   380                           ; 2 bytes @ 0x9
   381  0079                     	ds	2
   382  007B                     ??_display2:
   383  007B                     ??_display1:	
   384                           ; 1 bytes @ 0xB
   385                           
   386                           
   387                           ; 1 bytes @ 0xB
   388  007B                     	ds	2
   389  007D                     ??_first_button:
   390  007D                     ??_second_button:	
   391                           ; 1 bytes @ 0xD
   392                           
   393                           
   394                           ; 1 bytes @ 0xD
   395  007D                     	ds	1
   396  007E                     ??_main:
   397                           
   398                           	psect	cstackBANK0
   399  0038                     __pcstackBANK0:	
   400                           ; 1 bytes @ 0xE
   401                           
   402  0038                     ?_first_button:
   403  0038                     ?_second_button:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0038                     first_button@a:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0038                     second_button@c:	
   410                           ; 2 bytes @ 0x0
   411                           
   412                           
   413                           ; 2 bytes @ 0x0
   414  0038                     	ds	2
   415  003A                     first_button@b:
   416  003A                     second_button@d:	
   417                           ; 2 bytes @ 0x2
   418                           
   419                           
   420                           ; 2 bytes @ 0x2
   421  003A                     	ds	2
   422                           
   423                           	psect	maintext
   424  0649                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 20 in file "4digital.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels required when called: 3
   450 ;; This function calls:
   451 ;;		_first_button
   452 ;;		_second_button
   453 ;; This function is called by:
   454 ;;		Startup code after reset
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _main
   460  0649                     _main:
   461  0649                     l950:	
   462                           ;incstack = 0
   463                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   464                           
   465  0649  3003               	movlw	3
   466  064A  1683               	bsf	3,5	;RP0=1, select bank1
   467  064B  1303               	bcf	3,6	;RP1=0, select bank1
   468  064C  0085               	movwf	5	;volatile
   469  064D                     l952:
   470  064D  1283               	bcf	3,5	;RP0=0, select bank0
   471  064E  1303               	bcf	3,6	;RP1=0, select bank0
   472  064F  0185               	clrf	5	;volatile
   473  0650                     l954:
   474  0650  1683               	bsf	3,5	;RP0=1, select bank1
   475  0651  1303               	bcf	3,6	;RP1=0, select bank1
   476  0652  0187               	clrf	7	;volatile
   477  0653                     l956:
   478  0653  1283               	bcf	3,5	;RP0=0, select bank0
   479  0654  1303               	bcf	3,6	;RP1=0, select bank0
   480  0655  0187               	clrf	7	;volatile
   481  0656                     l958:
   482  0656  1683               	bsf	3,5	;RP0=1, select bank1
   483  0657  1303               	bcf	3,6	;RP1=0, select bank1
   484  0658  0188               	clrf	8	;volatile
   485  0659                     l960:
   486  0659  1283               	bcf	3,5	;RP0=0, select bank0
   487  065A  1303               	bcf	3,6	;RP1=0, select bank0
   488  065B  0188               	clrf	8	;volatile
   489  065C                     l962:
   490  065C  1683               	bsf	3,5	;RP0=1, select bank3
   491  065D  1703               	bsf	3,6	;RP1=1, select bank3
   492  065E  0188               	clrf	8	;volatile
   493  065F                     l964:
   494  065F  0189               	clrf	9	;volatile
   495  0660                     l966:
   496  0660  1283               	bcf	3,5	;RP0=0, select bank0
   497  0661  1303               	bcf	3,6	;RP1=0, select bank0
   498  0662  1C05               	btfss	5,0	;volatile
   499  0663  2E65               	goto	u471
   500  0664  2E66               	goto	u470
   501  0665                     u471:
   502  0665  2E76               	goto	l972
   503  0666                     u470:
   504  0666                     l968:
   505  0666  1885               	btfsc	5,1	;volatile
   506  0667  2E69               	goto	u481
   507  0668  2E6A               	goto	u480
   508  0669                     u481:
   509  0669  2E76               	goto	l972
   510  066A                     u480:
   511  066A                     l970:
   512  066A  3000               	movlw	0
   513  066B  00B8               	movwf	first_button@a
   514  066C  00B9               	movwf	first_button@a+1
   515  066D  3063               	movlw	99
   516  066E  00BA               	movwf	first_button@b
   517  066F  3000               	movlw	0
   518  0670  00BB               	movwf	first_button@b+1
   519  0671  120A  118A  25F7  120A  118A  	fcall	_first_button
   520  0676                     l972:
   521  0676  1283               	bcf	3,5	;RP0=0, select bank0
   522  0677  1303               	bcf	3,6	;RP1=0, select bank0
   523  0678  1805               	btfsc	5,0	;volatile
   524  0679  2E7B               	goto	u491
   525  067A  2E7C               	goto	u490
   526  067B                     u491:
   527  067B  2E60               	goto	l966
   528  067C                     u490:
   529  067C                     l974:
   530  067C  1C85               	btfss	5,1	;volatile
   531  067D  2E7F               	goto	u501
   532  067E  2E80               	goto	u500
   533  067F                     u501:
   534  067F  2E60               	goto	l966
   535  0680                     u500:
   536  0680                     l976:
   537  0680  3000               	movlw	0
   538  0681  00B8               	movwf	second_button@c
   539  0682  00B9               	movwf	second_button@c+1
   540  0683  3063               	movlw	99
   541  0684  00BA               	movwf	second_button@d
   542  0685  3000               	movlw	0
   543  0686  00BB               	movwf	second_button@d+1
   544  0687  120A  118A  2620  120A  118A  	fcall	_second_button
   545  068C  2E60               	goto	l966
   546  068D  120A  118A  2800   	ljmp	start
   547  0690                     __end_of_main:
   548                           
   549                           	psect	text1
   550  0620                     __ptext1:	
   551 ;; *************** function _second_button *****************
   552 ;; Defined at:
   553 ;;		line 61 in file "4digital.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  c               2    0[BANK0 ] int 
   556 ;;  d               2    2[BANK0 ] int 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       4       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          1       0       0       0       0
   571 ;;      Totals:         1       4       0       0       0
   572 ;;Total ram usage:        5 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 2
   575 ;; This function calls:
   576 ;;		_display2
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _second_button
   584  0620                     _second_button:
   585  0620                     l942:	
   586                           ;incstack = 0
   587                           ; Regs used in _second_button: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   588                           
   589  0620  1283               	bcf	3,5	;RP0=0, select bank0
   590  0621  1303               	bcf	3,6	;RP1=0, select bank0
   591  0622  0839               	movf	second_button@c+1,w
   592  0623  00B5               	movwf	_j+1
   593  0624  0838               	movf	second_button@c,w
   594  0625  00B4               	movwf	_j
   595  0626  2E3A               	goto	l948
   596  0627                     l944:
   597  0627  1283               	bcf	3,5	;RP0=0, select bank0
   598  0628  1303               	bcf	3,6	;RP1=0, select bank0
   599  0629  0835               	movf	_j+1,w
   600  062A  00FA               	movwf	display2@l+1
   601  062B  0834               	movf	_j,w
   602  062C  00F9               	movwf	display2@l
   603  062D  120A  118A  26DD  120A  118A  	fcall	_display2
   604  0632                     l946:
   605  0632  3001               	movlw	1
   606  0633  1283               	bcf	3,5	;RP0=0, select bank0
   607  0634  1303               	bcf	3,6	;RP1=0, select bank0
   608  0635  07B4               	addwf	_j,f
   609  0636  1803               	skipnc
   610  0637  0AB5               	incf	_j+1,f
   611  0638  3000               	movlw	0
   612  0639  07B5               	addwf	_j+1,f
   613  063A                     l948:
   614  063A  083B               	movf	second_button@d+1,w
   615  063B  3A80               	xorlw	128
   616  063C  00FD               	movwf	??_second_button
   617  063D  0835               	movf	_j+1,w
   618  063E  3A80               	xorlw	128
   619  063F  027D               	subwf	??_second_button,w
   620  0640  1D03               	skipz
   621  0641  2E44               	goto	u465
   622  0642  0834               	movf	_j,w
   623  0643  023A               	subwf	second_button@d,w
   624  0644                     u465:
   625  0644  1803               	skipnc
   626  0645  2E47               	goto	u461
   627  0646  2E48               	goto	u460
   628  0647                     u461:
   629  0647  2E27               	goto	l944
   630  0648                     u460:
   631  0648                     l67:
   632  0648  0008               	return
   633  0649                     __end_of_second_button:
   634                           
   635                           	psect	text2
   636  06DD                     __ptext2:	
   637 ;; *************** function _display2 *****************
   638 ;; Defined at:
   639 ;;		line 68 in file "4digital.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  l               2    9[COMMON] int 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         2       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          2       0       0       0       0
   656 ;;      Totals:         4       0       0       0       0
   657 ;;Total ram usage:        4 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 1
   660 ;; This function calls:
   661 ;;		___awdiv
   662 ;;		___awmod
   663 ;; This function is called by:
   664 ;;		_second_button
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _display2
   670  06DD                     _display2:
   671  06DD                     l918:	
   672                           ;incstack = 0
   673                           ; Regs used in _display2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   674                           
   675  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   676  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   677  06DF  1408               	bsf	8,0	;volatile
   678  06E0  1488               	bsf	8,1	;volatile
   679  06E1  1588               	bsf	8,3	;volatile
   680  06E2  1108               	bcf	8,2	;volatile
   681  06E3                     l920:
   682  06E3  300A               	movlw	10
   683  06E4  00F0               	movwf	___awdiv@divisor
   684  06E5  3000               	movlw	0
   685  06E6  00F1               	movwf	___awdiv@divisor+1
   686  06E7  087A               	movf	display2@l+1,w
   687  06E8  00F3               	movwf	___awdiv@dividend+1
   688  06E9  0879               	movf	display2@l,w
   689  06EA  00F2               	movwf	___awdiv@dividend
   690  06EB  120A  118A  2783  120A  118A  	fcall	___awdiv
   691  06F0  0870               	movf	?___awdiv,w
   692  06F1  00FB               	movwf	??_display2
   693  06F2  077B               	addwf	??_display2,w
   694  06F3  3E20               	addlw	(low (_cc| 0))& (0+255)
   695  06F4  0084               	movwf	4
   696  06F5  1383               	bcf	3,7	;select IRP bank0
   697  06F6  0800               	movf	0,w
   698  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   699  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   700  06F9  0087               	movwf	7	;volatile
   701  06FA                     l922:
   702  06FA  3041               	movlw	65
   703  06FB  00FC               	movwf	??_display2+1
   704  06FC  30EE               	movlw	238
   705  06FD  00FB               	movwf	??_display2
   706  06FE                     u517:
   707  06FE  0BFB               	decfsz	??_display2,f
   708  06FF  2EFE               	goto	u517
   709  0700  0BFC               	decfsz	??_display2+1,f
   710  0701  2EFE               	goto	u517
   711  0702  0000               	nop
   712  0703                     l924:
   713  0703  1283               	bcf	3,5	;RP0=0, select bank0
   714  0704  1303               	bcf	3,6	;RP1=0, select bank0
   715  0705  1508               	bsf	8,2	;volatile
   716  0706                     l926:
   717  0706  1408               	bsf	8,0	;volatile
   718  0707                     l928:
   719  0707  1488               	bsf	8,1	;volatile
   720  0708                     l930:
   721  0708  1188               	bcf	8,3	;volatile
   722  0709                     l932:
   723  0709  300A               	movlw	10
   724  070A  00F0               	movwf	___awmod@divisor
   725  070B  3000               	movlw	0
   726  070C  00F1               	movwf	___awmod@divisor+1
   727  070D  087A               	movf	display2@l+1,w
   728  070E  00F3               	movwf	___awmod@dividend+1
   729  070F  0879               	movf	display2@l,w
   730  0710  00F2               	movwf	___awmod@dividend
   731  0711  120A  118A  272A  120A  118A  	fcall	___awmod
   732  0716  0870               	movf	?___awmod,w
   733  0717  00FB               	movwf	??_display2
   734  0718  077B               	addwf	??_display2,w
   735  0719  3E20               	addlw	(low (_cc| 0))& (0+255)
   736  071A  0084               	movwf	4
   737  071B  1383               	bcf	3,7	;select IRP bank0
   738  071C  0800               	movf	0,w
   739  071D  1283               	bcf	3,5	;RP0=0, select bank0
   740  071E  1303               	bcf	3,6	;RP1=0, select bank0
   741  071F  0087               	movwf	7	;volatile
   742  0720  3041               	movlw	65
   743  0721  00FC               	movwf	??_display2+1
   744  0722  30EE               	movlw	238
   745  0723  00FB               	movwf	??_display2
   746  0724                     u527:
   747  0724  0BFB               	decfsz	??_display2,f
   748  0725  2F24               	goto	u527
   749  0726  0BFC               	decfsz	??_display2+1,f
   750  0727  2F24               	goto	u527
   751  0728  0000               	nop
   752  0729                     l70:
   753  0729  0008               	return
   754  072A                     __end_of_display2:
   755                           
   756                           	psect	text3
   757  05F7                     __ptext3:	
   758 ;; *************** function _first_button *****************
   759 ;; Defined at:
   760 ;;		line 54 in file "4digital.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  a               2    0[BANK0 ] int 
   763 ;;  b               2    2[BANK0 ] int 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       4       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          1       0       0       0       0
   778 ;;      Totals:         1       4       0       0       0
   779 ;;Total ram usage:        5 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 2
   782 ;; This function calls:
   783 ;;		_display1
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _first_button
   791  05F7                     _first_button:
   792  05F7                     l934:	
   793                           ;incstack = 0
   794                           ; Regs used in _first_button: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795                           
   796  05F7  1283               	bcf	3,5	;RP0=0, select bank0
   797  05F8  1303               	bcf	3,6	;RP1=0, select bank0
   798  05F9  0839               	movf	first_button@a+1,w
   799  05FA  00B7               	movwf	_i+1
   800  05FB  0838               	movf	first_button@a,w
   801  05FC  00B6               	movwf	_i
   802  05FD  2E11               	goto	l940
   803  05FE                     l936:
   804  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   805  05FF  1303               	bcf	3,6	;RP1=0, select bank0
   806  0600  0837               	movf	_i+1,w
   807  0601  00FA               	movwf	display1@k+1
   808  0602  0836               	movf	_i,w
   809  0603  00F9               	movwf	display1@k
   810  0604  120A  118A  2690  120A  118A  	fcall	_display1
   811  0609                     l938:
   812  0609  3001               	movlw	1
   813  060A  1283               	bcf	3,5	;RP0=0, select bank0
   814  060B  1303               	bcf	3,6	;RP1=0, select bank0
   815  060C  07B6               	addwf	_i,f
   816  060D  1803               	skipnc
   817  060E  0AB7               	incf	_i+1,f
   818  060F  3000               	movlw	0
   819  0610  07B7               	addwf	_i+1,f
   820  0611                     l940:
   821  0611  083B               	movf	first_button@b+1,w
   822  0612  3A80               	xorlw	128
   823  0613  00FD               	movwf	??_first_button
   824  0614  0837               	movf	_i+1,w
   825  0615  3A80               	xorlw	128
   826  0616  027D               	subwf	??_first_button,w
   827  0617  1D03               	skipz
   828  0618  2E1B               	goto	u455
   829  0619  0836               	movf	_i,w
   830  061A  023A               	subwf	first_button@b,w
   831  061B                     u455:
   832  061B  1803               	skipnc
   833  061C  2E1E               	goto	u451
   834  061D  2E1F               	goto	u450
   835  061E                     u451:
   836  061E  2DFE               	goto	l936
   837  061F                     u450:
   838  061F                     l61:
   839  061F  0008               	return
   840  0620                     __end_of_first_button:
   841                           
   842                           	psect	text4
   843  0690                     __ptext4:	
   844 ;; *************** function _display1 *****************
   845 ;; Defined at:
   846 ;;		line 44 in file "4digital.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  k               2    9[COMMON] int 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         2       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0
   862 ;;      Temps:          2       0       0       0       0
   863 ;;      Totals:         4       0       0       0       0
   864 ;;Total ram usage:        4 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 1
   867 ;; This function calls:
   868 ;;		___awdiv
   869 ;;		___awmod
   870 ;; This function is called by:
   871 ;;		_first_button
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _display1
   877  0690                     _display1:
   878  0690                     l902:	
   879                           ;incstack = 0
   880                           ; Regs used in _display1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   881                           
   882  0690  1283               	bcf	3,5	;RP0=0, select bank0
   883  0691  1303               	bcf	3,6	;RP1=0, select bank0
   884  0692  1588               	bsf	8,3	;volatile
   885  0693  1508               	bsf	8,2	;volatile
   886  0694  1488               	bsf	8,1	;volatile
   887  0695  1008               	bcf	8,0	;volatile
   888  0696                     l904:
   889  0696  300A               	movlw	10
   890  0697  00F0               	movwf	___awdiv@divisor
   891  0698  3000               	movlw	0
   892  0699  00F1               	movwf	___awdiv@divisor+1
   893  069A  087A               	movf	display1@k+1,w
   894  069B  00F3               	movwf	___awdiv@dividend+1
   895  069C  0879               	movf	display1@k,w
   896  069D  00F2               	movwf	___awdiv@dividend
   897  069E  120A  118A  2783  120A  118A  	fcall	___awdiv
   898  06A3  0870               	movf	?___awdiv,w
   899  06A4  00FB               	movwf	??_display1
   900  06A5  077B               	addwf	??_display1,w
   901  06A6  3E20               	addlw	(low (_cc| 0))& (0+255)
   902  06A7  0084               	movwf	4
   903  06A8  1383               	bcf	3,7	;select IRP bank0
   904  06A9  0800               	movf	0,w
   905  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   906  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   907  06AC  0087               	movwf	7	;volatile
   908  06AD                     l906:
   909  06AD  3041               	movlw	65
   910  06AE  00FC               	movwf	??_display1+1
   911  06AF  30EE               	movlw	238
   912  06B0  00FB               	movwf	??_display1
   913  06B1                     u537:
   914  06B1  0BFB               	decfsz	??_display1,f
   915  06B2  2EB1               	goto	u537
   916  06B3  0BFC               	decfsz	??_display1+1,f
   917  06B4  2EB1               	goto	u537
   918  06B5  0000               	nop
   919  06B6                     l908:
   920  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   921  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   922  06B8  1408               	bsf	8,0	;volatile
   923  06B9                     l910:
   924  06B9  1588               	bsf	8,3	;volatile
   925  06BA                     l912:
   926  06BA  1508               	bsf	8,2	;volatile
   927  06BB                     l914:
   928  06BB  1088               	bcf	8,1	;volatile
   929  06BC                     l916:
   930  06BC  300A               	movlw	10
   931  06BD  00F0               	movwf	___awmod@divisor
   932  06BE  3000               	movlw	0
   933  06BF  00F1               	movwf	___awmod@divisor+1
   934  06C0  087A               	movf	display1@k+1,w
   935  06C1  00F3               	movwf	___awmod@dividend+1
   936  06C2  0879               	movf	display1@k,w
   937  06C3  00F2               	movwf	___awmod@dividend
   938  06C4  120A  118A  272A  120A  118A  	fcall	___awmod
   939  06C9  0870               	movf	?___awmod,w
   940  06CA  00FB               	movwf	??_display1
   941  06CB  077B               	addwf	??_display1,w
   942  06CC  3E20               	addlw	(low (_cc| 0))& (0+255)
   943  06CD  0084               	movwf	4
   944  06CE  1383               	bcf	3,7	;select IRP bank0
   945  06CF  0800               	movf	0,w
   946  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   947  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   948  06D2  0087               	movwf	7	;volatile
   949  06D3  3041               	movlw	65
   950  06D4  00FC               	movwf	??_display1+1
   951  06D5  30EE               	movlw	238
   952  06D6  00FB               	movwf	??_display1
   953  06D7                     u547:
   954  06D7  0BFB               	decfsz	??_display1,f
   955  06D8  2ED7               	goto	u547
   956  06D9  0BFC               	decfsz	??_display1+1,f
   957  06DA  2ED7               	goto	u547
   958  06DB  0000               	nop
   959  06DC                     l55:
   960  06DC  0008               	return
   961  06DD                     __end_of_display1:
   962                           
   963                           	psect	text5
   964  072A                     __ptext5:	
   965 ;; *************** function ___awmod *****************
   966 ;; Defined at:
   967 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  divisor         2    0[COMMON] int 
   970 ;;  dividend        2    2[COMMON] int 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  sign            1    6[COMMON] unsigned char 
   973 ;;  counter         1    5[COMMON] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  2    0[COMMON] int 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         4       0       0       0       0
   984 ;;      Locals:         2       0       0       0       0
   985 ;;      Temps:          1       0       0       0       0
   986 ;;      Totals:         7       0       0       0       0
   987 ;;Total ram usage:        7 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_display1
   993 ;;		_display2
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function ___awmod
   999  072A                     ___awmod:
  1000  072A                     l864:	
  1001                           ;incstack = 0
  1002                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1003                           
  1004  072A  01F6               	clrf	___awmod@sign
  1005  072B                     l866:
  1006  072B  1FF3               	btfss	___awmod@dividend+1,7
  1007  072C  2F2E               	goto	u361
  1008  072D  2F2F               	goto	u360
  1009  072E                     u361:
  1010  072E  2F36               	goto	l872
  1011  072F                     u360:
  1012  072F                     l868:
  1013  072F  09F2               	comf	___awmod@dividend,f
  1014  0730  09F3               	comf	___awmod@dividend+1,f
  1015  0731  0AF2               	incf	___awmod@dividend,f
  1016  0732  1903               	skipnz
  1017  0733  0AF3               	incf	___awmod@dividend+1,f
  1018  0734                     l870:
  1019  0734  01F6               	clrf	___awmod@sign
  1020  0735  0AF6               	incf	___awmod@sign,f
  1021  0736                     l872:
  1022  0736  1FF1               	btfss	___awmod@divisor+1,7
  1023  0737  2F39               	goto	u371
  1024  0738  2F3A               	goto	u370
  1025  0739                     u371:
  1026  0739  2F3F               	goto	l876
  1027  073A                     u370:
  1028  073A                     l874:
  1029  073A  09F0               	comf	___awmod@divisor,f
  1030  073B  09F1               	comf	___awmod@divisor+1,f
  1031  073C  0AF0               	incf	___awmod@divisor,f
  1032  073D  1903               	skipnz
  1033  073E  0AF1               	incf	___awmod@divisor+1,f
  1034  073F                     l876:
  1035  073F  0870               	movf	___awmod@divisor,w
  1036  0740  0471               	iorwf	___awmod@divisor+1,w
  1037  0741  1903               	btfsc	3,2
  1038  0742  2F44               	goto	u381
  1039  0743  2F45               	goto	u380
  1040  0744                     u381:
  1041  0744  2F74               	goto	l894
  1042  0745                     u380:
  1043  0745                     l878:
  1044  0745  01F5               	clrf	___awmod@counter
  1045  0746  0AF5               	incf	___awmod@counter,f
  1046  0747  2F53               	goto	l884
  1047  0748                     l880:
  1048  0748  3001               	movlw	1
  1049  0749                     u395:
  1050  0749  1003               	clrc
  1051  074A  0DF0               	rlf	___awmod@divisor,f
  1052  074B  0DF1               	rlf	___awmod@divisor+1,f
  1053  074C  3EFF               	addlw	-1
  1054  074D  1D03               	skipz
  1055  074E  2F49               	goto	u395
  1056  074F                     l882:
  1057  074F  3001               	movlw	1
  1058  0750  00F4               	movwf	??___awmod
  1059  0751  0874               	movf	??___awmod,w
  1060  0752  07F5               	addwf	___awmod@counter,f
  1061  0753                     l884:
  1062  0753  1FF1               	btfss	___awmod@divisor+1,7
  1063  0754  2F56               	goto	u401
  1064  0755  2F57               	goto	u400
  1065  0756                     u401:
  1066  0756  2F48               	goto	l880
  1067  0757                     u400:
  1068  0757                     l886:
  1069  0757  0871               	movf	___awmod@divisor+1,w
  1070  0758  0273               	subwf	___awmod@dividend+1,w
  1071  0759  1D03               	skipz
  1072  075A  2F5D               	goto	u415
  1073  075B  0870               	movf	___awmod@divisor,w
  1074  075C  0272               	subwf	___awmod@dividend,w
  1075  075D                     u415:
  1076  075D  1C03               	skipc
  1077  075E  2F60               	goto	u411
  1078  075F  2F61               	goto	u410
  1079  0760                     u411:
  1080  0760  2F67               	goto	l890
  1081  0761                     u410:
  1082  0761                     l888:
  1083  0761  0870               	movf	___awmod@divisor,w
  1084  0762  02F2               	subwf	___awmod@dividend,f
  1085  0763  0871               	movf	___awmod@divisor+1,w
  1086  0764  1C03               	skipc
  1087  0765  03F3               	decf	___awmod@dividend+1,f
  1088  0766  02F3               	subwf	___awmod@dividend+1,f
  1089  0767                     l890:
  1090  0767  3001               	movlw	1
  1091  0768                     u425:
  1092  0768  1003               	clrc
  1093  0769  0CF1               	rrf	___awmod@divisor+1,f
  1094  076A  0CF0               	rrf	___awmod@divisor,f
  1095  076B  3EFF               	addlw	-1
  1096  076C  1D03               	skipz
  1097  076D  2F68               	goto	u425
  1098  076E                     l892:
  1099  076E  3001               	movlw	1
  1100  076F  02F5               	subwf	___awmod@counter,f
  1101  0770  1D03               	btfss	3,2
  1102  0771  2F73               	goto	u431
  1103  0772  2F74               	goto	u430
  1104  0773                     u431:
  1105  0773  2F57               	goto	l886
  1106  0774                     u430:
  1107  0774                     l894:
  1108  0774  0876               	movf	___awmod@sign,w
  1109  0775  1903               	btfsc	3,2
  1110  0776  2F78               	goto	u441
  1111  0777  2F79               	goto	u440
  1112  0778                     u441:
  1113  0778  2F7E               	goto	l898
  1114  0779                     u440:
  1115  0779                     l896:
  1116  0779  09F2               	comf	___awmod@dividend,f
  1117  077A  09F3               	comf	___awmod@dividend+1,f
  1118  077B  0AF2               	incf	___awmod@dividend,f
  1119  077C  1903               	skipnz
  1120  077D  0AF3               	incf	___awmod@dividend+1,f
  1121  077E                     l898:
  1122  077E  0873               	movf	___awmod@dividend+1,w
  1123  077F  00F1               	movwf	?___awmod+1
  1124  0780  0872               	movf	___awmod@dividend,w
  1125  0781  00F0               	movwf	?___awmod
  1126  0782                     l322:
  1127  0782  0008               	return
  1128  0783                     __end_of___awmod:
  1129                           
  1130                           	psect	text6
  1131  0783                     __ptext6:	
  1132 ;; *************** function ___awdiv *****************
  1133 ;; Defined at:
  1134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  divisor         2    0[COMMON] int 
  1137 ;;  dividend        2    2[COMMON] int 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  quotient        2    7[COMMON] int 
  1140 ;;  sign            1    6[COMMON] unsigned char 
  1141 ;;  counter         1    5[COMMON] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  2    0[COMMON] int 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         4       0       0       0       0
  1152 ;;      Locals:         4       0       0       0       0
  1153 ;;      Temps:          1       0       0       0       0
  1154 ;;      Totals:         9       0       0       0       0
  1155 ;;Total ram usage:        9 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_display1
  1161 ;;		_display2
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function ___awdiv
  1167  0783                     ___awdiv:
  1168  0783                     l820:	
  1169                           ;incstack = 0
  1170                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1171                           
  1172  0783  01F6               	clrf	___awdiv@sign
  1173  0784                     l822:
  1174  0784  1FF1               	btfss	___awdiv@divisor+1,7
  1175  0785  2F87               	goto	u261
  1176  0786  2F88               	goto	u260
  1177  0787                     u261:
  1178  0787  2F8F               	goto	l828
  1179  0788                     u260:
  1180  0788                     l824:
  1181  0788  09F0               	comf	___awdiv@divisor,f
  1182  0789  09F1               	comf	___awdiv@divisor+1,f
  1183  078A  0AF0               	incf	___awdiv@divisor,f
  1184  078B  1903               	skipnz
  1185  078C  0AF1               	incf	___awdiv@divisor+1,f
  1186  078D                     l826:
  1187  078D  01F6               	clrf	___awdiv@sign
  1188  078E  0AF6               	incf	___awdiv@sign,f
  1189  078F                     l828:
  1190  078F  1FF3               	btfss	___awdiv@dividend+1,7
  1191  0790  2F92               	goto	u271
  1192  0791  2F93               	goto	u270
  1193  0792                     u271:
  1194  0792  2F9C               	goto	l834
  1195  0793                     u270:
  1196  0793                     l830:
  1197  0793  09F2               	comf	___awdiv@dividend,f
  1198  0794  09F3               	comf	___awdiv@dividend+1,f
  1199  0795  0AF2               	incf	___awdiv@dividend,f
  1200  0796  1903               	skipnz
  1201  0797  0AF3               	incf	___awdiv@dividend+1,f
  1202  0798                     l832:
  1203  0798  3001               	movlw	1
  1204  0799  00F4               	movwf	??___awdiv
  1205  079A  0874               	movf	??___awdiv,w
  1206  079B  06F6               	xorwf	___awdiv@sign,f
  1207  079C                     l834:
  1208  079C  01F7               	clrf	___awdiv@quotient
  1209  079D  01F8               	clrf	___awdiv@quotient+1
  1210  079E                     l836:
  1211  079E  0870               	movf	___awdiv@divisor,w
  1212  079F  0471               	iorwf	___awdiv@divisor+1,w
  1213  07A0  1903               	btfsc	3,2
  1214  07A1  2FA3               	goto	u281
  1215  07A2  2FA4               	goto	u280
  1216  07A3                     u281:
  1217  07A3  2FDB               	goto	l856
  1218  07A4                     u280:
  1219  07A4                     l838:
  1220  07A4  01F5               	clrf	___awdiv@counter
  1221  07A5  0AF5               	incf	___awdiv@counter,f
  1222  07A6  2FB2               	goto	l844
  1223  07A7                     l840:
  1224  07A7  3001               	movlw	1
  1225  07A8                     u295:
  1226  07A8  1003               	clrc
  1227  07A9  0DF0               	rlf	___awdiv@divisor,f
  1228  07AA  0DF1               	rlf	___awdiv@divisor+1,f
  1229  07AB  3EFF               	addlw	-1
  1230  07AC  1D03               	skipz
  1231  07AD  2FA8               	goto	u295
  1232  07AE                     l842:
  1233  07AE  3001               	movlw	1
  1234  07AF  00F4               	movwf	??___awdiv
  1235  07B0  0874               	movf	??___awdiv,w
  1236  07B1  07F5               	addwf	___awdiv@counter,f
  1237  07B2                     l844:
  1238  07B2  1FF1               	btfss	___awdiv@divisor+1,7
  1239  07B3  2FB5               	goto	u301
  1240  07B4  2FB6               	goto	u300
  1241  07B5                     u301:
  1242  07B5  2FA7               	goto	l840
  1243  07B6                     u300:
  1244  07B6                     l846:
  1245  07B6  3001               	movlw	1
  1246  07B7                     u315:
  1247  07B7  1003               	clrc
  1248  07B8  0DF7               	rlf	___awdiv@quotient,f
  1249  07B9  0DF8               	rlf	___awdiv@quotient+1,f
  1250  07BA  3EFF               	addlw	-1
  1251  07BB  1D03               	skipz
  1252  07BC  2FB7               	goto	u315
  1253  07BD  0871               	movf	___awdiv@divisor+1,w
  1254  07BE  0273               	subwf	___awdiv@dividend+1,w
  1255  07BF  1D03               	skipz
  1256  07C0  2FC3               	goto	u325
  1257  07C1  0870               	movf	___awdiv@divisor,w
  1258  07C2  0272               	subwf	___awdiv@dividend,w
  1259  07C3                     u325:
  1260  07C3  1C03               	skipc
  1261  07C4  2FC6               	goto	u321
  1262  07C5  2FC7               	goto	u320
  1263  07C6                     u321:
  1264  07C6  2FCE               	goto	l852
  1265  07C7                     u320:
  1266  07C7                     l848:
  1267  07C7  0870               	movf	___awdiv@divisor,w
  1268  07C8  02F2               	subwf	___awdiv@dividend,f
  1269  07C9  0871               	movf	___awdiv@divisor+1,w
  1270  07CA  1C03               	skipc
  1271  07CB  03F3               	decf	___awdiv@dividend+1,f
  1272  07CC  02F3               	subwf	___awdiv@dividend+1,f
  1273  07CD                     l850:
  1274  07CD  1477               	bsf	___awdiv@quotient,0
  1275  07CE                     l852:
  1276  07CE  3001               	movlw	1
  1277  07CF                     u335:
  1278  07CF  1003               	clrc
  1279  07D0  0CF1               	rrf	___awdiv@divisor+1,f
  1280  07D1  0CF0               	rrf	___awdiv@divisor,f
  1281  07D2  3EFF               	addlw	-1
  1282  07D3  1D03               	skipz
  1283  07D4  2FCF               	goto	u335
  1284  07D5                     l854:
  1285  07D5  3001               	movlw	1
  1286  07D6  02F5               	subwf	___awdiv@counter,f
  1287  07D7  1D03               	btfss	3,2
  1288  07D8  2FDA               	goto	u341
  1289  07D9  2FDB               	goto	u340
  1290  07DA                     u341:
  1291  07DA  2FB6               	goto	l846
  1292  07DB                     u340:
  1293  07DB                     l856:
  1294  07DB  0876               	movf	___awdiv@sign,w
  1295  07DC  1903               	btfsc	3,2
  1296  07DD  2FDF               	goto	u351
  1297  07DE  2FE0               	goto	u350
  1298  07DF                     u351:
  1299  07DF  2FE5               	goto	l860
  1300  07E0                     u350:
  1301  07E0                     l858:
  1302  07E0  09F7               	comf	___awdiv@quotient,f
  1303  07E1  09F8               	comf	___awdiv@quotient+1,f
  1304  07E2  0AF7               	incf	___awdiv@quotient,f
  1305  07E3  1903               	skipnz
  1306  07E4  0AF8               	incf	___awdiv@quotient+1,f
  1307  07E5                     l860:
  1308  07E5  0878               	movf	___awdiv@quotient+1,w
  1309  07E6  00F1               	movwf	?___awdiv+1
  1310  07E7  0877               	movf	___awdiv@quotient,w
  1311  07E8  00F0               	movwf	?___awdiv
  1312  07E9                     l309:
  1313  07E9  0008               	return
  1314  07EA                     __end_of___awdiv:
  1315  007E                     btemp	set	126	;btemp
  1316  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_first_button
    _main->_second_button
    _second_button->_display2
    _display2->___awdiv
    _first_button->_display1
    _display1->___awdiv

Critical Paths under _main in BANK0

    _main->_first_button
    _main->_second_button

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3040
                       _first_button
                      _second_button
 ---------------------------------------------------------------------------------
 (1) _second_button                                        5     1      4    1520
                                             13 COMMON     1     1      0
                                              0 BANK0      4     0      4
                           _display2
 ---------------------------------------------------------------------------------
 (2) _display2                                             4     2      2    1324
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _first_button                                         5     1      4    1520
                                             13 COMMON     1     1      0
                                              0 BANK0      4     0      4
                           _display1
 ---------------------------------------------------------------------------------
 (2) _display1                                             4     2      2    1324
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _first_button
     _display1
       ___awdiv
       ___awmod
   _second_button
     _display2
       ___awdiv
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 17 15:11:15 2023

                      _i 0036                        _j 0034                        pc 0002  
                     l61 061F                       l70 0729                       l55 06DC  
                     l67 0648             ___awdiv@sign 0076                       _cc 0020  
                     fsr 0004                      l322 0782                      l309 07E9  
                    l820 0783                      l830 0793                      l822 0784  
                    l910 06B9                      l902 0690                      l840 07A7  
                    l832 0798                      l824 0788                      l912 06BA  
                    l904 0696                      l920 06E3                      l850 07CD  
                    l842 07AE                      l834 079C                      l826 078D  
                    l914 06BB                      l906 06AD                      l930 0708  
                    l922 06FA                      l860 07E5                      l852 07CE  
                    l844 07B2                      l836 079E                      l828 078F  
                    l916 06BC                      l908 06B6                      l940 0611  
                    l932 0709                      l924 0703                      l854 07D5  
                    l846 07B6                      l838 07A4                      l870 0734  
                    l934 05F7                      l926 0706                      l918 06DD  
                    l942 0620                      l950 0649                      l848 07C7  
                    l856 07DB                      l880 0748                      l872 0736  
                    l864 072A                      l936 05FE                      l928 0707  
                    l944 0627                      l960 0659                      l952 064D  
                    l858 07E0                      l890 0767                      l882 074F  
                    l874 073A                      l866 072B                      l938 0609  
                    l946 0632                      l970 066A                      l962 065C  
                    l954 0650                      l892 076E                      l884 0753  
                    l876 073F                      l868 072F                      l948 063A  
                    l972 0676                      l964 065F                      l956 0653  
                    l886 0757                      l878 0745                      l894 0774  
                    l974 067C                      l966 0660                      l958 0656  
                    l896 0779                      l888 0761                      l976 0680  
                    l968 0666                      l898 077E                      _RA0 0028  
                    _RA1 0029                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      u300 07B6  
                    u301 07B5                      u320 07C7                      u400 0757  
                    u321 07C6                      u401 0756                      u410 0761  
                    u315 07B7                      u411 0760                      u340 07DB  
                    u260 0788                      u500 0680                      u341 07DA  
                    u325 07C3                      u261 0787                      u501 067F  
                    u350 07E0                      u270 0793                      u430 0774  
                    u351 07DF                      u335 07CF                      u271 0792  
                    u431 0773                      u415 075D                      u280 07A4  
                    u440 0779                      u360 072F                      u281 07A3  
                    u441 0778                      u425 0768                      u361 072E  
                    u370 073A                      u450 061F                      u371 0739  
                    u451 061E                      u380 0745                      u460 0648  
                    u381 0744                      u517 06FE                      u461 0647  
                    u470 0666                      u295 07A8                      u455 061B  
                    u527 0724                      u471 0665                      u480 066A  
                    u537 06B1                      u465 0644                      u481 0669  
                    u490 067C                      u395 0749                      u547 06D7  
                    u491 067B                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     _main 0649                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___awdiv 07EA  
        __end_of___awmod 0783                    _ANSEL 0188          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088            ?_first_button 0038    __end_of_second_button 0649  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EA             __end_of_main 0690                   ??_main 007E  
         ??_first_button 007D         ___awdiv@dividend 0072                   _ANSELH 0189  
       __end_of_display1 06DD         __end_of_display2 072A                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 05E3               __pbssBANK0 0034               __pmaintext 0649  
   __end_of_first_button 0620                ?_display1 0079                ?_display2 0079  
                ___awdiv 0783                  ___awmod 072A                  __ptext1 0620  
                __ptext2 06DD                  __ptext3 05F7                  __ptext4 0690  
                __ptext5 072A                  __ptext6 0783         ___awmod@dividend 0072  
             ??_display1 007B               ??_display2 007B     end_of_initialization 07FC  
 __size_of_second_button 0029    __size_of_first_button 0029      start_initialization 07EA  
          first_button@a 0038            first_button@b 003A             _first_button 05F7  
          _second_button 0620               init_fetch0 05D0              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 0038           ?_second_button 0038  
      __size_of_display1 004D        __size_of_display2 004D                 ?___awdiv 0070  
               ?___awmod 0070                display1@k 0079                display2@l 0079  
        ??_second_button 007D         __size_of___awdiv 0067         __size_of___awmod 0059  
               _display1 0690                 _display2 06DD           second_button@c 0038  
         second_button@d 003A            __size_of_main 0047                 init_ram0 05D4  
