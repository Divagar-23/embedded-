

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 24 12:41:44 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  0518                     __pidataBANK0:
   217                           
   218                           ;initializer for _cc
   219  0518  3430               	retlw	48
   220  0519  3400               	retlw	0
   221  051A  3431               	retlw	49
   222  051B  3400               	retlw	0
   223  051C  3432               	retlw	50
   224  051D  3400               	retlw	0
   225  051E  3433               	retlw	51
   226  051F  3400               	retlw	0
   227  0520  3434               	retlw	52
   228  0521  3400               	retlw	0
   229  0522  3435               	retlw	53
   230  0523  3400               	retlw	0
   231  0524  3436               	retlw	54
   232  0525  3400               	retlw	0
   233  0526  3437               	retlw	55
   234  0527  3400               	retlw	0
   235  0528  3438               	retlw	56
   236  0529  3400               	retlw	0
   237  052A  3439               	retlw	57
   238  052B  3400               	retlw	0
   239  0008                     _PORTD	set	8
   240  0007                     _PORTC	set	7
   241  0006                     _PORTB	set	6
   242  003B                     _RC3	set	59
   243  0040                     _RD0	set	64
   244  0042                     _RD2	set	66
   245  0041                     _RD1	set	65
   246  003A                     _RC2	set	58
   247  0039                     _RC1	set	57
   248  0038                     _RC0	set	56
   249  0046                     _RD6	set	70
   250  0045                     _RD5	set	69
   251  0047                     _RD7	set	71
   252  0088                     _TRISD	set	136
   253  0087                     _TRISC	set	135
   254  0086                     _TRISB	set	134
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	strings
   258  0003                     __pstrings:
   259  0003                     stringtab:
   260  0003                     __stringtab:
   261  0003                     stringcode:	
   262                           ;	String table - string pointers are 1 byte each
   263                           
   264  0003                     stringdir:
   265  0003  3000               	movlw	high stringdir
   266  0004  008A               	movwf	10
   267  0005  0804               	movf	4,w
   268  0006  0A84               	incf	4,f
   269  0007  0782               	addwf	2,f
   270  0008                     __stringbase:
   271  0008  3400               	retlw	0
   272  0009                     __end_of__stringtab:
   273  0009                     STR_4:
   274  0009  3477               	retlw	119	;'w'
   275  000A  3465               	retlw	101	;'e'
   276  000B  346C               	retlw	108	;'l'
   277  000C  3463               	retlw	99	;'c'
   278  000D  346F               	retlw	111	;'o'
   279  000E  346D               	retlw	109	;'m'
   280  000F  3465               	retlw	101	;'e'
   281  0010  3474               	retlw	116	;'t'
   282  0011  346F               	retlw	111	;'o'
   283  0012  3464               	retlw	100	;'d'
   284  0013  3461               	retlw	97	;'a'
   285  0014  3472               	retlw	114	;'r'
   286  0015  346B               	retlw	107	;'k'
   287  0016  3477               	retlw	119	;'w'
   288  0017  346F               	retlw	111	;'o'
   289  0018  3472               	retlw	114	;'r'
   290  0019  346C               	retlw	108	;'l'
   291  001A  3464               	retlw	100	;'d'
   292  001B  3400               	retlw	0
   293  001C                     STR_5:
   294  001C  3477               	retlw	119	;'w'
   295  001D  3472               	retlw	114	;'r'
   296  001E  346F               	retlw	111	;'o'
   297  001F  346E               	retlw	110	;'n'
   298  0020  3467               	retlw	103	;'g'
   299  0021  3470               	retlw	112	;'p'
   300  0022  3461               	retlw	97	;'a'
   301  0023  3473               	retlw	115	;'s'
   302  0024  3473               	retlw	115	;'s'
   303  0025  3477               	retlw	119	;'w'
   304  0026  346F               	retlw	111	;'o'
   305  0027  3472               	retlw	114	;'r'
   306  0028  3464               	retlw	100	;'d'
   307  0029  3400               	retlw	0
   308  002A                     STR_2:
   309  002A  3470               	retlw	112	;'p'
   310  002B  3461               	retlw	97	;'a'
   311  002C  3473               	retlw	115	;'s'
   312  002D  3473               	retlw	115	;'s'
   313  002E  3477               	retlw	119	;'w'
   314  002F  346F               	retlw	111	;'o'
   315  0030  3472               	retlw	114	;'r'
   316  0031  3464               	retlw	100	;'d'
   317  0032  343A               	retlw	58	;':'
   318  0033  3400               	retlw	0
   319  0034                     STR_1:
   320  0034  3475               	retlw	117	;'u'
   321  0035  3473               	retlw	115	;'s'
   322  0036  3465               	retlw	101	;'e'
   323  0037  3472               	retlw	114	;'r'
   324  0038  346E               	retlw	110	;'n'
   325  0039  3461               	retlw	97	;'a'
   326  003A  346D               	retlw	109	;'m'
   327  003B  3465               	retlw	101	;'e'
   328  003C  343A               	retlw	58	;':'
   329  003D  3400               	retlw	0
   330  003E                     STR_3:
   331  003E  3469               	retlw	105	;'i'
   332  003F  346E               	retlw	110	;'n'
   333  0040  3476               	retlw	118	;'v'
   334  0041  3461               	retlw	97	;'a'
   335  0042  346C               	retlw	108	;'l'
   336  0043  3469               	retlw	105	;'i'
   337  0044  3464               	retlw	100	;'d'
   338  0045  3400               	retlw	0
   339                           
   340                           	psect	cinit
   341  07EC                     start_initialization:	
   342                           ; #config settings
   343                           
   344  07EC                     __initialization:
   345                           
   346                           ; Initialize objects allocated to BANK0
   347  07EC  1383               	bcf	3,7	;select IRP bank0
   348  07ED  304D               	movlw	low (__pdataBANK0+20)
   349  07EE  00FD               	movwf	btemp+-1
   350  07EF  3005               	movlw	high __pidataBANK0
   351  07F0  00FE               	movwf	btemp
   352  07F1  3018               	movlw	low __pidataBANK0
   353  07F2  00FF               	movwf	btemp+1
   354  07F3  3039               	movlw	low __pdataBANK0
   355  07F4  0084               	movwf	4
   356  07F5  120A  118A  2509  120A  118A  	fcall	init_ram0
   357                           
   358                           ; Clear objects allocated to BANK0
   359  07FA  01CD               	clrf	__pbssBANK0& (0+127)
   360  07FB  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   361  07FC                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  07FC                     __end_of__initialization:
   365  07FC  0183               	clrf	3
   366  07FD  120A  118A  2EFF   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	bssBANK0
   369  004D                     __pbssBANK0:
   370  004D                     _sum:
   371  004D                     	ds	2
   372                           
   373                           	psect	dataBANK0
   374  0039                     __pdataBANK0:
   375  0039                     _cc:
   376  0039                     	ds	20
   377                           
   378                           	psect	inittext
   379  0505                     init_fetch0:	
   380                           ;	Called with low address in FSR and high address in W
   381                           
   382  0505  087E               	movf	btemp,w
   383  0506  008A               	movwf	10
   384  0507  087F               	movf	btemp+1,w
   385  0508  0082               	movwf	2
   386  0509                     init_ram0:	
   387                           ;Called with:
   388                           ;	high address of idata address in btemp 
   389                           ;	low address of idata address in btemp+1 
   390                           ;	low address of data in FSR
   391                           ;	high address + 1 of data in btemp-1
   392                           
   393  0509  120A  118A  2505  120A  118A  	fcall	init_fetch0
   394  050E  0080               	movwf	0
   395  050F  0A84               	incf	4,f
   396  0510  0804               	movf	4,w
   397  0511  067D               	xorwf	btemp+-1,w
   398  0512  1903               	btfsc	3,2
   399  0513  3400               	retlw	0
   400  0514  0AFF               	incf	btemp+1,f
   401  0515  1903               	btfsc	3,2
   402  0516  0AFE               	incf	btemp,f
   403  0517  2D09               	goto	init_ram0
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:
   407  0070                     ?_pulse:
   408  0070                     ??_pulse:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_function:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_firstrow:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_firstrow:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_secondrow:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_secondrow:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_thirdrow:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_thirdrow:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_keypad:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?___wmul:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ___wmul@multiplier:	
   442                           ; 2 bytes @ 0x0
   443                           
   444                           
   445                           ; 2 bytes @ 0x0
   446  0070                     	ds	2
   447  0072                     ?_LCD:
   448  0072                     ??_function:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0072                     LCD@a:	
   452                           ; 1 bytes @ 0x2
   453                           
   454  0072                     ___wmul@multiplicand:	
   455                           ; 2 bytes @ 0x2
   456                           
   457                           
   458                           ; 2 bytes @ 0x2
   459  0072                     	ds	1
   460  0073                     function@name:
   461                           
   462                           ; 1 bytes @ 0x3
   463  0073                     	ds	1
   464  0074                     ??___wmul:
   465  0074                     LCD@b:	
   466                           ; 1 bytes @ 0x4
   467                           
   468  0074                     ___wmul@product:	
   469                           ; 2 bytes @ 0x4
   470                           
   471                           
   472                           ; 2 bytes @ 0x4
   473  0074                     	ds	2
   474  0076                     ??_LCD:
   475  0076                     ?_pad:	
   476                           ; 1 bytes @ 0x6
   477                           
   478  0076                     pad@c:	
   479                           ; 1 bytes @ 0x6
   480                           
   481                           
   482                           ; 2 bytes @ 0x6
   483  0076                     	ds	2
   484  0078                     pad@d:
   485                           
   486                           ; 2 bytes @ 0x8
   487  0078                     	ds	2
   488  007A                     pad@e:
   489                           
   490                           ; 2 bytes @ 0xA
   491  007A                     	ds	2
   492  007C                     ??_keypad:
   493  007C                     ??_main:	
   494                           ; 1 bytes @ 0xC
   495                           
   496  007C                     main@flag:	
   497                           ; 1 bytes @ 0xC
   498                           
   499                           
   500                           ; 2 bytes @ 0xC
   501  007C                     	ds	2
   502                           
   503                           	psect	cstackBANK0
   504  0020                     __pcstackBANK0:
   505  0020                     ??_pad:
   506                           
   507                           ; 1 bytes @ 0x0
   508  0020                     	ds	3
   509  0023                     pad@count:
   510                           
   511                           ; 20 bytes @ 0x3
   512  0023                     	ds	20
   513  0037                     pad@i:
   514                           
   515                           ; 2 bytes @ 0x17
   516  0037                     	ds	2
   517                           
   518                           	psect	maintext
   519  06FF                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 102 in file "atm.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  flag            2   12[COMMON] int 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : B00/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         2       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         2       0       0       0       0
   543 ;;Total ram usage:        2 bytes
   544 ;; Hardware stack levels required when called: 4
   545 ;; This function calls:
   546 ;;		_LCD
   547 ;;		_function
   548 ;;		_keypad
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           
   555                           ;psect for function _main
   556  06FF                     _main:
   557  06FF                     l990:	
   558                           ;incstack = 0
   559                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   560                           
   561                           
   562                           ;atm.c: 104:     TRISB=0x00;
   563  06FF  1683               	bsf	3,5	;RP0=1, select bank1
   564  0700  1303               	bcf	3,6	;RP1=0, select bank1
   565  0701  0186               	clrf	6	;volatile
   566                           
   567                           ;atm.c: 105:     PORTB=0x00;
   568  0702  1283               	bcf	3,5	;RP0=0, select bank0
   569  0703  1303               	bcf	3,6	;RP1=0, select bank0
   570  0704  0186               	clrf	6	;volatile
   571  0705                     l992:
   572                           
   573                           ;atm.c: 106:     TRISC=0xff;
   574  0705  30FF               	movlw	255
   575  0706  1683               	bsf	3,5	;RP0=1, select bank1
   576  0707  1303               	bcf	3,6	;RP1=0, select bank1
   577  0708  0087               	movwf	7	;volatile
   578  0709                     l994:
   579                           
   580                           ;atm.c: 107:     PORTC=0x00;
   581  0709  1283               	bcf	3,5	;RP0=0, select bank0
   582  070A  1303               	bcf	3,6	;RP1=0, select bank0
   583  070B  0187               	clrf	7	;volatile
   584  070C                     l996:
   585                           
   586                           ;atm.c: 108:     TRISD=0x00;
   587  070C  1683               	bsf	3,5	;RP0=1, select bank1
   588  070D  1303               	bcf	3,6	;RP1=0, select bank1
   589  070E  0188               	clrf	8	;volatile
   590  070F                     l998:
   591                           
   592                           ;atm.c: 109:     PORTD=0x00;
   593  070F  1283               	bcf	3,5	;RP0=0, select bank0
   594  0710  1303               	bcf	3,6	;RP1=0, select bank0
   595  0711  0188               	clrf	8	;volatile
   596  0712                     l1000:
   597                           
   598                           ;atm.c: 110:     ANSEL=0x00;
   599  0712  1683               	bsf	3,5	;RP0=1, select bank3
   600  0713  1703               	bsf	3,6	;RP1=1, select bank3
   601  0714  0188               	clrf	8	;volatile
   602  0715                     l1002:
   603                           
   604                           ;atm.c: 111:     LCD(0x38,0);
   605  0715  3038               	movlw	56
   606  0716  00F2               	movwf	LCD@a
   607  0717  3000               	movlw	0
   608  0718  00F3               	movwf	LCD@a+1
   609  0719  3000               	movlw	0
   610  071A  00F4               	movwf	LCD@b
   611  071B  00F5               	movwf	LCD@b+1
   612  071C  120A  118A  24F2  120A  118A  	fcall	_LCD
   613  0721                     l1004:
   614                           
   615                           ;atm.c: 112:     LCD(0x0e,0);
   616  0721  300E               	movlw	14
   617  0722  00F2               	movwf	LCD@a
   618  0723  3000               	movlw	0
   619  0724  00F3               	movwf	LCD@a+1
   620  0725  3000               	movlw	0
   621  0726  00F4               	movwf	LCD@b
   622  0727  00F5               	movwf	LCD@b+1
   623  0728  120A  118A  24F2  120A  118A  	fcall	_LCD
   624  072D                     l1006:
   625                           
   626                           ;atm.c: 113:     int flag=0;
   627  072D  01FC               	clrf	main@flag
   628  072E  01FD               	clrf	main@flag+1
   629  072F                     l1008:
   630                           
   631                           ;atm.c: 115:     {;atm.c: 116:         if(flag==0)
   632  072F  087C               	movf	main@flag,w
   633  0730  047D               	iorwf	main@flag+1,w
   634  0731  1D03               	btfss	3,2
   635  0732  2F34               	goto	u621
   636  0733  2F35               	goto	u620
   637  0734                     u621:
   638  0734  2F50               	goto	l1020
   639  0735                     u620:
   640  0735                     l1010:
   641                           
   642                           ;atm.c: 117:         {;atm.c: 118:             LCD(0x80,0);
   643  0735  3080               	movlw	128
   644  0736  00F2               	movwf	LCD@a
   645  0737  3000               	movlw	0
   646  0738  00F3               	movwf	LCD@a+1
   647  0739  3000               	movlw	0
   648  073A  00F4               	movwf	LCD@b
   649  073B  00F5               	movwf	LCD@b+1
   650  073C  120A  118A  24F2  120A  118A  	fcall	_LCD
   651  0741                     l1012:
   652                           
   653                           ;atm.c: 119:             function("username:");
   654  0741  302C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   655  0742  120A  118A  256A  120A  118A  	fcall	_function
   656  0747                     l1014:
   657                           
   658                           ;atm.c: 120:             flag=1;
   659  0747  3001               	movlw	1
   660  0748  00FC               	movwf	main@flag
   661  0749  3000               	movlw	0
   662  074A  00FD               	movwf	main@flag+1
   663  074B                     l1016:
   664                           
   665                           ;atm.c: 121:             keypad();
   666  074B  120A  118A  2590  120A  118A  	fcall	_keypad
   667  0750                     l1018:	
   668                           ;atm.c: 122:             while(flag==0);
   669                           
   670  0750                     l1020:
   671                           
   672                           ;atm.c: 124:         keypad();
   673  0750  120A  118A  2590  120A  118A  	fcall	_keypad
   674  0755                     l1022:
   675                           
   676                           ;atm.c: 125:            if(RC3==1)
   677  0755  1283               	bcf	3,5	;RP0=0, select bank0
   678  0756  1303               	bcf	3,6	;RP1=0, select bank0
   679  0757  1D87               	btfss	7,3	;volatile
   680  0758  2F5A               	goto	u631
   681  0759  2F5B               	goto	u630
   682  075A                     u631:
   683  075A  2F9C               	goto	l1038
   684  075B                     u630:
   685  075B                     l1024:
   686                           
   687                           ;atm.c: 126:            {;atm.c: 127:               if(sum==123)
   688  075B  307B               	movlw	123
   689  075C  064D               	xorwf	_sum,w
   690  075D  044E               	iorwf	_sum+1,w
   691  075E  1D03               	btfss	3,2
   692  075F  2F61               	goto	u641
   693  0760  2F62               	goto	u640
   694  0761                     u641:
   695  0761  2F7E               	goto	l1034
   696  0762                     u640:
   697  0762                     l1026:
   698                           
   699                           ;atm.c: 128:                {;atm.c: 129:                   LCD(0xc2,0);
   700  0762  30C2               	movlw	194
   701  0763  00F2               	movwf	LCD@a
   702  0764  3000               	movlw	0
   703  0765  00F3               	movwf	LCD@a+1
   704  0766  3000               	movlw	0
   705  0767  00F4               	movwf	LCD@b
   706  0768  00F5               	movwf	LCD@b+1
   707  0769  120A  118A  24F2  120A  118A  	fcall	_LCD
   708  076E                     l1028:
   709                           
   710                           ;atm.c: 130:             function("password:");
   711  076E  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   712  076F  120A  118A  256A  120A  118A  	fcall	_function
   713  0774                     l1030:
   714                           
   715                           ;atm.c: 131:             sum=0;
   716  0774  1283               	bcf	3,5	;RP0=0, select bank0
   717  0775  1303               	bcf	3,6	;RP1=0, select bank0
   718  0776  01CD               	clrf	_sum
   719  0777  01CE               	clrf	_sum+1
   720  0778                     l1032:
   721                           
   722                           ;atm.c: 132:             keypad();
   723  0778  120A  118A  2590  120A  118A  	fcall	_keypad
   724                           
   725                           ;atm.c: 133:               }
   726  077D  2F9C               	goto	l1038
   727  077E                     l1034:
   728                           
   729                           ;atm.c: 135:               {;atm.c: 136:                   LCD(0x01,0);
   730  077E  3001               	movlw	1
   731  077F  00F2               	movwf	LCD@a
   732  0780  3000               	movlw	0
   733  0781  00F3               	movwf	LCD@a+1
   734  0782  3000               	movlw	0
   735  0783  00F4               	movwf	LCD@b
   736  0784  00F5               	movwf	LCD@b+1
   737  0785  120A  118A  24F2  120A  118A  	fcall	_LCD
   738                           
   739                           ;atm.c: 137:                   LCD(0xc3,0);
   740  078A  30C3               	movlw	195
   741  078B  00F2               	movwf	LCD@a
   742  078C  3000               	movlw	0
   743  078D  00F3               	movwf	LCD@a+1
   744  078E  3000               	movlw	0
   745  078F  00F4               	movwf	LCD@b
   746  0790  00F5               	movwf	LCD@b+1
   747  0791  120A  118A  24F2  120A  118A  	fcall	_LCD
   748  0796                     l1036:
   749                           
   750                           ;atm.c: 138:                   function("invalid");
   751  0796  3036               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   752  0797  120A  118A  256A  120A  118A  	fcall	_function
   753  079C                     l1038:
   754                           
   755                           ;atm.c: 141:         if (RC3==1)
   756  079C  1283               	bcf	3,5	;RP0=0, select bank0
   757  079D  1303               	bcf	3,6	;RP1=0, select bank0
   758  079E  1D87               	btfss	7,3	;volatile
   759  079F  2FA1               	goto	u651
   760  07A0  2FA2               	goto	u650
   761  07A1                     u651:
   762  07A1  2F2F               	goto	l1008
   763  07A2                     u650:
   764  07A2                     l1040:
   765                           
   766                           ;atm.c: 142:             {;atm.c: 143:             if(sum==456)
   767  07A2  30C8               	movlw	200
   768  07A3  064D               	xorwf	_sum,w
   769  07A4  1D03               	skipz
   770  07A5  2FAA               	goto	u661
   771  07A6  034E               	decf	_sum+1,w
   772  07A7  1D03               	btfss	3,2
   773  07A8  2FAA               	goto	u661
   774  07A9  2FAB               	goto	u660
   775  07AA                     u661:
   776  07AA  2FCA               	goto	l1046
   777  07AB                     u660:
   778  07AB                     l1042:
   779                           
   780                           ;atm.c: 144:             {;atm.c: 145:                 LCD(0xc0,0);
   781  07AB  30C0               	movlw	192
   782  07AC  00F2               	movwf	LCD@a
   783  07AD  3000               	movlw	0
   784  07AE  00F3               	movwf	LCD@a+1
   785  07AF  3000               	movlw	0
   786  07B0  00F4               	movwf	LCD@b
   787  07B1  00F5               	movwf	LCD@b+1
   788  07B2  120A  118A  24F2  120A  118A  	fcall	_LCD
   789                           
   790                           ;atm.c: 146:                 LCD(0x01,0);
   791  07B7  3001               	movlw	1
   792  07B8  00F2               	movwf	LCD@a
   793  07B9  3000               	movlw	0
   794  07BA  00F3               	movwf	LCD@a+1
   795  07BB  3000               	movlw	0
   796  07BC  00F4               	movwf	LCD@b
   797  07BD  00F5               	movwf	LCD@b+1
   798  07BE  120A  118A  24F2  120A  118A  	fcall	_LCD
   799  07C3                     l1044:
   800                           
   801                           ;atm.c: 147:                 function("welcometodarkworld");
   802  07C3  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   803  07C4  120A  118A  256A  120A  118A  	fcall	_function
   804                           
   805                           ;atm.c: 148:             }
   806  07C9  2F2F               	goto	l1008
   807  07CA                     l1046:
   808                           
   809                           ;atm.c: 150:               {;atm.c: 151:                   LCD(0x01,0);
   810  07CA  3001               	movlw	1
   811  07CB  00F2               	movwf	LCD@a
   812  07CC  3000               	movlw	0
   813  07CD  00F3               	movwf	LCD@a+1
   814  07CE  3000               	movlw	0
   815  07CF  00F4               	movwf	LCD@b
   816  07D0  00F5               	movwf	LCD@b+1
   817  07D1  120A  118A  24F2  120A  118A  	fcall	_LCD
   818                           
   819                           ;atm.c: 152:                   LCD(0xc5,0);
   820  07D6  30C5               	movlw	197
   821  07D7  00F2               	movwf	LCD@a
   822  07D8  3000               	movlw	0
   823  07D9  00F3               	movwf	LCD@a+1
   824  07DA  3000               	movlw	0
   825  07DB  00F4               	movwf	LCD@b
   826  07DC  00F5               	movwf	LCD@b+1
   827  07DD  120A  118A  24F2  120A  118A  	fcall	_LCD
   828  07E2                     l1048:
   829                           
   830                           ;atm.c: 153:                   function("wrongpassword");
   831  07E2  3014               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   832  07E3  120A  118A  256A  120A  118A  	fcall	_function
   833  07E8  2F2F               	goto	l1008
   834  07E9  120A  118A  2800   	ljmp	start
   835  07EC                     __end_of_main:
   836                           
   837                           	psect	text1
   838  0590                     __ptext1:	
   839 ;; *************** function _keypad *****************
   840 ;; Defined at:
   841 ;;		line 81 in file "atm.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 3
   862 ;; This function calls:
   863 ;;		_firstrow
   864 ;;		_pad
   865 ;;		_secondrow
   866 ;;		_thirdrow
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _keypad
   874  0590                     _keypad:
   875  0590                     l948:	
   876                           ;incstack = 0
   877                           ; Regs used in _keypad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   878                           
   879                           
   880                           ;atm.c: 83:     firstrow();
   881  0590  120A  118A  24E0  120A  118A  	fcall	_firstrow
   882  0595                     l950:
   883                           
   884                           ;atm.c: 84:       if(RC0==1||RC1==1||RC2==1)
   885  0595  1283               	bcf	3,5	;RP0=0, select bank0
   886  0596  1303               	bcf	3,6	;RP1=0, select bank0
   887  0597  1807               	btfsc	7,0	;volatile
   888  0598  2D9A               	goto	u441
   889  0599  2D9B               	goto	u440
   890  059A                     u441:
   891  059A  2DA3               	goto	l956
   892  059B                     u440:
   893  059B                     l952:
   894  059B  1887               	btfsc	7,1	;volatile
   895  059C  2D9E               	goto	u451
   896  059D  2D9F               	goto	u450
   897  059E                     u451:
   898  059E  2DA3               	goto	l956
   899  059F                     u450:
   900  059F                     l954:
   901  059F  1D07               	btfss	7,2	;volatile
   902  05A0  2DA2               	goto	u461
   903  05A1  2DA3               	goto	u460
   904  05A2                     u461:
   905  05A2  2DC2               	goto	l962
   906  05A3                     u460:
   907  05A3                     l956:
   908                           
   909                           ;atm.c: 85:       {;atm.c: 86:           pad(1,4,7);
   910  05A3  3001               	movlw	1
   911  05A4  00F6               	movwf	pad@c
   912  05A5  3000               	movlw	0
   913  05A6  00F7               	movwf	pad@c+1
   914  05A7  3004               	movlw	4
   915  05A8  00F8               	movwf	pad@d
   916  05A9  3000               	movlw	0
   917  05AA  00F9               	movwf	pad@d+1
   918  05AB  3007               	movlw	7
   919  05AC  00FA               	movwf	pad@e
   920  05AD  3000               	movlw	0
   921  05AE  00FB               	movwf	pad@e+1
   922  05AF  120A  118A  2627  120A  118A  	fcall	_pad
   923  05B4                     l73:	
   924                           ;atm.c: 87:           while(RC0==1||RC1==1||RC2==1);
   925                           
   926  05B4  1283               	bcf	3,5	;RP0=0, select bank0
   927  05B5  1303               	bcf	3,6	;RP1=0, select bank0
   928  05B6  1807               	btfsc	7,0	;volatile
   929  05B7  2DB9               	goto	u471
   930  05B8  2DBA               	goto	u470
   931  05B9                     u471:
   932  05B9  2DB4               	goto	l73
   933  05BA                     u470:
   934  05BA                     l958:
   935  05BA  1887               	btfsc	7,1	;volatile
   936  05BB  2DBD               	goto	u481
   937  05BC  2DBE               	goto	u480
   938  05BD                     u481:
   939  05BD  2DB4               	goto	l73
   940  05BE                     u480:
   941  05BE                     l960:
   942  05BE  1907               	btfsc	7,2	;volatile
   943  05BF  2DC1               	goto	u491
   944  05C0  2DC2               	goto	u490
   945  05C1                     u491:
   946  05C1  2DB4               	goto	l73
   947  05C2                     u490:
   948  05C2                     l962:
   949                           
   950                           ;atm.c: 89:     secondrow();
   951  05C2  120A  118A  24E6  120A  118A  	fcall	_secondrow
   952  05C7                     l964:
   953                           
   954                           ;atm.c: 90:       if(RC0==1||RC1==1||RC2==1)
   955  05C7  1283               	bcf	3,5	;RP0=0, select bank0
   956  05C8  1303               	bcf	3,6	;RP1=0, select bank0
   957  05C9  1807               	btfsc	7,0	;volatile
   958  05CA  2DCC               	goto	u501
   959  05CB  2DCD               	goto	u500
   960  05CC                     u501:
   961  05CC  2DD5               	goto	l970
   962  05CD                     u500:
   963  05CD                     l966:
   964  05CD  1887               	btfsc	7,1	;volatile
   965  05CE  2DD0               	goto	u511
   966  05CF  2DD1               	goto	u510
   967  05D0                     u511:
   968  05D0  2DD5               	goto	l970
   969  05D1                     u510:
   970  05D1                     l968:
   971  05D1  1D07               	btfss	7,2	;volatile
   972  05D2  2DD4               	goto	u521
   973  05D3  2DD5               	goto	u520
   974  05D4                     u521:
   975  05D4  2DF4               	goto	l976
   976  05D5                     u520:
   977  05D5                     l970:
   978                           
   979                           ;atm.c: 91:       {;atm.c: 92:           pad(2,5,8);
   980  05D5  3002               	movlw	2
   981  05D6  00F6               	movwf	pad@c
   982  05D7  3000               	movlw	0
   983  05D8  00F7               	movwf	pad@c+1
   984  05D9  3005               	movlw	5
   985  05DA  00F8               	movwf	pad@d
   986  05DB  3000               	movlw	0
   987  05DC  00F9               	movwf	pad@d+1
   988  05DD  3008               	movlw	8
   989  05DE  00FA               	movwf	pad@e
   990  05DF  3000               	movlw	0
   991  05E0  00FB               	movwf	pad@e+1
   992  05E1  120A  118A  2627  120A  118A  	fcall	_pad
   993  05E6                     l79:	
   994                           ;atm.c: 93:           while(RC0==1||RC1==1||RC2==1);
   995                           
   996  05E6  1283               	bcf	3,5	;RP0=0, select bank0
   997  05E7  1303               	bcf	3,6	;RP1=0, select bank0
   998  05E8  1807               	btfsc	7,0	;volatile
   999  05E9  2DEB               	goto	u531
  1000  05EA  2DEC               	goto	u530
  1001  05EB                     u531:
  1002  05EB  2DE6               	goto	l79
  1003  05EC                     u530:
  1004  05EC                     l972:
  1005  05EC  1887               	btfsc	7,1	;volatile
  1006  05ED  2DEF               	goto	u541
  1007  05EE  2DF0               	goto	u540
  1008  05EF                     u541:
  1009  05EF  2DE6               	goto	l79
  1010  05F0                     u540:
  1011  05F0                     l974:
  1012  05F0  1907               	btfsc	7,2	;volatile
  1013  05F1  2DF3               	goto	u551
  1014  05F2  2DF4               	goto	u550
  1015  05F3                     u551:
  1016  05F3  2DE6               	goto	l79
  1017  05F4                     u550:
  1018  05F4                     l976:
  1019                           
  1020                           ;atm.c: 95:       thirdrow ();
  1021  05F4  120A  118A  24EC  120A  118A  	fcall	_thirdrow
  1022  05F9                     l978:
  1023                           
  1024                           ;atm.c: 96:        if(RC0==1||RC1==1||RC2==1)
  1025  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1026  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1027  05FB  1807               	btfsc	7,0	;volatile
  1028  05FC  2DFE               	goto	u561
  1029  05FD  2DFF               	goto	u560
  1030  05FE                     u561:
  1031  05FE  2E07               	goto	l984
  1032  05FF                     u560:
  1033  05FF                     l980:
  1034  05FF  1887               	btfsc	7,1	;volatile
  1035  0600  2E02               	goto	u571
  1036  0601  2E03               	goto	u570
  1037  0602                     u571:
  1038  0602  2E07               	goto	l984
  1039  0603                     u570:
  1040  0603                     l982:
  1041  0603  1D07               	btfss	7,2	;volatile
  1042  0604  2E06               	goto	u581
  1043  0605  2E07               	goto	u580
  1044  0606                     u581:
  1045  0606  2E26               	goto	l88
  1046  0607                     u580:
  1047  0607                     l984:
  1048                           
  1049                           ;atm.c: 97:       {;atm.c: 98:           pad(3,6,9);
  1050  0607  3003               	movlw	3
  1051  0608  00F6               	movwf	pad@c
  1052  0609  3000               	movlw	0
  1053  060A  00F7               	movwf	pad@c+1
  1054  060B  3006               	movlw	6
  1055  060C  00F8               	movwf	pad@d
  1056  060D  3000               	movlw	0
  1057  060E  00F9               	movwf	pad@d+1
  1058  060F  3009               	movlw	9
  1059  0610  00FA               	movwf	pad@e
  1060  0611  3000               	movlw	0
  1061  0612  00FB               	movwf	pad@e+1
  1062  0613  120A  118A  2627  120A  118A  	fcall	_pad
  1063  0618                     l85:	
  1064                           ;atm.c: 99:           while(RC0==1||RC1==1||RC2==1);
  1065                           
  1066  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1068  061A  1807               	btfsc	7,0	;volatile
  1069  061B  2E1D               	goto	u591
  1070  061C  2E1E               	goto	u590
  1071  061D                     u591:
  1072  061D  2E18               	goto	l85
  1073  061E                     u590:
  1074  061E                     l986:
  1075  061E  1887               	btfsc	7,1	;volatile
  1076  061F  2E21               	goto	u601
  1077  0620  2E22               	goto	u600
  1078  0621                     u601:
  1079  0621  2E18               	goto	l85
  1080  0622                     u600:
  1081  0622                     l988:
  1082  0622  1907               	btfsc	7,2	;volatile
  1083  0623  2E25               	goto	u611
  1084  0624  2E26               	goto	u610
  1085  0625                     u611:
  1086  0625  2E18               	goto	l85
  1087  0626                     u610:
  1088  0626                     l88:
  1089  0626  0008               	return
  1090  0627                     __end_of_keypad:
  1091                           
  1092                           	psect	text2
  1093  04EC                     __ptext2:	
  1094 ;; *************** function _thirdrow *****************
  1095 ;; Defined at:
  1096 ;;		line 75 in file "atm.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		None
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_keypad
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _thirdrow
  1125  04EC                     _thirdrow:
  1126  04EC                     l936:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _thirdrow: []
  1129                           
  1130                           
  1131                           ;atm.c: 77:     RD1=0;
  1132  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1133  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1134  04EE  1088               	bcf	8,1	;volatile
  1135                           
  1136                           ;atm.c: 78:     RD0=0;
  1137  04EF  1008               	bcf	8,0	;volatile
  1138                           
  1139                           ;atm.c: 79:     RD2=1;
  1140  04F0  1508               	bsf	8,2	;volatile
  1141  04F1                     l67:
  1142  04F1  0008               	return
  1143  04F2                     __end_of_thirdrow:
  1144                           
  1145                           	psect	text3
  1146  04E6                     __ptext3:	
  1147 ;; *************** function _secondrow *****************
  1148 ;; Defined at:
  1149 ;;		line 69 in file "atm.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		None
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_keypad
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _secondrow
  1178  04E6                     _secondrow:
  1179  04E6                     l934:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _secondrow: []
  1182                           
  1183                           
  1184                           ;atm.c: 71:     RD0=0;
  1185  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1186  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1187  04E8  1008               	bcf	8,0	;volatile
  1188                           
  1189                           ;atm.c: 72:     RD2=0;
  1190  04E9  1108               	bcf	8,2	;volatile
  1191                           
  1192                           ;atm.c: 73:     RD1=1;
  1193  04EA  1488               	bsf	8,1	;volatile
  1194  04EB                     l64:
  1195  04EB  0008               	return
  1196  04EC                     __end_of_secondrow:
  1197                           
  1198                           	psect	text4
  1199  0627                     __ptext4:	
  1200 ;; *************** function _pad *****************
  1201 ;; Defined at:
  1202 ;;		line 38 in file "atm.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  c               2    6[COMMON] int 
  1205 ;;  d               2    8[COMMON] int 
  1206 ;;  e               2   10[COMMON] int 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  count          20    3[BANK0 ] int [10]
  1209 ;;  i               2   23[BANK0 ] int 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         6       0       0       0       0
  1220 ;;      Locals:         0      22       0       0       0
  1221 ;;      Temps:          0       3       0       0       0
  1222 ;;      Totals:         6      25       0       0       0
  1223 ;;Total ram usage:       31 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 2
  1226 ;; This function calls:
  1227 ;;		_LCD
  1228 ;;		___wmul
  1229 ;; This function is called by:
  1230 ;;		_keypad
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _pad
  1236  0627                     _pad:
  1237  0627                     l900:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1240                           
  1241                           
  1242                           ;atm.c: 38: void pad(int c,int d,int e);atm.c: 39: {;atm.c: 40:      int count[10];int i
      +                          =0;
  1243  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0629  01B7               	clrf	pad@i
  1246  062A  01B8               	clrf	pad@i+1
  1247  062B                     l902:
  1248                           
  1249                           ;atm.c: 41:     if(RC0==1)
  1250  062B  1C07               	btfss	7,0	;volatile
  1251  062C  2E2E               	goto	u401
  1252  062D  2E2F               	goto	u400
  1253  062E                     u401:
  1254  062E  2E66               	goto	l912
  1255  062F                     u400:
  1256  062F                     l904:
  1257                           
  1258                           ;atm.c: 42:     {;atm.c: 43:         LCD (cc[c],1);
  1259  062F  0876               	movf	pad@c,w
  1260  0630  00A0               	movwf	??_pad
  1261  0631  0720               	addwf	??_pad,w
  1262  0632  3E39               	addlw	(low (_cc| 0))& (0+255)
  1263  0633  0084               	movwf	4
  1264  0634  1383               	bcf	3,7	;select IRP bank0
  1265  0635  0800               	movf	0,w
  1266  0636  00F2               	movwf	LCD@a
  1267  0637  0A84               	incf	4,f
  1268  0638  0800               	movf	0,w
  1269  0639  00F3               	movwf	LCD@a+1
  1270  063A  3001               	movlw	1
  1271  063B  00F4               	movwf	LCD@b
  1272  063C  3000               	movlw	0
  1273  063D  00F5               	movwf	LCD@b+1
  1274  063E  120A  118A  24F2  120A  118A  	fcall	_LCD
  1275  0643                     l906:
  1276                           
  1277                           ;atm.c: 44:         count[i]=c;
  1278  0643  0877               	movf	pad@c+1,w
  1279  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0646  00A4               	movwf	pad@count+1
  1282  0647  0876               	movf	pad@c,w
  1283  0648  00A3               	movwf	pad@count
  1284  0649                     l908:
  1285                           
  1286                           ;atm.c: 45:         sum=(sum*10)+count[i];
  1287  0649  084E               	movf	_sum+1,w
  1288  064A  00F1               	movwf	___wmul@multiplier+1
  1289  064B  084D               	movf	_sum,w
  1290  064C  00F0               	movwf	___wmul@multiplier
  1291  064D  300A               	movlw	10
  1292  064E  00F2               	movwf	___wmul@multiplicand
  1293  064F  3000               	movlw	0
  1294  0650  00F3               	movwf	___wmul@multiplicand+1
  1295  0651  120A  118A  2545  120A  118A  	fcall	___wmul
  1296  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0658  0823               	movf	pad@count,w
  1299  0659  0770               	addwf	?___wmul,w
  1300  065A  00CD               	movwf	_sum
  1301  065B  0824               	movf	pad@count+1,w
  1302  065C  1803               	skipnc
  1303  065D  0A24               	incf	pad@count+1,w
  1304  065E  0771               	addwf	?___wmul+1,w
  1305  065F  00CE               	movwf	_sum+1
  1306  0660                     l910:
  1307                           
  1308                           ;atm.c: 46:         i++;
  1309  0660  3001               	movlw	1
  1310  0661  07B7               	addwf	pad@i,f
  1311  0662  1803               	skipnc
  1312  0663  0AB8               	incf	pad@i+1,f
  1313  0664  3000               	movlw	0
  1314  0665  07B8               	addwf	pad@i+1,f
  1315  0666                     l912:
  1316                           
  1317                           ;atm.c: 48:     if(RC1==1)
  1318  0666  1C87               	btfss	7,1	;volatile
  1319  0667  2E69               	goto	u411
  1320  0668  2E6A               	goto	u410
  1321  0669                     u411:
  1322  0669  2EB2               	goto	l922
  1323  066A                     u410:
  1324  066A                     l914:
  1325                           
  1326                           ;atm.c: 49:     {;atm.c: 50:         LCD (cc[d],1);
  1327  066A  0878               	movf	pad@d,w
  1328  066B  00A0               	movwf	??_pad
  1329  066C  0720               	addwf	??_pad,w
  1330  066D  3E39               	addlw	(low (_cc| 0))& (0+255)
  1331  066E  0084               	movwf	4
  1332  066F  1383               	bcf	3,7	;select IRP bank0
  1333  0670  0800               	movf	0,w
  1334  0671  00F2               	movwf	LCD@a
  1335  0672  0A84               	incf	4,f
  1336  0673  0800               	movf	0,w
  1337  0674  00F3               	movwf	LCD@a+1
  1338  0675  3001               	movlw	1
  1339  0676  00F4               	movwf	LCD@b
  1340  0677  3000               	movlw	0
  1341  0678  00F5               	movwf	LCD@b+1
  1342  0679  120A  118A  24F2  120A  118A  	fcall	_LCD
  1343  067E                     l916:
  1344                           
  1345                           ;atm.c: 51:         count[i]=d;
  1346  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1347  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0680  0837               	movf	pad@i,w
  1349  0681  00A0               	movwf	??_pad
  1350  0682  0720               	addwf	??_pad,w
  1351  0683  3E23               	addlw	(low (pad@count| 0))& (0+255)
  1352  0684  0084               	movwf	4
  1353  0685  0878               	movf	pad@d,w
  1354  0686  1383               	bcf	3,7	;select IRP bank0
  1355  0687  0080               	movwf	0
  1356  0688  0A84               	incf	4,f
  1357  0689  0879               	movf	pad@d+1,w
  1358  068A  0080               	movwf	0
  1359  068B                     l918:
  1360                           
  1361                           ;atm.c: 52:         sum=(sum*10)+count[i];
  1362  068B  0837               	movf	pad@i,w
  1363  068C  00A0               	movwf	??_pad
  1364  068D  0720               	addwf	??_pad,w
  1365  068E  3E23               	addlw	(low (pad@count| 0))& (0+255)
  1366  068F  0084               	movwf	4
  1367  0690  0800               	movf	0,w
  1368  0691  00A1               	movwf	??_pad+1
  1369  0692  0A84               	incf	4,f
  1370  0693  0800               	movf	0,w
  1371  0694  00A2               	movwf	??_pad+2
  1372  0695  084E               	movf	_sum+1,w
  1373  0696  00F1               	movwf	___wmul@multiplier+1
  1374  0697  084D               	movf	_sum,w
  1375  0698  00F0               	movwf	___wmul@multiplier
  1376  0699  300A               	movlw	10
  1377  069A  00F2               	movwf	___wmul@multiplicand
  1378  069B  3000               	movlw	0
  1379  069C  00F3               	movwf	___wmul@multiplicand+1
  1380  069D  120A  118A  2545  120A  118A  	fcall	___wmul
  1381  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1382  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1383  06A4  0821               	movf	??_pad+1,w
  1384  06A5  0770               	addwf	?___wmul,w
  1385  06A6  00CD               	movwf	_sum
  1386  06A7  0822               	movf	??_pad+2,w
  1387  06A8  1803               	skipnc
  1388  06A9  0A22               	incf	??_pad+2,w
  1389  06AA  0771               	addwf	?___wmul+1,w
  1390  06AB  00CE               	movwf	_sum+1
  1391  06AC                     l920:
  1392                           
  1393                           ;atm.c: 53:         i++;
  1394  06AC  3001               	movlw	1
  1395  06AD  07B7               	addwf	pad@i,f
  1396  06AE  1803               	skipnc
  1397  06AF  0AB8               	incf	pad@i+1,f
  1398  06B0  3000               	movlw	0
  1399  06B1  07B8               	addwf	pad@i+1,f
  1400  06B2                     l922:
  1401                           
  1402                           ;atm.c: 55:     if(RC2==1)
  1403  06B2  1D07               	btfss	7,2	;volatile
  1404  06B3  2EB5               	goto	u421
  1405  06B4  2EB6               	goto	u420
  1406  06B5                     u421:
  1407  06B5  2EFE               	goto	l58
  1408  06B6                     u420:
  1409  06B6                     l924:
  1410                           
  1411                           ;atm.c: 56:     {;atm.c: 57:         LCD (cc[e],1);
  1412  06B6  087A               	movf	pad@e,w
  1413  06B7  00A0               	movwf	??_pad
  1414  06B8  0720               	addwf	??_pad,w
  1415  06B9  3E39               	addlw	(low (_cc| 0))& (0+255)
  1416  06BA  0084               	movwf	4
  1417  06BB  1383               	bcf	3,7	;select IRP bank0
  1418  06BC  0800               	movf	0,w
  1419  06BD  00F2               	movwf	LCD@a
  1420  06BE  0A84               	incf	4,f
  1421  06BF  0800               	movf	0,w
  1422  06C0  00F3               	movwf	LCD@a+1
  1423  06C1  3001               	movlw	1
  1424  06C2  00F4               	movwf	LCD@b
  1425  06C3  3000               	movlw	0
  1426  06C4  00F5               	movwf	LCD@b+1
  1427  06C5  120A  118A  24F2  120A  118A  	fcall	_LCD
  1428  06CA                     l926:
  1429                           
  1430                           ;atm.c: 58:         count[i]=e;
  1431  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1432  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1433  06CC  0837               	movf	pad@i,w
  1434  06CD  00A0               	movwf	??_pad
  1435  06CE  0720               	addwf	??_pad,w
  1436  06CF  3E23               	addlw	(low (pad@count| 0))& (0+255)
  1437  06D0  0084               	movwf	4
  1438  06D1  087A               	movf	pad@e,w
  1439  06D2  1383               	bcf	3,7	;select IRP bank0
  1440  06D3  0080               	movwf	0
  1441  06D4  0A84               	incf	4,f
  1442  06D5  087B               	movf	pad@e+1,w
  1443  06D6  0080               	movwf	0
  1444  06D7                     l928:
  1445                           
  1446                           ;atm.c: 59:         sum=(sum*10)+count[i];
  1447  06D7  0837               	movf	pad@i,w
  1448  06D8  00A0               	movwf	??_pad
  1449  06D9  0720               	addwf	??_pad,w
  1450  06DA  3E23               	addlw	(low (pad@count| 0))& (0+255)
  1451  06DB  0084               	movwf	4
  1452  06DC  0800               	movf	0,w
  1453  06DD  00A1               	movwf	??_pad+1
  1454  06DE  0A84               	incf	4,f
  1455  06DF  0800               	movf	0,w
  1456  06E0  00A2               	movwf	??_pad+2
  1457  06E1  084E               	movf	_sum+1,w
  1458  06E2  00F1               	movwf	___wmul@multiplier+1
  1459  06E3  084D               	movf	_sum,w
  1460  06E4  00F0               	movwf	___wmul@multiplier
  1461  06E5  300A               	movlw	10
  1462  06E6  00F2               	movwf	___wmul@multiplicand
  1463  06E7  3000               	movlw	0
  1464  06E8  00F3               	movwf	___wmul@multiplicand+1
  1465  06E9  120A  118A  2545  120A  118A  	fcall	___wmul
  1466  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1467  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1468  06F0  0821               	movf	??_pad+1,w
  1469  06F1  0770               	addwf	?___wmul,w
  1470  06F2  00CD               	movwf	_sum
  1471  06F3  0822               	movf	??_pad+2,w
  1472  06F4  1803               	skipnc
  1473  06F5  0A22               	incf	??_pad+2,w
  1474  06F6  0771               	addwf	?___wmul+1,w
  1475  06F7  00CE               	movwf	_sum+1
  1476  06F8                     l930:
  1477                           
  1478                           ;atm.c: 60:         i++;
  1479  06F8  3001               	movlw	1
  1480  06F9  07B7               	addwf	pad@i,f
  1481  06FA  1803               	skipnc
  1482  06FB  0AB8               	incf	pad@i+1,f
  1483  06FC  3000               	movlw	0
  1484  06FD  07B8               	addwf	pad@i+1,f
  1485  06FE                     l58:
  1486  06FE  0008               	return
  1487  06FF                     __end_of_pad:
  1488                           
  1489                           	psect	text5
  1490  0545                     __ptext5:	
  1491 ;; *************** function ___wmul *****************
  1492 ;; Defined at:
  1493 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  multiplier      2    0[COMMON] unsigned int 
  1496 ;;  multiplicand    2    2[COMMON] unsigned int 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  product         2    4[COMMON] unsigned int 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  2    0[COMMON] unsigned int 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         4       0       0       0       0
  1509 ;;      Locals:         2       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         6       0       0       0       0
  1512 ;;Total ram usage:        6 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_pad
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function ___wmul
  1523  0545                     ___wmul:
  1524  0545                     l886:	
  1525                           ;incstack = 0
  1526                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1527                           
  1528  0545  01F4               	clrf	___wmul@product
  1529  0546  01F5               	clrf	___wmul@product+1
  1530  0547                     l888:
  1531  0547  1C70               	btfss	___wmul@multiplier,0
  1532  0548  2D4A               	goto	u361
  1533  0549  2D4B               	goto	u360
  1534  054A                     u361:
  1535  054A  2D51               	goto	l192
  1536  054B                     u360:
  1537  054B                     l890:
  1538  054B  0872               	movf	___wmul@multiplicand,w
  1539  054C  07F4               	addwf	___wmul@product,f
  1540  054D  1803               	skipnc
  1541  054E  0AF5               	incf	___wmul@product+1,f
  1542  054F  0873               	movf	___wmul@multiplicand+1,w
  1543  0550  07F5               	addwf	___wmul@product+1,f
  1544  0551                     l192:
  1545  0551  3001               	movlw	1
  1546  0552                     u375:
  1547  0552  1003               	clrc
  1548  0553  0DF2               	rlf	___wmul@multiplicand,f
  1549  0554  0DF3               	rlf	___wmul@multiplicand+1,f
  1550  0555  3EFF               	addlw	-1
  1551  0556  1D03               	skipz
  1552  0557  2D52               	goto	u375
  1553  0558                     l892:
  1554  0558  3001               	movlw	1
  1555  0559                     u385:
  1556  0559  1003               	clrc
  1557  055A  0CF1               	rrf	___wmul@multiplier+1,f
  1558  055B  0CF0               	rrf	___wmul@multiplier,f
  1559  055C  3EFF               	addlw	-1
  1560  055D  1D03               	skipz
  1561  055E  2D59               	goto	u385
  1562  055F                     l894:
  1563  055F  0870               	movf	___wmul@multiplier,w
  1564  0560  0471               	iorwf	___wmul@multiplier+1,w
  1565  0561  1D03               	btfss	3,2
  1566  0562  2D64               	goto	u391
  1567  0563  2D65               	goto	u390
  1568  0564                     u391:
  1569  0564  2D47               	goto	l888
  1570  0565                     u390:
  1571  0565                     l896:
  1572  0565  0875               	movf	___wmul@product+1,w
  1573  0566  00F1               	movwf	?___wmul+1
  1574  0567  0874               	movf	___wmul@product,w
  1575  0568  00F0               	movwf	?___wmul
  1576  0569                     l194:
  1577  0569  0008               	return
  1578  056A                     __end_of___wmul:
  1579                           
  1580                           	psect	text6
  1581  04F2                     __ptext6:	
  1582 ;; *************** function _LCD *****************
  1583 ;; Defined at:
  1584 ;;		line 20 in file "atm.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  a               2    2[COMMON] int 
  1587 ;;  b               2    4[COMMON] int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         4       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         4       0       0       0       0
  1603 ;;Total ram usage:        4 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 1
  1606 ;; This function calls:
  1607 ;;		_pulse
  1608 ;; This function is called by:
  1609 ;;		_pad
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _LCD
  1616  04F2                     _LCD:
  1617  04F2                     l880:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _LCD: [wreg+status,2+status,0+pclath+cstack]
  1620                           
  1621                           
  1622                           ;atm.c: 20: void LCD(int a,int b);atm.c: 21: {;atm.c: 22:     RD5=b;
  1623  04F2  1874               	btfsc	LCD@b,0
  1624  04F3  2CF5               	goto	u341
  1625  04F4  2CF9               	goto	u340
  1626  04F5                     u341:
  1627  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1628  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1629  04F7  1688               	bsf	8,5	;volatile
  1630  04F8  2CFC               	goto	u354
  1631  04F9                     u340:
  1632  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1633  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1634  04FB  1288               	bcf	8,5	;volatile
  1635  04FC                     u354:
  1636                           
  1637                           ;atm.c: 23:     RD6=0;
  1638  04FC  1308               	bcf	8,6	;volatile
  1639  04FD                     l882:
  1640                           
  1641                           ;atm.c: 24:     PORTB=a;
  1642  04FD  0872               	movf	LCD@a,w
  1643  04FE  0086               	movwf	6	;volatile
  1644  04FF                     l884:
  1645                           
  1646                           ;atm.c: 25:     pulse();
  1647  04FF  120A  118A  252C  120A  118A  	fcall	_pulse
  1648  0504                     l46:
  1649  0504  0008               	return
  1650  0505                     __end_of_LCD:
  1651                           
  1652                           	psect	text7
  1653  04E0                     __ptext7:	
  1654 ;; *************** function _firstrow *****************
  1655 ;; Defined at:
  1656 ;;		line 63 in file "atm.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		None
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_keypad
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _firstrow
  1685  04E0                     _firstrow:
  1686  04E0                     l932:	
  1687                           ;incstack = 0
  1688                           ; Regs used in _firstrow: []
  1689                           
  1690                           
  1691                           ;atm.c: 65:     RD1=0;
  1692  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1693  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1694  04E2  1088               	bcf	8,1	;volatile
  1695                           
  1696                           ;atm.c: 66:     RD2=0;
  1697  04E3  1108               	bcf	8,2	;volatile
  1698                           
  1699                           ;atm.c: 67:     RD0=1;
  1700  04E4  1408               	bsf	8,0	;volatile
  1701  04E5                     l61:
  1702  04E5  0008               	return
  1703  04E6                     __end_of_firstrow:
  1704                           
  1705                           	psect	text8
  1706  056A                     __ptext8:	
  1707 ;; *************** function _function *****************
  1708 ;; Defined at:
  1709 ;;		line 27 in file "atm.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  name            1    wreg     PTR unsigned char 
  1712 ;;		 -> STR_5(14), STR_4(19), STR_3(8), STR_2(10), 
  1713 ;;		 -> STR_1(10), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  name            1    3[COMMON] PTR unsigned char 
  1716 ;;		 -> STR_5(14), STR_4(19), STR_3(8), STR_2(10), 
  1717 ;;		 -> STR_1(10), 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       0       0       0
  1728 ;;      Locals:         1       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0
  1730 ;;      Totals:         2       0       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 1
  1734 ;; This function calls:
  1735 ;;		_pulse
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _function
  1743  056A                     _function:
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _function: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1747                           ;function@name stored from wreg
  1748  056A  00F3               	movwf	function@name
  1749  056B                     l938:
  1750                           
  1751                           ;atm.c: 27: void function(char * name);atm.c: 28: {;atm.c: 29:     RD5=1;
  1752  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1753  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1754  056D  1688               	bsf	8,5	;volatile
  1755                           
  1756                           ;atm.c: 30:     RD6=0;
  1757  056E  1308               	bcf	8,6	;volatile
  1758                           
  1759                           ;atm.c: 31:     while(*name)
  1760  056F  2D83               	goto	l946
  1761  0570                     l940:
  1762                           
  1763                           ;atm.c: 32:     {;atm.c: 33:         PORTB=*name++;
  1764  0570  0873               	movf	function@name,w
  1765  0571  0084               	movwf	4
  1766  0572  120A  118A  2003  120A  118A  	fcall	stringdir
  1767  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1768  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0579  0086               	movwf	6	;volatile
  1770  057A                     l942:
  1771  057A  3001               	movlw	1
  1772  057B  00F2               	movwf	??_function
  1773  057C  0872               	movf	??_function,w
  1774  057D  07F3               	addwf	function@name,f
  1775  057E                     l944:
  1776                           
  1777                           ;atm.c: 34:         pulse();
  1778  057E  120A  118A  252C  120A  118A  	fcall	_pulse
  1779  0583                     l946:
  1780                           
  1781                           ;atm.c: 31:     while(*name)
  1782  0583  0873               	movf	function@name,w
  1783  0584  0084               	movwf	4
  1784  0585  120A  118A  2003  120A  118A  	fcall	stringdir
  1785  058A  3A00               	xorlw	0
  1786  058B  1D03               	skipz
  1787  058C  2D8E               	goto	u431
  1788  058D  2D8F               	goto	u430
  1789  058E                     u431:
  1790  058E  2D70               	goto	l940
  1791  058F                     u430:
  1792  058F                     l52:
  1793  058F  0008               	return
  1794  0590                     __end_of_function:
  1795                           
  1796                           	psect	text9
  1797  052C                     __ptext9:	
  1798 ;; *************** function _pulse *****************
  1799 ;; Defined at:
  1800 ;;		line 13 in file "atm.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          2       0       0       0       0
  1817 ;;      Totals:         2       0       0       0       0
  1818 ;;Total ram usage:        2 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_LCD
  1824 ;;		_function
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _pulse
  1830  052C                     _pulse:
  1831  052C                     l874:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _pulse: [wreg]
  1834                           
  1835                           
  1836                           ;atm.c: 15:     RD7=1;
  1837  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1838  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1839  052E  1788               	bsf	8,7	;volatile
  1840  052F                     l876:
  1841                           
  1842                           ;atm.c: 16:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1843  052F  3082               	movlw	130
  1844  0530  00F1               	movwf	??_pulse+1
  1845  0531  30DD               	movlw	221
  1846  0532  00F0               	movwf	??_pulse
  1847  0533                     u677:
  1848  0533  0BF0               	decfsz	??_pulse,f
  1849  0534  2D33               	goto	u677
  1850  0535  0BF1               	decfsz	??_pulse+1,f
  1851  0536  2D33               	goto	u677
  1852  0537  2D38               	nop2
  1853  0538                     l878:
  1854                           
  1855                           ;atm.c: 17:     RD7=0;
  1856  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1858  053A  1388               	bcf	8,7	;volatile
  1859                           
  1860                           ;atm.c: 18:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1861  053B  3082               	movlw	130
  1862  053C  00F1               	movwf	??_pulse+1
  1863  053D  30DD               	movlw	221
  1864  053E  00F0               	movwf	??_pulse
  1865  053F                     u687:
  1866  053F  0BF0               	decfsz	??_pulse,f
  1867  0540  2D3F               	goto	u687
  1868  0541  0BF1               	decfsz	??_pulse+1,f
  1869  0542  2D3F               	goto	u687
  1870  0543  2D44               	nop2
  1871  0544                     l43:
  1872  0544  0008               	return
  1873  0545                     __end_of_pulse:
  1874  007E                     btemp	set	126	;btemp
  1875  007E                     wtemp0	set	126

Data Sizes:
    Strings     61
    Constant    0
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    function@name	PTR unsigned char  size(1) Largest target is 19
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[8]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _keypad->_pad
    _pad->_LCD
    _pad->___wmul
    _LCD->_pulse
    _function->_pulse

Critical Paths under _main in BANK0

    _keypad->_pad

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5937
                                             12 COMMON     2     2      0
                                _LCD
                           _function
                             _keypad
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0    3661
                           _firstrow
                                _pad
                          _secondrow
                           _thirdrow
 ---------------------------------------------------------------------------------
 (2) _thirdrow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secondrow                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pad                                                 31    25      6    3661
                                              6 COMMON     6     0      6
                                              0 BANK0     25    25      0
                                _LCD
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  4     0      4    2020
                                              2 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _firstrow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _function                                             2     2      0     210
                                              2 COMMON     2     2      0
                              _pulse
 ---------------------------------------------------------------------------------
 (4) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _function
     _pulse
   _keypad
     _firstrow
     _pad
       _LCD
       ___wmul
     _secondrow
     _thirdrow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 24 12:41:44 2023

                      pc 0002                       l43 0544                       l52 058F  
                     l61 04E5                       l46 0504                       l64 04EB  
                     l73 05B4                       l58 06FE                       l67 04F1  
                     l85 0618                       l79 05E6                       l88 0626  
                     _cc 0039                       fsr 0004      ___wmul@multiplicand 0072  
                    l192 0551                      l194 0569                      l900 0627  
                    l910 0660                      l902 062B                      l920 06AC  
                    l904 062F                      l912 0666                      l930 06F8  
                    l914 066A                      l922 06B2                      l906 0643  
                    l940 0570                      l932 04E0                      l924 06B6  
                    l916 067E                      l908 0649                      l942 057A  
                    l926 06CA                      l918 068B                      l934 04E6  
                    l950 0595                      l944 057E                      l880 04F2  
                    l928 06D7                      l936 04EC                      l960 05BE  
                    l952 059B                      l874 052C                      l946 0583  
                    l938 056B                      l882 04FD                      l890 054B  
                    l970 05D5                      l962 05C2                      l954 059F  
                    l876 052F                      l884 04FF                      l892 0558  
                    l980 05FF                      l972 05EC                      l964 05C7  
                    l956 05A3                      l948 0590                      l878 0538  
                    l894 055F                      l886 0545                      l982 0603  
                    l974 05F0                      l966 05CD                      l958 05BA  
                    l990 06FF                      l896 0565                      l888 0547  
                    l984 0607                      l976 05F4                      l968 05D1  
                    l992 0705                      l986 061E                      l978 05F9  
                    l994 0709                      l988 0622                      l996 070C  
                    l998 070F                      _LCD 04F2                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      _RD0 0040  
                    _RD1 0041                      _RC3 003B                      _RD2 0042  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u400 062F                      u401 062E                      u410 066A  
                    u411 0669                      u340 04F9                      u420 06B6  
                    u500 05CD                      u341 04F5                      u421 06B5  
                    u501 05CC                      u430 058F                      u510 05D1  
                    u431 058E                      u511 05D0                      u360 054B  
                    u600 0622                      u520 05D5                      u440 059B  
                    u361 054A                      u601 0621                      u521 05D4  
                    u441 059A                      u354 04FC                      u610 0626  
                    u530 05EC                      u450 059F                      u611 0625  
                    u531 05EB                      u451 059E                      u540 05F0  
                    u460 05A3                      u620 0735                      u541 05EF  
                    u461 05A2                      u621 0734                      u390 0565  
                    u550 05F4                      u470 05BA                      u630 075B  
                    u391 0564                      u375 0552                      u551 05F3  
                    u471 05B9                      u631 075A                      u560 05FF  
                    u480 05BE                      u640 0762                      u385 0559  
                    u561 05FE                      u481 05BD                      u641 0761  
                    u570 0603                      u490 05C2                      u650 07A2  
                    u571 0602                      u491 05C1                      u651 07A1  
                    u580 0607                      u660 07AB                      u581 0606  
                    u661 07AA                      u590 061E                      u591 061D  
                    u677 0533                      u687 053F                      _pad 0627  
                    fsr0 0004                      _sum 004D                      indf 0000  
                   LCD@a 0072                     LCD@b 0074                     ?_LCD 0072  
                   l1000 0712                     l1010 0735                     l1002 0715  
                   l1012 0741                     l1020 0750                     l1004 0721  
                   l1030 0774                     l1022 0755                     l1014 0747  
                   l1006 072D                     l1040 07A2                     l1032 0778  
                   l1024 075B                     l1016 074B                     l1008 072F  
                   l1042 07AB                     l1026 0762                     l1034 077E  
                   l1018 0750                     l1044 07C3                     l1036 0796  
                   l1028 076E                     l1046 07CA                     l1038 079C  
                   l1048 07E2                     ?_pad 0076                     STR_1 0034  
                   STR_2 002A                     STR_3 003E                     STR_4 0009  
                   STR_5 001C                     _main 06FF                     pad@c 0076  
                   pad@d 0078                     pad@e 007A                     pad@i 0037  
                   btemp 007E                     start 0000                    ??_LCD 0076  
                  ??_pad 0020                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _pulse 052C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EC             __end_of_main 07EC  
                 ??_main 007C                   ?_pulse 0070                   ___wmul 0545  
       __end_of_firstrow 04E6                   _keypad 0590         __end_of_function 0590  
       __end_of_thirdrow 04F2  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0518            __end_of_pulse 0545                  ??_pulse 0070  
             __pbssBANK0 004D               __pmaintext 06FF                  ?___wmul 0070  
     __size_of_secondrow 0006                  ?_keypad 0070               __stringtab 0003  
              ?_firstrow 0070                ?_function 0070                ?_thirdrow 0070  
        __size_of___wmul 0025          __size_of_keypad 0097                  __ptext1 0590  
                __ptext2 04EC                  __ptext3 04E6                  __ptext4 0627  
                __ptext5 0545                  __ptext6 04F2                  __ptext7 04E0  
                __ptext8 056A                  __ptext9 052C             __size_of_LCD 0013  
           __size_of_pad 00D8     end_of_initialization 07FC        __end_of_secondrow 04EC  
             ??_firstrow 0070               ??_function 0072               ??_thirdrow 0070  
           function@name 0073           __end_of___wmul 056A           __end_of_keypad 0627  
    start_initialization 07EC              __end_of_LCD 0505              __end_of_pad 06FF  
               ??___wmul 0074               init_fetch0 0505              __pdataBANK0 0039  
               ??_keypad 007C                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_firstrow 0006        __size_of_function 0026        __size_of_thirdrow 0006  
              __pstrings 0003           __size_of_pulse 0019           ___wmul@product 0074  
              _secondrow 04E6              __stringbase 0008        ___wmul@multiplier 0070  
             ?_secondrow 0070       __end_of__stringtab 0009                 _firstrow 04E0  
          __size_of_main 00ED                 _function 056A                 _thirdrow 04EC  
               pad@count 0023                 main@flag 007C                 init_ram0 0509  
            ??_secondrow 0070                stringcode 0003                 stringdir 0003  
               stringtab 0003  
