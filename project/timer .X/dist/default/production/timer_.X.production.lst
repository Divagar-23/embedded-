

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 25 16:00:09 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0001                     _TMR0	set	1
   208  0007                     _PORTC	set	7
   209  0006                     _PORTB	set	6
   210  005A                     _T0IF	set	90
   211  0038                     _RC0	set	56
   212  003E                     _RC6	set	62
   213  003D                     _RC5	set	61
   214  003F                     _RC7	set	63
   215  0081                     _OPTION_REG	set	129
   216  0086                     _TRISB	set	134
   217  0087                     _TRISC	set	135
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	cinit
   222  07F2                     start_initialization:	
   223                           ; #config settings
   224                           
   225  07F2                     __initialization:
   226                           
   227                           ; Clear objects allocated to COMMON
   228  07F2  01FC               	clrf	__pbssCOMMON& (0+127)
   229  07F3  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   230                           
   231                           ; Clear objects allocated to BANK0
   232  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   233  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   234  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   235  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   236  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   237  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   238  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   239  07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   240  07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  07FC                     __end_of__initialization:
   244  07FC  0183               	clrf	3
   245  07FD  120A  118A  2EE9   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  007C                     __pbssCOMMON:
   249  007C                     _count:
   250  007C                     	ds	2
   251                           
   252                           	psect	bssBANK0
   253  0020                     __pbssBANK0:
   254  0020                     _dig3:
   255  0020                     	ds	2
   256  0022                     _dig2:
   257  0022                     	ds	2
   258  0024                     _dig1:
   259  0024                     	ds	2
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:
   263  0070                     ?_pulse:
   264  0070                     ??_pulse:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_timer:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?___awmod:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     timer@a:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     ___awmod@divisor:	
   280                           ; 2 bytes @ 0x0
   281                           
   282                           
   283                           ; 2 bytes @ 0x0
   284  0070                     	ds	2
   285  0072                     ?_lcd:
   286  0072                     lcd@a:	
   287                           ; 1 bytes @ 0x2
   288                           
   289  0072                     timer@b:	
   290                           ; 2 bytes @ 0x2
   291                           
   292  0072                     ___awmod@dividend:	
   293                           ; 2 bytes @ 0x2
   294                           
   295                           
   296                           ; 2 bytes @ 0x2
   297  0072                     	ds	2
   298  0074                     ??_timer:
   299  0074                     ??___awmod:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     lcd@b:	
   303                           ; 1 bytes @ 0x4
   304                           
   305                           
   306                           ; 2 bytes @ 0x4
   307  0074                     	ds	1
   308  0075                     ___awmod@counter:
   309                           
   310                           ; 1 bytes @ 0x5
   311  0075                     	ds	1
   312  0076                     ??_lcd:
   313  0076                     ___awmod@sign:	
   314                           ; 1 bytes @ 0x6
   315                           
   316                           
   317                           ; 1 bytes @ 0x6
   318  0076                     	ds	1
   319  0077                     ?___awdiv:
   320  0077                     ___awdiv@divisor:	
   321                           ; 2 bytes @ 0x7
   322                           
   323                           
   324                           ; 2 bytes @ 0x7
   325  0077                     	ds	2
   326  0079                     ___awdiv@dividend:
   327                           
   328                           ; 2 bytes @ 0x9
   329  0079                     	ds	2
   330  007B                     ??___awdiv:
   331                           
   332                           ; 1 bytes @ 0xB
   333  007B                     	ds	1
   334  007C                     ??_main:
   335                           
   336                           	psect	cstackBANK0
   337  0026                     __pcstackBANK0:	
   338                           ; 1 bytes @ 0xC
   339                           
   340  0026                     ___awdiv@counter:
   341                           
   342                           ; 1 bytes @ 0x0
   343  0026                     	ds	1
   344  0027                     ___awdiv@sign:
   345                           
   346                           ; 1 bytes @ 0x1
   347  0027                     	ds	1
   348  0028                     ___awdiv@quotient:
   349                           
   350                           ; 2 bytes @ 0x2
   351  0028                     	ds	2
   352                           
   353                           	psect	maintext
   354  06E9                     __pmaintext:	
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 40 in file "timer.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels required when called: 2
   380 ;; This function calls:
   381 ;;		___awdiv
   382 ;;		___awmod
   383 ;;		_lcd
   384 ;;		_timer
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _main
   392  06E9                     _main:
   393  06E9                     l901:	
   394                           ;incstack = 0
   395                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   396                           
   397                           
   398                           ;timer.c: 42:    TRISC=0x00;
   399  06E9  1683               	bsf	3,5	;RP0=1, select bank1
   400  06EA  1303               	bcf	3,6	;RP1=0, select bank1
   401  06EB  0187               	clrf	7	;volatile
   402                           
   403                           ;timer.c: 43:    PORTC=0x00;
   404  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   405  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   406  06EE  0187               	clrf	7	;volatile
   407                           
   408                           ;timer.c: 44:    TRISB=0x00;
   409  06EF  1683               	bsf	3,5	;RP0=1, select bank1
   410  06F0  1303               	bcf	3,6	;RP1=0, select bank1
   411  06F1  0186               	clrf	6	;volatile
   412                           
   413                           ;timer.c: 45:    PORTB=0x00;
   414  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   415  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   416  06F4  0186               	clrf	6	;volatile
   417                           
   418                           ;timer.c: 46:    ANSEL=0x00;
   419  06F5  1683               	bsf	3,5	;RP0=1, select bank3
   420  06F6  1703               	bsf	3,6	;RP1=1, select bank3
   421  06F7  0188               	clrf	8	;volatile
   422                           
   423                           ;timer.c: 47:    ANSELH=0x00;
   424  06F8  0189               	clrf	9	;volatile
   425  06F9                     l903:
   426                           
   427                           ;timer.c: 48:    lcd(0x38,0);
   428  06F9  3038               	movlw	56
   429  06FA  00F2               	movwf	lcd@a
   430  06FB  3000               	movlw	0
   431  06FC  00F3               	movwf	lcd@a+1
   432  06FD  3000               	movlw	0
   433  06FE  00F4               	movwf	lcd@b
   434  06FF  00F5               	movwf	lcd@b+1
   435  0700  120A  118A  25CC  120A  118A  	fcall	_lcd
   436  0705                     l905:
   437                           
   438                           ;timer.c: 49:    lcd(0x0e,0);
   439  0705  300E               	movlw	14
   440  0706  00F2               	movwf	lcd@a
   441  0707  3000               	movlw	0
   442  0708  00F3               	movwf	lcd@a+1
   443  0709  3000               	movlw	0
   444  070A  00F4               	movwf	lcd@b
   445  070B  00F5               	movwf	lcd@b+1
   446  070C  120A  118A  25CC  120A  118A  	fcall	_lcd
   447  0711                     l907:
   448                           
   449                           ;timer.c: 53:    OPTION_REG=0x07;
   450  0711  3007               	movlw	7
   451  0712  1683               	bsf	3,5	;RP0=1, select bank1
   452  0713  1303               	bcf	3,6	;RP1=0, select bank1
   453  0714  0081               	movwf	1	;volatile
   454  0715                     l909:
   455                           
   456                           ;timer.c: 54:    TMR0=38;
   457  0715  3026               	movlw	38
   458  0716  1283               	bcf	3,5	;RP0=0, select bank0
   459  0717  1303               	bcf	3,6	;RP1=0, select bank0
   460  0718  0081               	movwf	1	;volatile
   461  0719                     l911:
   462                           
   463                           ;timer.c: 56:    {;timer.c: 57:        if(T0IF==1)
   464  0719  1D0B               	btfss	11,2	;volatile
   465  071A  2F1C               	goto	u501
   466  071B  2F1D               	goto	u500
   467  071C                     u501:
   468  071C  2FC7               	goto	l935
   469  071D                     u500:
   470  071D                     l913:
   471                           
   472                           ;timer.c: 58:        {;timer.c: 59:            count++;
   473  071D  3001               	movlw	1
   474  071E  07FC               	addwf	_count,f
   475  071F  1803               	skipnc
   476  0720  0AFD               	incf	_count+1,f
   477  0721  3000               	movlw	0
   478  0722  07FD               	addwf	_count+1,f
   479  0723                     l915:
   480                           
   481                           ;timer.c: 60:             dig1=count/100;
   482  0723  3064               	movlw	100
   483  0724  00F7               	movwf	___awdiv@divisor
   484  0725  3000               	movlw	0
   485  0726  00F8               	movwf	___awdiv@divisor+1
   486  0727  087D               	movf	_count+1,w
   487  0728  00FA               	movwf	___awdiv@dividend+1
   488  0729  087C               	movf	_count,w
   489  072A  00F9               	movwf	___awdiv@dividend
   490  072B  120A  118A  2680  120A  118A  	fcall	___awdiv
   491  0730  0878               	movf	?___awdiv+1,w
   492  0731  1283               	bcf	3,5	;RP0=0, select bank0
   493  0732  1303               	bcf	3,6	;RP1=0, select bank0
   494  0733  00A5               	movwf	_dig1+1
   495  0734  0877               	movf	?___awdiv,w
   496  0735  00A4               	movwf	_dig1
   497  0736                     l917:
   498                           
   499                           ;timer.c: 61:             dig2=((count%100)/10);
   500  0736  300A               	movlw	10
   501  0737  00F7               	movwf	___awdiv@divisor
   502  0738  3000               	movlw	0
   503  0739  00F8               	movwf	___awdiv@divisor+1
   504  073A  087D               	movf	_count+1,w
   505  073B  00F3               	movwf	___awmod@dividend+1
   506  073C  087C               	movf	_count,w
   507  073D  00F2               	movwf	___awmod@dividend
   508  073E  3064               	movlw	100
   509  073F  00F0               	movwf	___awmod@divisor
   510  0740  3000               	movlw	0
   511  0741  00F1               	movwf	___awmod@divisor+1
   512  0742  120A  118A  2627  120A  118A  	fcall	___awmod
   513  0747  0871               	movf	?___awmod+1,w
   514  0748  00FA               	movwf	___awdiv@dividend+1
   515  0749  0870               	movf	?___awmod,w
   516  074A  00F9               	movwf	___awdiv@dividend
   517  074B  120A  118A  2680  120A  118A  	fcall	___awdiv
   518  0750  0878               	movf	?___awdiv+1,w
   519  0751  1283               	bcf	3,5	;RP0=0, select bank0
   520  0752  1303               	bcf	3,6	;RP1=0, select bank0
   521  0753  00A3               	movwf	_dig2+1
   522  0754  0877               	movf	?___awdiv,w
   523  0755  00A2               	movwf	_dig2
   524  0756                     l919:
   525                           
   526                           ;timer.c: 62:             dig3=count%10;
   527  0756  300A               	movlw	10
   528  0757  00F0               	movwf	___awmod@divisor
   529  0758  3000               	movlw	0
   530  0759  00F1               	movwf	___awmod@divisor+1
   531  075A  087D               	movf	_count+1,w
   532  075B  00F3               	movwf	___awmod@dividend+1
   533  075C  087C               	movf	_count,w
   534  075D  00F2               	movwf	___awmod@dividend
   535  075E  120A  118A  2627  120A  118A  	fcall	___awmod
   536  0763  0871               	movf	?___awmod+1,w
   537  0764  1283               	bcf	3,5	;RP0=0, select bank0
   538  0765  1303               	bcf	3,6	;RP1=0, select bank0
   539  0766  00A1               	movwf	_dig3+1
   540  0767  0870               	movf	?___awmod,w
   541  0768  00A0               	movwf	_dig3
   542  0769                     l921:
   543                           
   544                           ;timer.c: 63:             lcd(0x80,0);
   545  0769  3080               	movlw	128
   546  076A  00F2               	movwf	lcd@a
   547  076B  3000               	movlw	0
   548  076C  00F3               	movwf	lcd@a+1
   549  076D  3000               	movlw	0
   550  076E  00F4               	movwf	lcd@b
   551  076F  00F5               	movwf	lcd@b+1
   552  0770  120A  118A  25CC  120A  118A  	fcall	_lcd
   553  0775                     l923:
   554                           
   555                           ;timer.c: 64:             lcd(dig1+0x30,1);
   556  0775  1283               	bcf	3,5	;RP0=0, select bank0
   557  0776  1303               	bcf	3,6	;RP1=0, select bank0
   558  0777  0824               	movf	_dig1,w
   559  0778  3E30               	addlw	48
   560  0779  00F2               	movwf	lcd@a
   561  077A  0825               	movf	_dig1+1,w
   562  077B  1803               	skipnc
   563  077C  3E01               	addlw	1
   564  077D  3E00               	addlw	0
   565  077E  00F3               	movwf	lcd@a+1
   566  077F  3001               	movlw	1
   567  0780  00F4               	movwf	lcd@b
   568  0781  3000               	movlw	0
   569  0782  00F5               	movwf	lcd@b+1
   570  0783  120A  118A  25CC  120A  118A  	fcall	_lcd
   571  0788                     l925:
   572                           
   573                           ;timer.c: 65:             lcd(0x81,0);
   574  0788  3081               	movlw	129
   575  0789  00F2               	movwf	lcd@a
   576  078A  3000               	movlw	0
   577  078B  00F3               	movwf	lcd@a+1
   578  078C  3000               	movlw	0
   579  078D  00F4               	movwf	lcd@b
   580  078E  00F5               	movwf	lcd@b+1
   581  078F  120A  118A  25CC  120A  118A  	fcall	_lcd
   582  0794                     l927:
   583                           
   584                           ;timer.c: 66:             lcd(dig2+0x30,1);
   585  0794  1283               	bcf	3,5	;RP0=0, select bank0
   586  0795  1303               	bcf	3,6	;RP1=0, select bank0
   587  0796  0822               	movf	_dig2,w
   588  0797  3E30               	addlw	48
   589  0798  00F2               	movwf	lcd@a
   590  0799  0823               	movf	_dig2+1,w
   591  079A  1803               	skipnc
   592  079B  3E01               	addlw	1
   593  079C  3E00               	addlw	0
   594  079D  00F3               	movwf	lcd@a+1
   595  079E  3001               	movlw	1
   596  079F  00F4               	movwf	lcd@b
   597  07A0  3000               	movlw	0
   598  07A1  00F5               	movwf	lcd@b+1
   599  07A2  120A  118A  25CC  120A  118A  	fcall	_lcd
   600  07A7                     l929:
   601                           
   602                           ;timer.c: 67:            lcd(0x82,0);
   603  07A7  3082               	movlw	130
   604  07A8  00F2               	movwf	lcd@a
   605  07A9  3000               	movlw	0
   606  07AA  00F3               	movwf	lcd@a+1
   607  07AB  3000               	movlw	0
   608  07AC  00F4               	movwf	lcd@b
   609  07AD  00F5               	movwf	lcd@b+1
   610  07AE  120A  118A  25CC  120A  118A  	fcall	_lcd
   611  07B3                     l931:
   612                           
   613                           ;timer.c: 68:             lcd(dig3+0x30,1);
   614  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   615  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   616  07B5  0820               	movf	_dig3,w
   617  07B6  3E30               	addlw	48
   618  07B7  00F2               	movwf	lcd@a
   619  07B8  0821               	movf	_dig3+1,w
   620  07B9  1803               	skipnc
   621  07BA  3E01               	addlw	1
   622  07BB  3E00               	addlw	0
   623  07BC  00F3               	movwf	lcd@a+1
   624  07BD  3001               	movlw	1
   625  07BE  00F4               	movwf	lcd@b
   626  07BF  3000               	movlw	0
   627  07C0  00F5               	movwf	lcd@b+1
   628  07C1  120A  118A  25CC  120A  118A  	fcall	_lcd
   629  07C6                     l933:
   630                           
   631                           ;timer.c: 69:             T0IF=0;
   632  07C6  110B               	bcf	11,2	;volatile
   633  07C7                     l935:
   634                           
   635                           ;timer.c: 71:             timer(180,180);
   636  07C7  30B4               	movlw	180
   637  07C8  00F0               	movwf	timer@a
   638  07C9  3000               	movlw	0
   639  07CA  00F1               	movwf	timer@a+1
   640  07CB  30B4               	movlw	180
   641  07CC  00F2               	movwf	timer@b
   642  07CD  3000               	movlw	0
   643  07CE  00F3               	movwf	timer@b+1
   644  07CF  120A  118A  25F8  120A  118A  	fcall	_timer
   645  07D4                     l937:
   646                           
   647                           ;timer.c: 72:             timer(90,180);
   648  07D4  305A               	movlw	90
   649  07D5  00F0               	movwf	timer@a
   650  07D6  3000               	movlw	0
   651  07D7  00F1               	movwf	timer@a+1
   652  07D8  30B4               	movlw	180
   653  07D9  00F2               	movwf	timer@b
   654  07DA  3000               	movlw	0
   655  07DB  00F3               	movwf	timer@b+1
   656  07DC  120A  118A  25F8  120A  118A  	fcall	_timer
   657  07E1                     l939:
   658                           
   659                           ;timer.c: 73:             timer(54,180);
   660  07E1  3036               	movlw	54
   661  07E2  00F0               	movwf	timer@a
   662  07E3  3000               	movlw	0
   663  07E4  00F1               	movwf	timer@a+1
   664  07E5  30B4               	movlw	180
   665  07E6  00F2               	movwf	timer@b
   666  07E7  3000               	movlw	0
   667  07E8  00F3               	movwf	timer@b+1
   668  07E9  120A  118A  25F8  120A  118A  	fcall	_timer
   669  07EE  2F19               	goto	l911
   670  07EF  120A  118A  2800   	ljmp	start
   671  07F2                     __end_of_main:
   672                           
   673                           	psect	text1
   674  05F8                     __ptext1:	
   675 ;; *************** function _timer *****************
   676 ;; Defined at:
   677 ;;		line 27 in file "timer.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  a               2    0[COMMON] int 
   680 ;;  b               2    2[COMMON] int 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         4       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          1       0       0       0       0
   695 ;;      Totals:         5       0       0       0       0
   696 ;;Total ram usage:        5 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _timer
   707  05F8                     _timer:
   708  05F8                     l807:	
   709                           ;incstack = 0
   710                           ; Regs used in _timer: [wreg+status,2]
   711                           
   712                           
   713                           ;timer.c: 27: void timer(int a ,int b);timer.c: 28: {;timer.c: 29:      if(count<=a)
   714  05F8  0871               	movf	timer@a+1,w
   715  05F9  3A80               	xorlw	128
   716  05FA  00F4               	movwf	??_timer
   717  05FB  087D               	movf	_count+1,w
   718  05FC  3A80               	xorlw	128
   719  05FD  0274               	subwf	??_timer,w
   720  05FE  1D03               	skipz
   721  05FF  2E02               	goto	u285
   722  0600  087C               	movf	_count,w
   723  0601  0270               	subwf	timer@a,w
   724  0602                     u285:
   725  0602  1C03               	skipc
   726  0603  2E05               	goto	u281
   727  0604  2E06               	goto	u280
   728  0605                     u281:
   729  0605  2E09               	goto	l811
   730  0606                     u280:
   731  0606                     l809:
   732                           
   733                           ;timer.c: 30:        RC0=1;
   734  0606  1283               	bcf	3,5	;RP0=0, select bank0
   735  0607  1303               	bcf	3,6	;RP1=0, select bank0
   736  0608  1407               	bsf	7,0	;volatile
   737  0609                     l811:
   738                           
   739                           ;timer.c: 31:         if(count>a)
   740  0609  0871               	movf	timer@a+1,w
   741  060A  3A80               	xorlw	128
   742  060B  00F4               	movwf	??_timer
   743  060C  087D               	movf	_count+1,w
   744  060D  3A80               	xorlw	128
   745  060E  0274               	subwf	??_timer,w
   746  060F  1D03               	skipz
   747  0610  2E13               	goto	u295
   748  0611  087C               	movf	_count,w
   749  0612  0270               	subwf	timer@a,w
   750  0613                     u295:
   751  0613  1803               	skipnc
   752  0614  2E16               	goto	u291
   753  0615  2E17               	goto	u290
   754  0616                     u291:
   755  0616  2E1A               	goto	l815
   756  0617                     u290:
   757  0617                     l813:
   758                           
   759                           ;timer.c: 32:            {;timer.c: 33:              RC0=0;
   760  0617  1283               	bcf	3,5	;RP0=0, select bank0
   761  0618  1303               	bcf	3,6	;RP1=0, select bank0
   762  0619  1007               	bcf	7,0	;volatile
   763  061A                     l815:
   764                           
   765                           ;timer.c: 35:           if(count==b)
   766  061A  0873               	movf	timer@b+1,w
   767  061B  067D               	xorwf	_count+1,w
   768  061C  1D03               	skipz
   769  061D  2E20               	goto	u305
   770  061E  0872               	movf	timer@b,w
   771  061F  067C               	xorwf	_count,w
   772  0620                     u305:
   773  0620  1D03               	skipz
   774  0621  2E23               	goto	u301
   775  0622  2E24               	goto	u300
   776  0623                     u301:
   777  0623  2E26               	goto	l48
   778  0624                     u300:
   779  0624                     l817:
   780                           
   781                           ;timer.c: 36:             {;timer.c: 37:               count=0;
   782  0624  01FC               	clrf	_count
   783  0625  01FD               	clrf	_count+1
   784  0626                     l48:
   785  0626  0008               	return
   786  0627                     __end_of_timer:
   787                           
   788                           	psect	text2
   789  05CC                     __ptext2:	
   790 ;; *************** function _lcd *****************
   791 ;; Defined at:
   792 ;;		line 20 in file "timer.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  a               2    2[COMMON] int 
   795 ;;  b               2    4[COMMON] int 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         4       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0
   810 ;;      Totals:         4       0       0       0       0
   811 ;;Total ram usage:        4 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 1
   814 ;; This function calls:
   815 ;;		_pulse
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _lcd
   823  05CC                     _lcd:
   824  05CC                     l801:	
   825                           ;incstack = 0
   826                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   827                           
   828                           
   829                           ;timer.c: 20: void lcd(int a,int b);timer.c: 21: {;timer.c: 22:   RC5=b;
   830  05CC  1874               	btfsc	lcd@b,0
   831  05CD  2DCF               	goto	u261
   832  05CE  2DD3               	goto	u260
   833  05CF                     u261:
   834  05CF  1283               	bcf	3,5	;RP0=0, select bank0
   835  05D0  1303               	bcf	3,6	;RP1=0, select bank0
   836  05D1  1687               	bsf	7,5	;volatile
   837  05D2  2DD6               	goto	u274
   838  05D3                     u260:
   839  05D3  1283               	bcf	3,5	;RP0=0, select bank0
   840  05D4  1303               	bcf	3,6	;RP1=0, select bank0
   841  05D5  1287               	bcf	7,5	;volatile
   842  05D6                     u274:
   843                           
   844                           ;timer.c: 23:   RC6=0;
   845  05D6  1307               	bcf	7,6	;volatile
   846  05D7                     l803:
   847                           
   848                           ;timer.c: 24:   PORTB=a;
   849  05D7  0872               	movf	lcd@a,w
   850  05D8  0086               	movwf	6	;volatile
   851  05D9                     l805:
   852                           
   853                           ;timer.c: 25:   pulse();
   854  05D9  120A  118A  25DF  120A  118A  	fcall	_pulse
   855  05DE                     l42:
   856  05DE  0008               	return
   857  05DF                     __end_of_lcd:
   858                           
   859                           	psect	text3
   860  05DF                     __ptext3:	
   861 ;; *************** function _pulse *****************
   862 ;; Defined at:
   863 ;;		line 13 in file "timer.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0
   879 ;;      Temps:          2       0       0       0       0
   880 ;;      Totals:         2       0       0       0       0
   881 ;;Total ram usage:        2 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_lcd
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _pulse
   892  05DF                     _pulse:
   893  05DF                     l795:	
   894                           ;incstack = 0
   895                           ; Regs used in _pulse: [wreg]
   896                           
   897                           
   898                           ;timer.c: 15:     RC7=1;
   899  05DF  1283               	bcf	3,5	;RP0=0, select bank0
   900  05E0  1303               	bcf	3,6	;RP1=0, select bank0
   901  05E1  1787               	bsf	7,7	;volatile
   902  05E2                     l797:
   903                           
   904                           ;timer.c: 16:     _delay((unsigned long)((15)*(4000000/4000.0)));
   905  05E2  3014               	movlw	20
   906  05E3  00F1               	movwf	??_pulse+1
   907  05E4  3079               	movlw	121
   908  05E5  00F0               	movwf	??_pulse
   909  05E6                     u517:
   910  05E6  0BF0               	decfsz	??_pulse,f
   911  05E7  2DE6               	goto	u517
   912  05E8  0BF1               	decfsz	??_pulse+1,f
   913  05E9  2DE6               	goto	u517
   914  05EA  2DEB               	nop2
   915  05EB                     l799:
   916                           
   917                           ;timer.c: 17:     RC7=0;
   918  05EB  1283               	bcf	3,5	;RP0=0, select bank0
   919  05EC  1303               	bcf	3,6	;RP1=0, select bank0
   920  05ED  1387               	bcf	7,7	;volatile
   921                           
   922                           ;timer.c: 18:     _delay((unsigned long)((15)*(4000000/4000.0)));
   923  05EE  3014               	movlw	20
   924  05EF  00F1               	movwf	??_pulse+1
   925  05F0  3079               	movlw	121
   926  05F1  00F0               	movwf	??_pulse
   927  05F2                     u527:
   928  05F2  0BF0               	decfsz	??_pulse,f
   929  05F3  2DF2               	goto	u527
   930  05F4  0BF1               	decfsz	??_pulse+1,f
   931  05F5  2DF2               	goto	u527
   932  05F6  2DF7               	nop2
   933  05F7                     l39:
   934  05F7  0008               	return
   935  05F8                     __end_of_pulse:
   936                           
   937                           	psect	text4
   938  0627                     __ptext4:	
   939 ;; *************** function ___awmod *****************
   940 ;; Defined at:
   941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  divisor         2    0[COMMON] int 
   944 ;;  dividend        2    2[COMMON] int 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  sign            1    6[COMMON] unsigned char 
   947 ;;  counter         1    5[COMMON] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  2    0[COMMON] int 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         4       0       0       0       0
   958 ;;      Locals:         2       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0
   960 ;;      Totals:         7       0       0       0       0
   961 ;;Total ram usage:        7 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function ___awmod
   972  0627                     ___awmod:
   973  0627                     l863:	
   974                           ;incstack = 0
   975                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   976                           
   977  0627  01F6               	clrf	___awmod@sign
   978  0628                     l865:
   979  0628  1FF3               	btfss	___awmod@dividend+1,7
   980  0629  2E2B               	goto	u411
   981  062A  2E2C               	goto	u410
   982  062B                     u411:
   983  062B  2E33               	goto	l871
   984  062C                     u410:
   985  062C                     l867:
   986  062C  09F2               	comf	___awmod@dividend,f
   987  062D  09F3               	comf	___awmod@dividend+1,f
   988  062E  0AF2               	incf	___awmod@dividend,f
   989  062F  1903               	skipnz
   990  0630  0AF3               	incf	___awmod@dividend+1,f
   991  0631                     l869:
   992  0631  01F6               	clrf	___awmod@sign
   993  0632  0AF6               	incf	___awmod@sign,f
   994  0633                     l871:
   995  0633  1FF1               	btfss	___awmod@divisor+1,7
   996  0634  2E36               	goto	u421
   997  0635  2E37               	goto	u420
   998  0636                     u421:
   999  0636  2E3C               	goto	l875
  1000  0637                     u420:
  1001  0637                     l873:
  1002  0637  09F0               	comf	___awmod@divisor,f
  1003  0638  09F1               	comf	___awmod@divisor+1,f
  1004  0639  0AF0               	incf	___awmod@divisor,f
  1005  063A  1903               	skipnz
  1006  063B  0AF1               	incf	___awmod@divisor+1,f
  1007  063C                     l875:
  1008  063C  0870               	movf	___awmod@divisor,w
  1009  063D  0471               	iorwf	___awmod@divisor+1,w
  1010  063E  1903               	btfsc	3,2
  1011  063F  2E41               	goto	u431
  1012  0640  2E42               	goto	u430
  1013  0641                     u431:
  1014  0641  2E71               	goto	l893
  1015  0642                     u430:
  1016  0642                     l877:
  1017  0642  01F5               	clrf	___awmod@counter
  1018  0643  0AF5               	incf	___awmod@counter,f
  1019  0644  2E50               	goto	l883
  1020  0645                     l879:
  1021  0645  3001               	movlw	1
  1022  0646                     u445:
  1023  0646  1003               	clrc
  1024  0647  0DF0               	rlf	___awmod@divisor,f
  1025  0648  0DF1               	rlf	___awmod@divisor+1,f
  1026  0649  3EFF               	addlw	-1
  1027  064A  1D03               	skipz
  1028  064B  2E46               	goto	u445
  1029  064C                     l881:
  1030  064C  3001               	movlw	1
  1031  064D  00F4               	movwf	??___awmod
  1032  064E  0874               	movf	??___awmod,w
  1033  064F  07F5               	addwf	___awmod@counter,f
  1034  0650                     l883:
  1035  0650  1FF1               	btfss	___awmod@divisor+1,7
  1036  0651  2E53               	goto	u451
  1037  0652  2E54               	goto	u450
  1038  0653                     u451:
  1039  0653  2E45               	goto	l879
  1040  0654                     u450:
  1041  0654                     l885:
  1042  0654  0871               	movf	___awmod@divisor+1,w
  1043  0655  0273               	subwf	___awmod@dividend+1,w
  1044  0656  1D03               	skipz
  1045  0657  2E5A               	goto	u465
  1046  0658  0870               	movf	___awmod@divisor,w
  1047  0659  0272               	subwf	___awmod@dividend,w
  1048  065A                     u465:
  1049  065A  1C03               	skipc
  1050  065B  2E5D               	goto	u461
  1051  065C  2E5E               	goto	u460
  1052  065D                     u461:
  1053  065D  2E64               	goto	l889
  1054  065E                     u460:
  1055  065E                     l887:
  1056  065E  0870               	movf	___awmod@divisor,w
  1057  065F  02F2               	subwf	___awmod@dividend,f
  1058  0660  0871               	movf	___awmod@divisor+1,w
  1059  0661  1C03               	skipc
  1060  0662  03F3               	decf	___awmod@dividend+1,f
  1061  0663  02F3               	subwf	___awmod@dividend+1,f
  1062  0664                     l889:
  1063  0664  3001               	movlw	1
  1064  0665                     u475:
  1065  0665  1003               	clrc
  1066  0666  0CF1               	rrf	___awmod@divisor+1,f
  1067  0667  0CF0               	rrf	___awmod@divisor,f
  1068  0668  3EFF               	addlw	-1
  1069  0669  1D03               	skipz
  1070  066A  2E65               	goto	u475
  1071  066B                     l891:
  1072  066B  3001               	movlw	1
  1073  066C  02F5               	subwf	___awmod@counter,f
  1074  066D  1D03               	btfss	3,2
  1075  066E  2E70               	goto	u481
  1076  066F  2E71               	goto	u480
  1077  0670                     u481:
  1078  0670  2E54               	goto	l885
  1079  0671                     u480:
  1080  0671                     l893:
  1081  0671  0876               	movf	___awmod@sign,w
  1082  0672  1903               	btfsc	3,2
  1083  0673  2E75               	goto	u491
  1084  0674  2E76               	goto	u490
  1085  0675                     u491:
  1086  0675  2E7B               	goto	l897
  1087  0676                     u490:
  1088  0676                     l895:
  1089  0676  09F2               	comf	___awmod@dividend,f
  1090  0677  09F3               	comf	___awmod@dividend+1,f
  1091  0678  0AF2               	incf	___awmod@dividend,f
  1092  0679  1903               	skipnz
  1093  067A  0AF3               	incf	___awmod@dividend+1,f
  1094  067B                     l897:
  1095  067B  0873               	movf	___awmod@dividend+1,w
  1096  067C  00F1               	movwf	?___awmod+1
  1097  067D  0872               	movf	___awmod@dividend,w
  1098  067E  00F0               	movwf	?___awmod
  1099  067F                     l309:
  1100  067F  0008               	return
  1101  0680                     __end_of___awmod:
  1102                           
  1103                           	psect	text5
  1104  0680                     __ptext5:	
  1105 ;; *************** function ___awdiv *****************
  1106 ;; Defined at:
  1107 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  divisor         2    7[COMMON] int 
  1110 ;;  dividend        2    9[COMMON] int 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  quotient        2    2[BANK0 ] int 
  1113 ;;  sign            1    1[BANK0 ] unsigned char 
  1114 ;;  counter         1    0[BANK0 ] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  2    7[COMMON] int 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         4       0       0       0       0
  1125 ;;      Locals:         0       4       0       0       0
  1126 ;;      Temps:          1       0       0       0       0
  1127 ;;      Totals:         5       4       0       0       0
  1128 ;;Total ram usage:        9 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function ___awdiv
  1139  0680                     ___awdiv:
  1140  0680                     l819:	
  1141                           ;incstack = 0
  1142                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1143                           
  1144  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0682  01A7               	clrf	___awdiv@sign
  1147  0683                     l821:
  1148  0683  1FF8               	btfss	___awdiv@divisor+1,7
  1149  0684  2E86               	goto	u311
  1150  0685  2E87               	goto	u310
  1151  0686                     u311:
  1152  0686  2E8E               	goto	l827
  1153  0687                     u310:
  1154  0687                     l823:
  1155  0687  09F7               	comf	___awdiv@divisor,f
  1156  0688  09F8               	comf	___awdiv@divisor+1,f
  1157  0689  0AF7               	incf	___awdiv@divisor,f
  1158  068A  1903               	skipnz
  1159  068B  0AF8               	incf	___awdiv@divisor+1,f
  1160  068C                     l825:
  1161  068C  01A7               	clrf	___awdiv@sign
  1162  068D  0AA7               	incf	___awdiv@sign,f
  1163  068E                     l827:
  1164  068E  1FFA               	btfss	___awdiv@dividend+1,7
  1165  068F  2E91               	goto	u321
  1166  0690  2E92               	goto	u320
  1167  0691                     u321:
  1168  0691  2E9B               	goto	l833
  1169  0692                     u320:
  1170  0692                     l829:
  1171  0692  09F9               	comf	___awdiv@dividend,f
  1172  0693  09FA               	comf	___awdiv@dividend+1,f
  1173  0694  0AF9               	incf	___awdiv@dividend,f
  1174  0695  1903               	skipnz
  1175  0696  0AFA               	incf	___awdiv@dividend+1,f
  1176  0697                     l831:
  1177  0697  3001               	movlw	1
  1178  0698  00FB               	movwf	??___awdiv
  1179  0699  087B               	movf	??___awdiv,w
  1180  069A  06A7               	xorwf	___awdiv@sign,f
  1181  069B                     l833:
  1182  069B  01A8               	clrf	___awdiv@quotient
  1183  069C  01A9               	clrf	___awdiv@quotient+1
  1184  069D                     l835:
  1185  069D  0877               	movf	___awdiv@divisor,w
  1186  069E  0478               	iorwf	___awdiv@divisor+1,w
  1187  069F  1903               	btfsc	3,2
  1188  06A0  2EA2               	goto	u331
  1189  06A1  2EA3               	goto	u330
  1190  06A2                     u331:
  1191  06A2  2EDA               	goto	l855
  1192  06A3                     u330:
  1193  06A3                     l837:
  1194  06A3  01A6               	clrf	___awdiv@counter
  1195  06A4  0AA6               	incf	___awdiv@counter,f
  1196  06A5  2EB1               	goto	l843
  1197  06A6                     l839:
  1198  06A6  3001               	movlw	1
  1199  06A7                     u345:
  1200  06A7  1003               	clrc
  1201  06A8  0DF7               	rlf	___awdiv@divisor,f
  1202  06A9  0DF8               	rlf	___awdiv@divisor+1,f
  1203  06AA  3EFF               	addlw	-1
  1204  06AB  1D03               	skipz
  1205  06AC  2EA7               	goto	u345
  1206  06AD                     l841:
  1207  06AD  3001               	movlw	1
  1208  06AE  00FB               	movwf	??___awdiv
  1209  06AF  087B               	movf	??___awdiv,w
  1210  06B0  07A6               	addwf	___awdiv@counter,f
  1211  06B1                     l843:
  1212  06B1  1FF8               	btfss	___awdiv@divisor+1,7
  1213  06B2  2EB4               	goto	u351
  1214  06B3  2EB5               	goto	u350
  1215  06B4                     u351:
  1216  06B4  2EA6               	goto	l839
  1217  06B5                     u350:
  1218  06B5                     l845:
  1219  06B5  3001               	movlw	1
  1220  06B6                     u365:
  1221  06B6  1003               	clrc
  1222  06B7  0DA8               	rlf	___awdiv@quotient,f
  1223  06B8  0DA9               	rlf	___awdiv@quotient+1,f
  1224  06B9  3EFF               	addlw	-1
  1225  06BA  1D03               	skipz
  1226  06BB  2EB6               	goto	u365
  1227  06BC  0878               	movf	___awdiv@divisor+1,w
  1228  06BD  027A               	subwf	___awdiv@dividend+1,w
  1229  06BE  1D03               	skipz
  1230  06BF  2EC2               	goto	u375
  1231  06C0  0877               	movf	___awdiv@divisor,w
  1232  06C1  0279               	subwf	___awdiv@dividend,w
  1233  06C2                     u375:
  1234  06C2  1C03               	skipc
  1235  06C3  2EC5               	goto	u371
  1236  06C4  2EC6               	goto	u370
  1237  06C5                     u371:
  1238  06C5  2ECD               	goto	l851
  1239  06C6                     u370:
  1240  06C6                     l847:
  1241  06C6  0877               	movf	___awdiv@divisor,w
  1242  06C7  02F9               	subwf	___awdiv@dividend,f
  1243  06C8  0878               	movf	___awdiv@divisor+1,w
  1244  06C9  1C03               	skipc
  1245  06CA  03FA               	decf	___awdiv@dividend+1,f
  1246  06CB  02FA               	subwf	___awdiv@dividend+1,f
  1247  06CC                     l849:
  1248  06CC  1428               	bsf	___awdiv@quotient,0
  1249  06CD                     l851:
  1250  06CD  3001               	movlw	1
  1251  06CE                     u385:
  1252  06CE  1003               	clrc
  1253  06CF  0CF8               	rrf	___awdiv@divisor+1,f
  1254  06D0  0CF7               	rrf	___awdiv@divisor,f
  1255  06D1  3EFF               	addlw	-1
  1256  06D2  1D03               	skipz
  1257  06D3  2ECE               	goto	u385
  1258  06D4                     l853:
  1259  06D4  3001               	movlw	1
  1260  06D5  02A6               	subwf	___awdiv@counter,f
  1261  06D6  1D03               	btfss	3,2
  1262  06D7  2ED9               	goto	u391
  1263  06D8  2EDA               	goto	u390
  1264  06D9                     u391:
  1265  06D9  2EB5               	goto	l845
  1266  06DA                     u390:
  1267  06DA                     l855:
  1268  06DA  0827               	movf	___awdiv@sign,w
  1269  06DB  1903               	btfsc	3,2
  1270  06DC  2EDE               	goto	u401
  1271  06DD  2EDF               	goto	u400
  1272  06DE                     u401:
  1273  06DE  2EE4               	goto	l859
  1274  06DF                     u400:
  1275  06DF                     l857:
  1276  06DF  09A8               	comf	___awdiv@quotient,f
  1277  06E0  09A9               	comf	___awdiv@quotient+1,f
  1278  06E1  0AA8               	incf	___awdiv@quotient,f
  1279  06E2  1903               	skipnz
  1280  06E3  0AA9               	incf	___awdiv@quotient+1,f
  1281  06E4                     l859:
  1282  06E4  0829               	movf	___awdiv@quotient+1,w
  1283  06E5  00F8               	movwf	?___awdiv+1
  1284  06E6  0828               	movf	___awdiv@quotient,w
  1285  06E7  00F7               	movwf	?___awdiv
  1286  06E8                     l296:
  1287  06E8  0008               	return
  1288  06E9                     __end_of___awdiv:
  1289  007E                     btemp	set	126	;btemp
  1290  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      4      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _lcd->_pulse
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2986
                            ___awdiv
                            ___awmod
                                _lcd
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                5     1      4     522
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     0      4    1260
                                              2 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _lcd
     _pulse
   _timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 25 16:00:09 2023

                     l42 05DE                       l39 05F7                       l48 0626  
           ___awdiv@sign 0027                      l309 067F                      l296 06E8  
                    l801 05CC                      l803 05D7                      l811 0609  
                    l821 0683                      l805 05D9                      l813 0617  
                    l901 06E9                      l831 0697                      l823 0687  
                    l815 061A                      l807 05F8                      l911 0719  
                    l903 06F9                      l841 06AD                      l833 069B  
                    l825 068C                      l817 0624                      l809 0606  
                    l921 0769                      l913 071D                      l905 0705  
                    l851 06CD                      l843 06B1                      l835 069D  
                    l827 068E                      l819 0680                      l931 07B3  
                    l923 0775                      l915 0723                      l907 0711  
                    l853 06D4                      l845 06B5                      l837 06A3  
                    l829 0692                      l933 07C6                      l925 0788  
                    l917 0736                      l909 0715                      l847 06C6  
                    l839 06A6                      l855 06DA                      l871 0633  
                    l863 0627                      l927 0794                      l919 0756  
                    l935 07C7                      l857 06DF                      l849 06CC  
                    l881 064C                      l873 0637                      l865 0628  
                    l937 07D4                      l929 07A7                      l859 06E4  
                    l891 066B                      l883 0650                      l875 063C  
                    l867 062C                      l795 05DF                      l939 07E1  
                    l885 0654                      l877 0642                      l893 0671  
                    l869 0631                      l797 05E2                      l895 0676  
                    l887 065E                      l879 0645                      l799 05EB  
                    l897 067B                      l889 0664                      _RC0 0038  
                    _RC5 003D                      _RC6 003E                      _RC7 003F  
                    u300 0624                      u301 0623                      u310 0687  
                    u311 0686                      u400 06DF                      u320 0692  
                    u401 06DE                      u321 0691                      u305 0620  
                    u330 06A3                      u410 062C                      u331 06A2  
                    u411 062B                      u420 0637                      u260 05D3  
                    u500 071D                      u421 0636                      u261 05CF  
                    u501 071C                      u350 06B5                      u430 0642  
                    u351 06B4                      u431 0641                      u280 0606  
                    u345 06A7                      u281 0605                      u370 06C6  
                    u450 0654                      u274 05D6                      u290 0617  
                    u371 06C5                      u451 0653                      u291 0616  
                    u460 065E                      u365 06B6                      u461 065D  
                    u445 0646                      u517 05E6                      u285 0602  
                    u390 06DA                      u391 06D9                      u375 06C2  
                    u527 05F2                      u295 0613                      u480 0671  
                    u385 06CE                      u481 0670                      u465 065A  
                    u490 0676                      u491 0675                      u475 0665  
                    _lcd 05CC             ___awmod@sign 0076                     ?_lcd 0072  
                   _T0IF 005A                     _TMR0 0001                     _dig1 0024  
                   _dig2 0022                     _dig3 0020                     _main 06E9  
                   lcd@a 0072                     lcd@b 0074                     btemp 007E  
                   start 0000                    ??_lcd 0076                    ?_main 0070  
        __end_of___awdiv 06E9          __end_of___awmod 0680                    _ANSEL 0188  
        ___awdiv@divisor 0077          ___awdiv@counter 0026                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _count 007C                    _timer 05F8                    _pulse 05DF  
                  status 0003                    wtemp0 007E          __initialization 07F2  
           __end_of_main 07F2                   ??_main 007C         ___awdiv@dividend 0079  
                 ?_timer 0070                   ?_pulse 0070                   _ANSELH 0189  
              ??___awdiv 007B                ??___awmod 0074         ___awdiv@quotient 0028  
        ___awmod@divisor 0070          ___awmod@counter 0075                   timer@a 0070  
                 timer@b 0072  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_timer 0627            __end_of_pulse 05F8                  ??_timer 0074  
                ??_pulse 0070               __pbssBANK0 0020               __pmaintext 06E9  
                ___awdiv 0680                  ___awmod 0627                  __ptext1 05F8  
                __ptext2 05CC                  __ptext3 05DF                  __ptext4 0627  
                __ptext5 0680             __size_of_lcd 0013         ___awmod@dividend 0072  
   end_of_initialization 07FC      start_initialization 07F2              __end_of_lcd 05DF  
            __pbssCOMMON 007C                ___latbits 0002            __pcstackBANK0 0026  
               ?___awdiv 0077                 ?___awmod 0070           __size_of_timer 002F  
         __size_of_pulse 0019         __size_of___awdiv 0069         __size_of___awmod 0059  
          __size_of_main 0109               _OPTION_REG 0081  
