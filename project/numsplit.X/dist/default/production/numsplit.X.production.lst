

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 13 16:00:59 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0007                     _PORTC	set	7
   206  0008                     _PORTD	set	8
   207  003E                     _RC6	set	62
   208  003D                     _RC5	set	61
   209  003F                     _RC7	set	63
   210  0088                     _TRISD	set	136
   211  0087                     _TRISC	set	135
   212                           
   213                           	psect	cinit
   214  07FC                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07FC                     __initialization:
   218  07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  07FC                     __end_of__initialization:
   222  07FC  0183               	clrf	3
   223  07FD  120A  118A  2E0E   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:
   227  0070                     ?_display:
   228  0070                     ??_pulse:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_main:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_pulse:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?___awmod:	
   238                           ; 2 bytes @ 0x0
   239                           
   240  0070                     ___awmod@divisor:	
   241                           ; 2 bytes @ 0x0
   242                           
   243                           
   244                           ; 2 bytes @ 0x0
   245  0070                     	ds	2
   246  0072                     ?_LCD:
   247  0072                     LCD@a:	
   248                           ; 1 bytes @ 0x2
   249                           
   250  0072                     ___awmod@dividend:	
   251                           ; 2 bytes @ 0x2
   252                           
   253                           
   254                           ; 2 bytes @ 0x2
   255  0072                     	ds	2
   256  0074                     ??___awmod:
   257  0074                     LCD@b:	
   258                           ; 1 bytes @ 0x4
   259                           
   260                           
   261                           ; 2 bytes @ 0x4
   262  0074                     	ds	1
   263  0075                     ___awmod@counter:
   264                           
   265                           ; 1 bytes @ 0x5
   266  0075                     	ds	1
   267  0076                     ??_LCD:
   268  0076                     ___awmod@sign:	
   269                           ; 1 bytes @ 0x6
   270                           
   271                           
   272                           ; 1 bytes @ 0x6
   273  0076                     	ds	1
   274  0077                     ?___awdiv:
   275  0077                     ___awdiv@divisor:	
   276                           ; 2 bytes @ 0x7
   277                           
   278                           
   279                           ; 2 bytes @ 0x7
   280  0077                     	ds	2
   281  0079                     ___awdiv@dividend:
   282                           
   283                           ; 2 bytes @ 0x9
   284  0079                     	ds	2
   285  007B                     ??___awdiv:
   286                           
   287                           ; 1 bytes @ 0xB
   288  007B                     	ds	1
   289  007C                     ??_display:
   290                           
   291                           ; 1 bytes @ 0xC
   292  007C                     	ds	2
   293  007E                     ??_main:
   294                           
   295                           	psect	cstackBANK0
   296  0020                     __pcstackBANK0:	
   297                           ; 1 bytes @ 0xE
   298                           
   299  0020                     ___awdiv@counter:
   300                           
   301                           ; 1 bytes @ 0x0
   302  0020                     	ds	1
   303  0021                     ___awdiv@sign:
   304                           
   305                           ; 1 bytes @ 0x1
   306  0021                     	ds	1
   307  0022                     ___awdiv@quotient:
   308                           
   309                           ; 2 bytes @ 0x2
   310  0022                     	ds	2
   311  0024                     display@a:
   312                           
   313                           ; 2 bytes @ 0x4
   314  0024                     	ds	2
   315  0026                     display@b:
   316                           
   317                           ; 2 bytes @ 0x6
   318  0026                     	ds	2
   319  0028                     display@c:
   320                           
   321                           ; 2 bytes @ 0x8
   322  0028                     	ds	2
   323  002A                     display@d:
   324                           
   325                           ; 2 bytes @ 0xA
   326  002A                     	ds	2
   327  002C                     display@i:
   328                           
   329                           ; 2 bytes @ 0xC
   330  002C                     	ds	2
   331                           
   332                           	psect	maintext
   333  060E                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 30 in file "numspilt.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called: 3
   359 ;; This function calls:
   360 ;;		_LCD
   361 ;;		_display
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           
   368                           ;psect for function _main
   369  060E                     _main:
   370  060E                     l893:	
   371                           ;incstack = 0
   372                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   373                           
   374                           
   375                           ;numspilt.c: 32:     TRISC=0x00;
   376  060E  1683               	bsf	3,5	;RP0=1, select bank1
   377  060F  1303               	bcf	3,6	;RP1=0, select bank1
   378  0610  0187               	clrf	7	;volatile
   379                           
   380                           ;numspilt.c: 33:     PORTC=0x00;
   381  0611  1283               	bcf	3,5	;RP0=0, select bank0
   382  0612  1303               	bcf	3,6	;RP1=0, select bank0
   383  0613  0187               	clrf	7	;volatile
   384                           
   385                           ;numspilt.c: 34:     TRISD=0x00;
   386  0614  1683               	bsf	3,5	;RP0=1, select bank1
   387  0615  1303               	bcf	3,6	;RP1=0, select bank1
   388  0616  0188               	clrf	8	;volatile
   389                           
   390                           ;numspilt.c: 35:     PORTD=0x00;
   391  0617  1283               	bcf	3,5	;RP0=0, select bank0
   392  0618  1303               	bcf	3,6	;RP1=0, select bank0
   393  0619  0188               	clrf	8	;volatile
   394  061A                     l895:
   395                           
   396                           ;numspilt.c: 36:     LCD(0x02,0);
   397  061A  3002               	movlw	2
   398  061B  00F2               	movwf	LCD@a
   399  061C  3000               	movlw	0
   400  061D  00F3               	movwf	LCD@a+1
   401  061E  3000               	movlw	0
   402  061F  00F4               	movwf	LCD@b
   403  0620  00F5               	movwf	LCD@b+1
   404  0621  120A  118A  25E5  120A  118A  	fcall	_LCD
   405  0626                     l897:
   406                           
   407                           ;numspilt.c: 37:     LCD(0x28,0);
   408  0626  3028               	movlw	40
   409  0627  00F2               	movwf	LCD@a
   410  0628  3000               	movlw	0
   411  0629  00F3               	movwf	LCD@a+1
   412  062A  3000               	movlw	0
   413  062B  00F4               	movwf	LCD@b
   414  062C  00F5               	movwf	LCD@b+1
   415  062D  120A  118A  25E5  120A  118A  	fcall	_LCD
   416  0632                     l899:
   417                           
   418                           ;numspilt.c: 38:     LCD(0x0E,0);
   419  0632  300E               	movlw	14
   420  0633  00F2               	movwf	LCD@a
   421  0634  3000               	movlw	0
   422  0635  00F3               	movwf	LCD@a+1
   423  0636  3000               	movlw	0
   424  0637  00F4               	movwf	LCD@b
   425  0638  00F5               	movwf	LCD@b+1
   426  0639  120A  118A  25E5  120A  118A  	fcall	_LCD
   427  063E                     l901:
   428                           
   429                           ;numspilt.c: 40:     {;numspilt.c: 41:         LCD(0x80,0);
   430  063E  3080               	movlw	128
   431  063F  00F2               	movwf	LCD@a
   432  0640  3000               	movlw	0
   433  0641  00F3               	movwf	LCD@a+1
   434  0642  3000               	movlw	0
   435  0643  00F4               	movwf	LCD@b
   436  0644  00F5               	movwf	LCD@b+1
   437  0645  120A  118A  25E5  120A  118A  	fcall	_LCD
   438  064A                     l903:
   439                           
   440                           ;numspilt.c: 43:     display();
   441  064A  120A  118A  2715  120A  118A  	fcall	_display
   442  064F  2E3E               	goto	l901
   443  0650  120A  118A  2800   	ljmp	start
   444  0653                     __end_of_main:
   445                           
   446                           	psect	text1
   447  0715                     __ptext1:	
   448 ;; *************** function _display *****************
   449 ;; Defined at:
   450 ;;		line 47 in file "numspilt.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  i               2   12[BANK0 ] int 
   455 ;;  d               2   10[BANK0 ] int 
   456 ;;  c               2    8[BANK0 ] int 
   457 ;;  b               2    6[BANK0 ] int 
   458 ;;  a               2    4[BANK0 ] int 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         0       0       0       0       0
   469 ;;      Locals:         0      10       0       0       0
   470 ;;      Temps:          2       0       0       0       0
   471 ;;      Totals:         2      10       0       0       0
   472 ;;Total ram usage:       12 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; Hardware stack levels required when called: 2
   475 ;; This function calls:
   476 ;;		_LCD
   477 ;;		___awdiv
   478 ;;		___awmod
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _display
   486  0715                     _display:
   487  0715                     l865:	
   488                           ;incstack = 0
   489                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   490                           
   491                           
   492                           ;numspilt.c: 49:      int i,a,b,c,d;;numspilt.c: 50:    for(i=1;i<=9999;i++)
   493  0715  3001               	movlw	1
   494  0716  1283               	bcf	3,5	;RP0=0, select bank0
   495  0717  1303               	bcf	3,6	;RP1=0, select bank0
   496  0718  00AC               	movwf	display@i
   497  0719  3000               	movlw	0
   498  071A  00AD               	movwf	display@i+1
   499  071B                     l871:
   500                           
   501                           ;numspilt.c: 51:      {;numspilt.c: 52:        a=(i/1000);
   502  071B  30E8               	movlw	232
   503  071C  00F7               	movwf	___awdiv@divisor
   504  071D  3003               	movlw	3
   505  071E  00F8               	movwf	___awdiv@divisor+1
   506  071F  1283               	bcf	3,5	;RP0=0, select bank0
   507  0720  1303               	bcf	3,6	;RP1=0, select bank0
   508  0721  082D               	movf	display@i+1,w
   509  0722  00FA               	movwf	___awdiv@dividend+1
   510  0723  082C               	movf	display@i,w
   511  0724  00F9               	movwf	___awdiv@dividend
   512  0725  120A  118A  26AC  120A  118A  	fcall	___awdiv
   513  072A  0878               	movf	?___awdiv+1,w
   514  072B  1283               	bcf	3,5	;RP0=0, select bank0
   515  072C  1303               	bcf	3,6	;RP1=0, select bank0
   516  072D  00A5               	movwf	display@a+1
   517  072E  0877               	movf	?___awdiv,w
   518  072F  00A4               	movwf	display@a
   519                           
   520                           ;numspilt.c: 53:        b=((i%1000)/100);
   521  0730  3064               	movlw	100
   522  0731  00F7               	movwf	___awdiv@divisor
   523  0732  3000               	movlw	0
   524  0733  00F8               	movwf	___awdiv@divisor+1
   525  0734  082D               	movf	display@i+1,w
   526  0735  00F3               	movwf	___awmod@dividend+1
   527  0736  082C               	movf	display@i,w
   528  0737  00F2               	movwf	___awmod@dividend
   529  0738  30E8               	movlw	232
   530  0739  00F0               	movwf	___awmod@divisor
   531  073A  3003               	movlw	3
   532  073B  00F1               	movwf	___awmod@divisor+1
   533  073C  120A  118A  2653  120A  118A  	fcall	___awmod
   534  0741  0871               	movf	?___awmod+1,w
   535  0742  00FA               	movwf	___awdiv@dividend+1
   536  0743  0870               	movf	?___awmod,w
   537  0744  00F9               	movwf	___awdiv@dividend
   538  0745  120A  118A  26AC  120A  118A  	fcall	___awdiv
   539  074A  0878               	movf	?___awdiv+1,w
   540  074B  1283               	bcf	3,5	;RP0=0, select bank0
   541  074C  1303               	bcf	3,6	;RP1=0, select bank0
   542  074D  00A7               	movwf	display@b+1
   543  074E  0877               	movf	?___awdiv,w
   544  074F  00A6               	movwf	display@b
   545                           
   546                           ;numspilt.c: 54:        c=((i/100)%10);
   547  0750  300A               	movlw	10
   548  0751  00F0               	movwf	___awmod@divisor
   549  0752  3000               	movlw	0
   550  0753  00F1               	movwf	___awmod@divisor+1
   551  0754  3064               	movlw	100
   552  0755  00F7               	movwf	___awdiv@divisor
   553  0756  3000               	movlw	0
   554  0757  00F8               	movwf	___awdiv@divisor+1
   555  0758  082D               	movf	display@i+1,w
   556  0759  00FA               	movwf	___awdiv@dividend+1
   557  075A  082C               	movf	display@i,w
   558  075B  00F9               	movwf	___awdiv@dividend
   559  075C  120A  118A  26AC  120A  118A  	fcall	___awdiv
   560  0761  0878               	movf	?___awdiv+1,w
   561  0762  00F3               	movwf	___awmod@dividend+1
   562  0763  0877               	movf	?___awdiv,w
   563  0764  00F2               	movwf	___awmod@dividend
   564  0765  120A  118A  2653  120A  118A  	fcall	___awmod
   565  076A  0871               	movf	?___awmod+1,w
   566  076B  1283               	bcf	3,5	;RP0=0, select bank0
   567  076C  1303               	bcf	3,6	;RP1=0, select bank0
   568  076D  00A9               	movwf	display@c+1
   569  076E  0870               	movf	?___awmod,w
   570  076F  00A8               	movwf	display@c
   571                           
   572                           ;numspilt.c: 55:        d=i%10;
   573  0770  300A               	movlw	10
   574  0771  00F0               	movwf	___awmod@divisor
   575  0772  3000               	movlw	0
   576  0773  00F1               	movwf	___awmod@divisor+1
   577  0774  082D               	movf	display@i+1,w
   578  0775  00F3               	movwf	___awmod@dividend+1
   579  0776  082C               	movf	display@i,w
   580  0777  00F2               	movwf	___awmod@dividend
   581  0778  120A  118A  2653  120A  118A  	fcall	___awmod
   582  077D  0871               	movf	?___awmod+1,w
   583  077E  1283               	bcf	3,5	;RP0=0, select bank0
   584  077F  1303               	bcf	3,6	;RP1=0, select bank0
   585  0780  00AB               	movwf	display@d+1
   586  0781  0870               	movf	?___awmod,w
   587  0782  00AA               	movwf	display@d
   588  0783                     l873:
   589                           
   590                           ;numspilt.c: 56:        LCD(0x80,0);
   591  0783  3080               	movlw	128
   592  0784  00F2               	movwf	LCD@a
   593  0785  3000               	movlw	0
   594  0786  00F3               	movwf	LCD@a+1
   595  0787  3000               	movlw	0
   596  0788  00F4               	movwf	LCD@b
   597  0789  00F5               	movwf	LCD@b+1
   598  078A  120A  118A  25E5  120A  118A  	fcall	_LCD
   599  078F                     l875:
   600                           
   601                           ;numspilt.c: 57:           RC5=1;
   602  078F  1283               	bcf	3,5	;RP0=0, select bank0
   603  0790  1303               	bcf	3,6	;RP1=0, select bank0
   604  0791  1687               	bsf	7,5	;volatile
   605  0792                     l877:
   606                           
   607                           ;numspilt.c: 58:           RC6=0;
   608  0792  1307               	bcf	7,6	;volatile
   609  0793                     l879:
   610                           
   611                           ;numspilt.c: 61:           LCD((0x30+a),1);
   612  0793  0824               	movf	display@a,w
   613  0794  3E30               	addlw	48
   614  0795  00F2               	movwf	LCD@a
   615  0796  0825               	movf	display@a+1,w
   616  0797  1803               	skipnc
   617  0798  3E01               	addlw	1
   618  0799  3E00               	addlw	0
   619  079A  00F3               	movwf	LCD@a+1
   620  079B  3001               	movlw	1
   621  079C  00F4               	movwf	LCD@b
   622  079D  3000               	movlw	0
   623  079E  00F5               	movwf	LCD@b+1
   624  079F  120A  118A  25E5  120A  118A  	fcall	_LCD
   625  07A4                     l881:
   626                           
   627                           ;numspilt.c: 65:           LCD((0x30+b),1);
   628  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   629  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   630  07A6  0826               	movf	display@b,w
   631  07A7  3E30               	addlw	48
   632  07A8  00F2               	movwf	LCD@a
   633  07A9  0827               	movf	display@b+1,w
   634  07AA  1803               	skipnc
   635  07AB  3E01               	addlw	1
   636  07AC  3E00               	addlw	0
   637  07AD  00F3               	movwf	LCD@a+1
   638  07AE  3001               	movlw	1
   639  07AF  00F4               	movwf	LCD@b
   640  07B0  3000               	movlw	0
   641  07B1  00F5               	movwf	LCD@b+1
   642  07B2  120A  118A  25E5  120A  118A  	fcall	_LCD
   643  07B7                     l883:
   644                           
   645                           ;numspilt.c: 69:            LCD((0x30+c),1);
   646  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   647  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   648  07B9  0828               	movf	display@c,w
   649  07BA  3E30               	addlw	48
   650  07BB  00F2               	movwf	LCD@a
   651  07BC  0829               	movf	display@c+1,w
   652  07BD  1803               	skipnc
   653  07BE  3E01               	addlw	1
   654  07BF  3E00               	addlw	0
   655  07C0  00F3               	movwf	LCD@a+1
   656  07C1  3001               	movlw	1
   657  07C2  00F4               	movwf	LCD@b
   658  07C3  3000               	movlw	0
   659  07C4  00F5               	movwf	LCD@b+1
   660  07C5  120A  118A  25E5  120A  118A  	fcall	_LCD
   661  07CA                     l885:
   662                           
   663                           ;numspilt.c: 73:            LCD((0x30+d),1);
   664  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   665  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   666  07CC  082A               	movf	display@d,w
   667  07CD  3E30               	addlw	48
   668  07CE  00F2               	movwf	LCD@a
   669  07CF  082B               	movf	display@d+1,w
   670  07D0  1803               	skipnc
   671  07D1  3E01               	addlw	1
   672  07D2  3E00               	addlw	0
   673  07D3  00F3               	movwf	LCD@a+1
   674  07D4  3001               	movlw	1
   675  07D5  00F4               	movwf	LCD@b
   676  07D6  3000               	movlw	0
   677  07D7  00F5               	movwf	LCD@b+1
   678  07D8  120A  118A  25E5  120A  118A  	fcall	_LCD
   679  07DD                     l887:
   680                           
   681                           ;numspilt.c: 74:          _delay((unsigned long)((100)*(400000/4000.0)));
   682  07DD  300D               	movlw	13
   683  07DE  00FD               	movwf	??_display+1
   684  07DF  30FB               	movlw	251
   685  07E0  00FC               	movwf	??_display
   686  07E1                     u477:
   687  07E1  0BFC               	decfsz	??_display,f
   688  07E2  2FE1               	goto	u477
   689  07E3  0BFD               	decfsz	??_display+1,f
   690  07E4  2FE1               	goto	u477
   691  07E5  2FE6               	nop2
   692  07E6                     l889:
   693                           
   694                           ;numspilt.c: 76:      }
   695  07E6  3001               	movlw	1
   696  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   697  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   698  07E9  07AC               	addwf	display@i,f
   699  07EA  1803               	skipnc
   700  07EB  0AAD               	incf	display@i+1,f
   701  07EC  3000               	movlw	0
   702  07ED  07AD               	addwf	display@i+1,f
   703  07EE                     l891:
   704  07EE  082D               	movf	display@i+1,w
   705  07EF  3A80               	xorlw	128
   706  07F0  00FF               	movwf	btemp+1
   707  07F1  30A7               	movlw	167
   708  07F2  027F               	subwf	btemp+1,w
   709  07F3  1D03               	skipz
   710  07F4  2FF7               	goto	u465
   711  07F5  3010               	movlw	16
   712  07F6  022C               	subwf	display@i,w
   713  07F7                     u465:
   714  07F7  1C03               	skipc
   715  07F8  2FFA               	goto	u461
   716  07F9  2FFB               	goto	u460
   717  07FA                     u461:
   718  07FA  2F1B               	goto	l871
   719  07FB                     u460:
   720  07FB                     l37:
   721  07FB  0008               	return
   722  07FC                     __end_of_display:
   723                           
   724                           	psect	text2
   725  0653                     __ptext2:	
   726 ;; *************** function ___awmod *****************
   727 ;; Defined at:
   728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  divisor         2    0[COMMON] int 
   731 ;;  dividend        2    2[COMMON] int 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  sign            1    6[COMMON] unsigned char 
   734 ;;  counter         1    5[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  2    0[COMMON] int 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         4       0       0       0       0
   745 ;;      Locals:         2       0       0       0       0
   746 ;;      Temps:          1       0       0       0       0
   747 ;;      Totals:         7       0       0       0       0
   748 ;;Total ram usage:        7 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_display
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function ___awmod
   759  0653                     ___awmod:
   760  0653                     l827:	
   761                           ;incstack = 0
   762                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   763                           
   764  0653  01F6               	clrf	___awmod@sign
   765  0654                     l829:
   766  0654  1FF3               	btfss	___awmod@dividend+1,7
   767  0655  2E57               	goto	u371
   768  0656  2E58               	goto	u370
   769  0657                     u371:
   770  0657  2E5F               	goto	l835
   771  0658                     u370:
   772  0658                     l831:
   773  0658  09F2               	comf	___awmod@dividend,f
   774  0659  09F3               	comf	___awmod@dividend+1,f
   775  065A  0AF2               	incf	___awmod@dividend,f
   776  065B  1903               	skipnz
   777  065C  0AF3               	incf	___awmod@dividend+1,f
   778  065D                     l833:
   779  065D  01F6               	clrf	___awmod@sign
   780  065E  0AF6               	incf	___awmod@sign,f
   781  065F                     l835:
   782  065F  1FF1               	btfss	___awmod@divisor+1,7
   783  0660  2E62               	goto	u381
   784  0661  2E63               	goto	u380
   785  0662                     u381:
   786  0662  2E68               	goto	l839
   787  0663                     u380:
   788  0663                     l837:
   789  0663  09F0               	comf	___awmod@divisor,f
   790  0664  09F1               	comf	___awmod@divisor+1,f
   791  0665  0AF0               	incf	___awmod@divisor,f
   792  0666  1903               	skipnz
   793  0667  0AF1               	incf	___awmod@divisor+1,f
   794  0668                     l839:
   795  0668  0870               	movf	___awmod@divisor,w
   796  0669  0471               	iorwf	___awmod@divisor+1,w
   797  066A  1903               	btfsc	3,2
   798  066B  2E6D               	goto	u391
   799  066C  2E6E               	goto	u390
   800  066D                     u391:
   801  066D  2E9D               	goto	l857
   802  066E                     u390:
   803  066E                     l841:
   804  066E  01F5               	clrf	___awmod@counter
   805  066F  0AF5               	incf	___awmod@counter,f
   806  0670  2E7C               	goto	l847
   807  0671                     l843:
   808  0671  3001               	movlw	1
   809  0672                     u405:
   810  0672  1003               	clrc
   811  0673  0DF0               	rlf	___awmod@divisor,f
   812  0674  0DF1               	rlf	___awmod@divisor+1,f
   813  0675  3EFF               	addlw	-1
   814  0676  1D03               	skipz
   815  0677  2E72               	goto	u405
   816  0678                     l845:
   817  0678  3001               	movlw	1
   818  0679  00F4               	movwf	??___awmod
   819  067A  0874               	movf	??___awmod,w
   820  067B  07F5               	addwf	___awmod@counter,f
   821  067C                     l847:
   822  067C  1FF1               	btfss	___awmod@divisor+1,7
   823  067D  2E7F               	goto	u411
   824  067E  2E80               	goto	u410
   825  067F                     u411:
   826  067F  2E71               	goto	l843
   827  0680                     u410:
   828  0680                     l849:
   829  0680  0871               	movf	___awmod@divisor+1,w
   830  0681  0273               	subwf	___awmod@dividend+1,w
   831  0682  1D03               	skipz
   832  0683  2E86               	goto	u425
   833  0684  0870               	movf	___awmod@divisor,w
   834  0685  0272               	subwf	___awmod@dividend,w
   835  0686                     u425:
   836  0686  1C03               	skipc
   837  0687  2E89               	goto	u421
   838  0688  2E8A               	goto	u420
   839  0689                     u421:
   840  0689  2E90               	goto	l853
   841  068A                     u420:
   842  068A                     l851:
   843  068A  0870               	movf	___awmod@divisor,w
   844  068B  02F2               	subwf	___awmod@dividend,f
   845  068C  0871               	movf	___awmod@divisor+1,w
   846  068D  1C03               	skipc
   847  068E  03F3               	decf	___awmod@dividend+1,f
   848  068F  02F3               	subwf	___awmod@dividend+1,f
   849  0690                     l853:
   850  0690  3001               	movlw	1
   851  0691                     u435:
   852  0691  1003               	clrc
   853  0692  0CF1               	rrf	___awmod@divisor+1,f
   854  0693  0CF0               	rrf	___awmod@divisor,f
   855  0694  3EFF               	addlw	-1
   856  0695  1D03               	skipz
   857  0696  2E91               	goto	u435
   858  0697                     l855:
   859  0697  3001               	movlw	1
   860  0698  02F5               	subwf	___awmod@counter,f
   861  0699  1D03               	btfss	3,2
   862  069A  2E9C               	goto	u441
   863  069B  2E9D               	goto	u440
   864  069C                     u441:
   865  069C  2E80               	goto	l849
   866  069D                     u440:
   867  069D                     l857:
   868  069D  0876               	movf	___awmod@sign,w
   869  069E  1903               	btfsc	3,2
   870  069F  2EA1               	goto	u451
   871  06A0  2EA2               	goto	u450
   872  06A1                     u451:
   873  06A1  2EA7               	goto	l861
   874  06A2                     u450:
   875  06A2                     l859:
   876  06A2  09F2               	comf	___awmod@dividend,f
   877  06A3  09F3               	comf	___awmod@dividend+1,f
   878  06A4  0AF2               	incf	___awmod@dividend,f
   879  06A5  1903               	skipnz
   880  06A6  0AF3               	incf	___awmod@dividend+1,f
   881  06A7                     l861:
   882  06A7  0873               	movf	___awmod@dividend+1,w
   883  06A8  00F1               	movwf	?___awmod+1
   884  06A9  0872               	movf	___awmod@dividend,w
   885  06AA  00F0               	movwf	?___awmod
   886  06AB                     l289:
   887  06AB  0008               	return
   888  06AC                     __end_of___awmod:
   889                           
   890                           	psect	text3
   891  06AC                     __ptext3:	
   892 ;; *************** function ___awdiv *****************
   893 ;; Defined at:
   894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  divisor         2    7[COMMON] int 
   897 ;;  dividend        2    9[COMMON] int 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  quotient        2    2[BANK0 ] int 
   900 ;;  sign            1    1[BANK0 ] unsigned char 
   901 ;;  counter         1    0[BANK0 ] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2    7[COMMON] int 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         4       0       0       0       0
   912 ;;      Locals:         0       4       0       0       0
   913 ;;      Temps:          1       0       0       0       0
   914 ;;      Totals:         5       4       0       0       0
   915 ;;Total ram usage:        9 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_display
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function ___awdiv
   926  06AC                     ___awdiv:
   927  06AC                     l783:	
   928                           ;incstack = 0
   929                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   930                           
   931  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   932  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   933  06AE  01A1               	clrf	___awdiv@sign
   934  06AF                     l785:
   935  06AF  1FF8               	btfss	___awdiv@divisor+1,7
   936  06B0  2EB2               	goto	u271
   937  06B1  2EB3               	goto	u270
   938  06B2                     u271:
   939  06B2  2EBA               	goto	l791
   940  06B3                     u270:
   941  06B3                     l787:
   942  06B3  09F7               	comf	___awdiv@divisor,f
   943  06B4  09F8               	comf	___awdiv@divisor+1,f
   944  06B5  0AF7               	incf	___awdiv@divisor,f
   945  06B6  1903               	skipnz
   946  06B7  0AF8               	incf	___awdiv@divisor+1,f
   947  06B8                     l789:
   948  06B8  01A1               	clrf	___awdiv@sign
   949  06B9  0AA1               	incf	___awdiv@sign,f
   950  06BA                     l791:
   951  06BA  1FFA               	btfss	___awdiv@dividend+1,7
   952  06BB  2EBD               	goto	u281
   953  06BC  2EBE               	goto	u280
   954  06BD                     u281:
   955  06BD  2EC7               	goto	l797
   956  06BE                     u280:
   957  06BE                     l793:
   958  06BE  09F9               	comf	___awdiv@dividend,f
   959  06BF  09FA               	comf	___awdiv@dividend+1,f
   960  06C0  0AF9               	incf	___awdiv@dividend,f
   961  06C1  1903               	skipnz
   962  06C2  0AFA               	incf	___awdiv@dividend+1,f
   963  06C3                     l795:
   964  06C3  3001               	movlw	1
   965  06C4  00FB               	movwf	??___awdiv
   966  06C5  087B               	movf	??___awdiv,w
   967  06C6  06A1               	xorwf	___awdiv@sign,f
   968  06C7                     l797:
   969  06C7  01A2               	clrf	___awdiv@quotient
   970  06C8  01A3               	clrf	___awdiv@quotient+1
   971  06C9                     l799:
   972  06C9  0877               	movf	___awdiv@divisor,w
   973  06CA  0478               	iorwf	___awdiv@divisor+1,w
   974  06CB  1903               	btfsc	3,2
   975  06CC  2ECE               	goto	u291
   976  06CD  2ECF               	goto	u290
   977  06CE                     u291:
   978  06CE  2F06               	goto	l819
   979  06CF                     u290:
   980  06CF                     l801:
   981  06CF  01A0               	clrf	___awdiv@counter
   982  06D0  0AA0               	incf	___awdiv@counter,f
   983  06D1  2EDD               	goto	l807
   984  06D2                     l803:
   985  06D2  3001               	movlw	1
   986  06D3                     u305:
   987  06D3  1003               	clrc
   988  06D4  0DF7               	rlf	___awdiv@divisor,f
   989  06D5  0DF8               	rlf	___awdiv@divisor+1,f
   990  06D6  3EFF               	addlw	-1
   991  06D7  1D03               	skipz
   992  06D8  2ED3               	goto	u305
   993  06D9                     l805:
   994  06D9  3001               	movlw	1
   995  06DA  00FB               	movwf	??___awdiv
   996  06DB  087B               	movf	??___awdiv,w
   997  06DC  07A0               	addwf	___awdiv@counter,f
   998  06DD                     l807:
   999  06DD  1FF8               	btfss	___awdiv@divisor+1,7
  1000  06DE  2EE0               	goto	u311
  1001  06DF  2EE1               	goto	u310
  1002  06E0                     u311:
  1003  06E0  2ED2               	goto	l803
  1004  06E1                     u310:
  1005  06E1                     l809:
  1006  06E1  3001               	movlw	1
  1007  06E2                     u325:
  1008  06E2  1003               	clrc
  1009  06E3  0DA2               	rlf	___awdiv@quotient,f
  1010  06E4  0DA3               	rlf	___awdiv@quotient+1,f
  1011  06E5  3EFF               	addlw	-1
  1012  06E6  1D03               	skipz
  1013  06E7  2EE2               	goto	u325
  1014  06E8  0878               	movf	___awdiv@divisor+1,w
  1015  06E9  027A               	subwf	___awdiv@dividend+1,w
  1016  06EA  1D03               	skipz
  1017  06EB  2EEE               	goto	u335
  1018  06EC  0877               	movf	___awdiv@divisor,w
  1019  06ED  0279               	subwf	___awdiv@dividend,w
  1020  06EE                     u335:
  1021  06EE  1C03               	skipc
  1022  06EF  2EF1               	goto	u331
  1023  06F0  2EF2               	goto	u330
  1024  06F1                     u331:
  1025  06F1  2EF9               	goto	l815
  1026  06F2                     u330:
  1027  06F2                     l811:
  1028  06F2  0877               	movf	___awdiv@divisor,w
  1029  06F3  02F9               	subwf	___awdiv@dividend,f
  1030  06F4  0878               	movf	___awdiv@divisor+1,w
  1031  06F5  1C03               	skipc
  1032  06F6  03FA               	decf	___awdiv@dividend+1,f
  1033  06F7  02FA               	subwf	___awdiv@dividend+1,f
  1034  06F8                     l813:
  1035  06F8  1422               	bsf	___awdiv@quotient,0
  1036  06F9                     l815:
  1037  06F9  3001               	movlw	1
  1038  06FA                     u345:
  1039  06FA  1003               	clrc
  1040  06FB  0CF8               	rrf	___awdiv@divisor+1,f
  1041  06FC  0CF7               	rrf	___awdiv@divisor,f
  1042  06FD  3EFF               	addlw	-1
  1043  06FE  1D03               	skipz
  1044  06FF  2EFA               	goto	u345
  1045  0700                     l817:
  1046  0700  3001               	movlw	1
  1047  0701  02A0               	subwf	___awdiv@counter,f
  1048  0702  1D03               	btfss	3,2
  1049  0703  2F05               	goto	u351
  1050  0704  2F06               	goto	u350
  1051  0705                     u351:
  1052  0705  2EE1               	goto	l809
  1053  0706                     u350:
  1054  0706                     l819:
  1055  0706  0821               	movf	___awdiv@sign,w
  1056  0707  1903               	btfsc	3,2
  1057  0708  2F0A               	goto	u361
  1058  0709  2F0B               	goto	u360
  1059  070A                     u361:
  1060  070A  2F10               	goto	l823
  1061  070B                     u360:
  1062  070B                     l821:
  1063  070B  09A2               	comf	___awdiv@quotient,f
  1064  070C  09A3               	comf	___awdiv@quotient+1,f
  1065  070D  0AA2               	incf	___awdiv@quotient,f
  1066  070E  1903               	skipnz
  1067  070F  0AA3               	incf	___awdiv@quotient+1,f
  1068  0710                     l823:
  1069  0710  0823               	movf	___awdiv@quotient+1,w
  1070  0711  00F8               	movwf	?___awdiv+1
  1071  0712  0822               	movf	___awdiv@quotient,w
  1072  0713  00F7               	movwf	?___awdiv
  1073  0714                     l276:
  1074  0714  0008               	return
  1075  0715                     __end_of___awdiv:
  1076                           
  1077                           	psect	text4
  1078  05E5                     __ptext4:	
  1079 ;; *************** function _LCD *****************
  1080 ;; Defined at:
  1081 ;;		line 20 in file "numspilt.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  a               2    2[COMMON] int 
  1084 ;;  b               2    4[COMMON] int 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         4       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         6       0       0       0       0
  1100 ;;Total ram usage:        6 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 1
  1103 ;; This function calls:
  1104 ;;		_pulse
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;;		_display
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _LCD
  1113  05E5                     _LCD:
  1114  05E5                     l773:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1117                           
  1118                           
  1119                           ;numspilt.c: 20: void LCD(int a,int b);numspilt.c: 21: {;numspilt.c: 22:     RC5=b;
  1120  05E5  1874               	btfsc	LCD@b,0
  1121  05E6  2DE8               	goto	u241
  1122  05E7  2DEC               	goto	u240
  1123  05E8                     u241:
  1124  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1125  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1126  05EA  1687               	bsf	7,5	;volatile
  1127  05EB  2DEF               	goto	u254
  1128  05EC                     u240:
  1129  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1130  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1131  05EE  1287               	bcf	7,5	;volatile
  1132  05EF                     u254:
  1133                           
  1134                           ;numspilt.c: 23:     RC6=0;
  1135  05EF  1307               	bcf	7,6	;volatile
  1136  05F0                     l775:
  1137                           
  1138                           ;numspilt.c: 24:        PORTD=((a& 0xf0)>>4);
  1139  05F0  0873               	movf	LCD@a+1,w
  1140  05F1  00F7               	movwf	??_LCD+1
  1141  05F2  0872               	movf	LCD@a,w
  1142  05F3  00F6               	movwf	??_LCD
  1143  05F4  3004               	movlw	4
  1144  05F5  00FF               	movwf	btemp+1
  1145  05F6                     u265:
  1146  05F6  0D77               	rlf	??_LCD+1,w
  1147  05F7  0CF7               	rrf	??_LCD+1,f
  1148  05F8  0CF6               	rrf	??_LCD,f
  1149  05F9  0BFF               	decfsz	btemp+1,f
  1150  05FA  2DF6               	goto	u265
  1151  05FB  0876               	movf	??_LCD,w
  1152  05FC  390F               	andlw	15
  1153  05FD  0088               	movwf	8	;volatile
  1154  05FE                     l777:
  1155                           
  1156                           ;numspilt.c: 25:     pulse();
  1157  05FE  120A  118A  25CC  120A  118A  	fcall	_pulse
  1158  0603                     l779:
  1159                           
  1160                           ;numspilt.c: 26:     PORTD=(a&0X0f);
  1161  0603  0872               	movf	LCD@a,w
  1162  0604  390F               	andlw	15
  1163  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0607  0088               	movwf	8	;volatile
  1166  0608                     l781:
  1167                           
  1168                           ;numspilt.c: 27:     pulse();
  1169  0608  120A  118A  25CC  120A  118A  	fcall	_pulse
  1170  060D                     l24:
  1171  060D  0008               	return
  1172  060E                     __end_of_LCD:
  1173                           
  1174                           	psect	text5
  1175  05CC                     __ptext5:	
  1176 ;; *************** function _pulse *****************
  1177 ;; Defined at:
  1178 ;;		line 13 in file "numspilt.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2   20[None  ] int 
  1185 ;; Registers used:
  1186 ;;		wreg
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0
  1194 ;;      Temps:          2       0       0       0       0
  1195 ;;      Totals:         2       0       0       0       0
  1196 ;;Total ram usage:        2 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_LCD
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _pulse
  1207  05CC                     _pulse:
  1208  05CC                     l767:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _pulse: [wreg]
  1211                           
  1212                           
  1213                           ;numspilt.c: 15:     RC7=1;
  1214  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1215  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1216  05CE  1787               	bsf	7,7	;volatile
  1217  05CF                     l769:
  1218                           
  1219                           ;numspilt.c: 16:     _delay((unsigned long)((1000)*(400000/4000.0)));
  1220  05CF  3082               	movlw	130
  1221  05D0  00F1               	movwf	??_pulse+1
  1222  05D1  30DD               	movlw	221
  1223  05D2  00F0               	movwf	??_pulse
  1224  05D3                     u487:
  1225  05D3  0BF0               	decfsz	??_pulse,f
  1226  05D4  2DD3               	goto	u487
  1227  05D5  0BF1               	decfsz	??_pulse+1,f
  1228  05D6  2DD3               	goto	u487
  1229  05D7  2DD8               	nop2
  1230  05D8                     l771:
  1231                           
  1232                           ;numspilt.c: 17:     RC7=0;
  1233  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1234  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1235  05DA  1387               	bcf	7,7	;volatile
  1236                           
  1237                           ;numspilt.c: 18:     _delay((unsigned long)((1000)*(400000/4000.0)));
  1238  05DB  3082               	movlw	130
  1239  05DC  00F1               	movwf	??_pulse+1
  1240  05DD  30DD               	movlw	221
  1241  05DE  00F0               	movwf	??_pulse
  1242  05DF                     u497:
  1243  05DF  0BF0               	decfsz	??_pulse,f
  1244  05E0  2DDF               	goto	u497
  1245  05E1  0BF1               	decfsz	??_pulse+1,f
  1246  05E2  2DDF               	goto	u497
  1247  05E3  2DE4               	nop2
  1248  05E4                     l21:
  1249  05E4  0008               	return
  1250  05E5                     __end_of_pulse:
  1251  007E                     btemp	set	126	;btemp
  1252  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4602
                                _LCD
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                             12    12      0    3168
                                             12 COMMON     2     2      0
                                              4 BANK0     10    10      0
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  6     2      4    1434
                                              2 COMMON     6     2      4
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _display
     _LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 13 16:00:59 2023

                     l21 05E4                       l24 060D                       l37 07FB  
           ___awdiv@sign 0021                      l276 0714                      l801 06CF  
                    l289 06AB                      l811 06F2                      l803 06D2  
                    l821 070B                      l813 06F8                      l805 06D9  
                    l901 063E                      l823 0710                      l815 06F9  
                    l807 06DD                      l831 0658                      l903 064A  
                    l817 0700                      l809 06E1                      l841 066E  
                    l833 065D                      l771 05D8                      l819 0706  
                    l851 068A                      l843 0671                      l835 065F  
                    l827 0653                      l781 0608                      l773 05E5  
                    l861 06A7                      l853 0690                      l845 0678  
                    l837 0663                      l829 0654                      l767 05CC  
                    l775 05F0                      l791 06BA                      l783 06AC  
                    l855 0697                      l847 067C                      l839 0668  
                    l871 071B                      l769 05CF                      l777 05FE  
                    l793 06BE                      l785 06AF                      l849 0680  
                    l857 069D                      l881 07A4                      l873 0783  
                    l865 0715                      l779 0603                      l795 06C3  
                    l787 06B3                      l859 06A2                      l891 07EE  
                    l883 07B7                      l875 078F                      l797 06C7  
                    l789 06B8                      l885 07CA                      l877 0792  
                    l893 060E                      l799 06C9                      l887 07DD  
                    l879 0793                      l895 061A                      l889 07E6  
                    l897 0626                      l899 0632                      _LCD 05E5  
                    _RC5 003D                      _RC6 003E                      _RC7 003F  
                    u310 06E1                      u311 06E0                      u240 05EC  
                    u241 05E8                      u305 06D3                      u330 06F2  
                    u410 0680                      u331 06F1                      u411 067F  
                    u420 068A                      u325 06E2                      u421 0689  
                    u405 0672                      u254 05EF                      u350 0706  
                    u270 06B3                      u351 0705                      u335 06EE  
                    u271 06B2                      u360 070B                      u280 06BE  
                    u440 069D                      u265 05F6                      u361 070A  
                    u345 06FA                      u281 06BD                      u441 069C  
                    u425 0686                      u290 06CF                      u450 06A2  
                    u370 0658                      u291 06CE                      u451 06A1  
                    u435 0691                      u371 0657                      u380 0663  
                    u460 07FB                      u381 0662                      u461 07FA  
                    u390 066E                      u391 066D                      u465 07F7  
                    u477 07E1                      u487 05D3                      u497 05DF  
           ___awmod@sign 0076                     LCD@a 0072                     LCD@b 0074  
                   ?_LCD 0072                     _main 060E                     btemp 007E  
                   start 0000                    ??_LCD 0076                    ?_main 0070  
        __end_of___awdiv 0715          __end_of___awmod 06AC          ___awdiv@divisor 0077  
        ___awdiv@counter 0020                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088          __end_of_display 07FC  
                  _pulse 05CC                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0653                   ??_main 007E  
       ___awdiv@dividend 0079                   ?_pulse 0070                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_display 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_pulse 05E5                  ??_pulse 0070  
             __pmaintext 060E                  ___awdiv 06AC                  ___awmod 0653  
                __ptext1 0715                  __ptext2 0653                  __ptext3 06AC  
                __ptext4 05E5                  __ptext5 05CC                  _display 0715  
           __size_of_LCD 0029         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07FC              __end_of_LCD 060E                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0077                 ?___awmod 0070  
               ?_display 0070           __size_of_pulse 0019         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of_display 00E7            __size_of_main 0045  
               display@a 0024                 display@b 0026                 display@c 0028  
               display@d 002A                 display@i 002C  
